<svg xmlns="http://www.w3.org/2000/svg" xmlns:fg="http://github.com/jonhoo/inferno" xmlns:xlink="http://www.w3.org/1999/xlink" width="1200" height="1670" onload="init(evt)" version="1.1" viewBox="0 0 1200 1670"><defs><linearGradient id="background" x1="0" x2="0" y1="0" y2="1"><stop offset="5%" stop-color="#eee"/><stop offset="95%" stop-color="#eeeeb0"/></linearGradient></defs><style type="text/css">text { font-family:monospace; font-size:12px } #title { text-anchor:middle; font-size:17px; } #matched { text-anchor:end; } #search { text-anchor:end; opacity:0.1; cursor:pointer; } #search:hover, #search.show { opacity:1; } #subtitle { text-anchor:middle; font-color:rgb(160,160,160); } #unzoom { cursor:pointer; } #frames &gt; *:hover { stroke:black; stroke-width:0.5; cursor:pointer; } .hide { display:none; } .parent { opacity:0.5; }</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect width="100%" height="1670" x="0" y="0" fill="url(#background)"/><text id="title" x="50%" y="24" fill="#000">Flame Graph</text><text id="unzoom" x="10" y="24" fill="#000" class="hide">Reset Zoom</text><text id="search" x="1190" y="24" fill="#000">Search</text><svg id="frames" width="1180" x="10" total_samples="4953"><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="0%" y="1589" fill="#E30007" fg:w="1" fg:x="0"/></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="0%" y="1573" fill="#D90018" fg:w="1" fg:x="0"/></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".02%" y="1509" fill="#DDC136" fg:w="1" fg:x="1"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".02%" y="1493" fill="#F8D406" fg:w="1" fg:x="1"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".02%" y="1477" fill="#D04423" fg:w="1" fg:x="1"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".02%" y="1461" fill="#E88000" fg:w="1" fg:x="1"/></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".02%" y="1445" fill="#CFA02F" fg:w="1" fg:x="1"/></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".02%" y="1429" fill="#E41722" fg:w="1" fg:x="1"/></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".02%" y="1413" fill="#DA1E1A" fg:w="1" fg:x="1"/></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".02%" y="1397" fill="#DC7A13" fg:w="1" fg:x="1"/></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect width=".04%" height="15" x=".02%" y="1589" fill="#FAE42A" fg:w="2" fg:x="1"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect width=".04%" height="15" x=".02%" y="1573" fill="#F0C11C" fg:w="2" fg:x="1"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.04%)</title><rect width=".04%" height="15" x=".02%" y="1557" fill="#D81425" fg:w="2" fg:x="1"/></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.04%)</title><rect width=".04%" height="15" x=".02%" y="1541" fill="#CEBC27" fg:w="2" fg:x="1"/></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.04%)</title><rect width=".04%" height="15" x=".02%" y="1525" fill="#D9CF0D" fg:w="2" fg:x="1"/></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".04%" y="1509" fill="#E74926" fg:w="1" fg:x="2"/></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".04%" y="1493" fill="#E1142E" fg:w="1" fg:x="2"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".04%" y="1477" fill="#D21F29" fg:w="1" fg:x="2"/></g><g><title>BN_is_bit_set (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".061%" y="1589" fill="#DDC82F" fg:w="1" fg:x="3"/></g><g><title>CRYPTO_zalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".081%" y="1589" fill="#E21A05" fg:w="1" fg:x="4"/></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".081%" y="1573" fill="#F9211A" fg:w="1" fg:x="4"/></g><g><title>EVP_DecodeUpdate (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".101%" y="1589" fill="#EBB71C" fg:w="1" fg:x="5"/></g><g><title>OBJ_obj2nid (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".121%" y="1589" fill="#DD0526" fg:w="1" fg:x="6"/></g><g><title>[[heap]] (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".141%" y="1589" fill="#F7122A" fg:w="1" fg:x="7"/></g><g><title>_RNvXNtNtCsgVEU3eNk0wn_5alloc3vec14spec_from_iterINtB4_3VecNtNtNtCs91RHfw1kJHZ_5cargo4core7summary12FeatureValueEINtB2_12SpecFromIterBU_INtNtNtNtCs5SG5FiVtMak_4core4iter8adapters3map3MapINtNtNtB2i_5slice4iter4IterNtNtNtB10_4util9interning14InternedStringENCNCNvBW_17build_feature_map00EE9from_iterB10_ (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".141%" y="1573" fill="#F1832D" fg:w="1" fg:x="7"/></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".162%" y="1573" fill="#F91F1D" fg:w="1" fg:x="8"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".162%" y="1557" fill="#E16F35" fg:w="1" fg:x="8"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".162%" y="1541" fill="#EEA011" fg:w="1" fg:x="8"/></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".162%" y="1525" fill="#D69430" fg:w="1" fg:x="8"/></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".162%" y="1509" fill="#E82431" fg:w="1" fg:x="8"/></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".162%" y="1493" fill="#D16718" fg:w="1" fg:x="8"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".162%" y="1477" fill="#E55808" fg:w="1" fg:x="8"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".162%" y="1461" fill="#D5B513" fg:w="1" fg:x="8"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".162%" y="1445" fill="#FEBF36" fg:w="1" fg:x="8"/></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".162%" y="1429" fill="#F15325" fg:w="1" fg:x="8"/></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".162%" y="1413" fill="#E92427" fg:w="1" fg:x="8"/></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".162%" y="1397" fill="#E20336" fg:w="1" fg:x="8"/></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".162%" y="1381" fill="#F5C028" fg:w="1" fg:x="8"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".04%" height="15" x=".162%" y="1589" fill="#EEA71D" fg:w="2" fg:x="8"/></g><g><title>_RINvNtCsgVEU3eNk0wn_5alloc7raw_vec11finish_growNtNtB4_5alloc6GlobalECsjoxAk7uGzBK_5cargo.llvm.2525401338274485303 (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".182%" y="1573" fill="#E8B633" fg:w="1" fg:x="9"/></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".182%" y="1557" fill="#E73C27" fg:w="1" fg:x="9"/></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".182%" y="1541" fill="#D0450C" fg:w="1" fg:x="9"/></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".182%" y="1525" fill="#EB5D25" fg:w="1" fg:x="9"/></g><g><title>_RINvMNtCsd54lCtrCTyZ_4toml3mapINtB3_3MapNtNtCsgVEU3eNk0wn_5alloc6string6StringNtNtB5_5value5ValueE5entryRBC_EB5_ (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".202%" y="1589" fill="#D57427" fg:w="1" fg:x="10"/></g><g><title>_RINvMNtNtNtCsgVEU3eNk0wn_5alloc11collections5btree6appendINtNtB5_4node7NodeRefNtNtBW_6marker5OwnedNtNtNtCs91RHfw1kJHZ_5cargo4util9interning14InternedStringINtNtB9_3vec3VecB1y_ENtB1g_14LeafOrInternalE9bulk_pushINtNtB5_17dedup_sorted_iter15DedupSortedIterB1y_B2t_INtNtB2w_9into_iter8IntoIterTB1y_B2t_EEENtNtB9_5alloc6GlobalEB1E_ (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".222%" y="1589" fill="#DECF1D" fg:w="1" fg:x="11"/></g><g><title>_RINvMs2_NtCs5u79KavszpI_9hashbrown3setINtB6_7HashSetRNtNtNtNtCs91RHfw1kJHZ_5cargo4core6source9source_id13SourceIdInnerNtNtNtNtCsbGDwpR2ddnS_3std11collections4hash3map11RandomStateE3getBP_EBX_ (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".242%" y="1589" fill="#CE601E" fg:w="1" fg:x="12"/></g><g><title>_RINvMs3_NtNtCs4xTPiOmgDMG_5im_rc5nodes5btreeINtB6_4NodeTNtNtNtCs91RHfw1kJHZ_5cargo4core10package_id9PackageIdINtNtNtBa_4hash3set7HashSetNtNtBW_10dependency10DependencyEEE10path_firstBS_EBY_ (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".263%" y="1589" fill="#DA8A04" fg:w="1" fg:x="13"/></g><g><title>_RINvMs5_NtNtCsaYwJY09qFLB_9hashbrown3raw5innerINtB6_8RawTablejE14reserve_rehashNCINvNtNtCsbXkKDtJpnLc_8indexmap3map4core8get_hashNtNtCsjXfa599Qfro_9toml_edit15internal_string14InternalStringNtNtB27_5table13TableKeyValueE0EB27_ (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".283%" y="1589" fill="#FABF0E" fg:w="1" fg:x="14"/></g><g><title>_RINvNtCs341v5OBXvdv_10serde_json3ser27format_escaped_str_contentsQINtNtCsgVEU3eNk0wn_5alloc3vec3VechENtB2_16CompactFormatterECsjoxAk7uGzBK_5cargo.llvm.17432363443719017836 (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".303%" y="1589" fill="#EF3C28" fg:w="1" fg:x="15"/></g><g><title>_RINvNtCs5SG5FiVtMak_4core3ptr13drop_in_placeNtNtCsd54lCtrCTyZ_4toml5value5ValueECs91RHfw1kJHZ_5cargo.llvm.7281415397597749530 (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".323%" y="1589" fill="#CE1B30" fg:w="1" fg:x="16"/></g><g><title>_RINvNtCs5SG5FiVtMak_4core3ptr13drop_in_placeNtNtNtCs91RHfw1kJHZ_5cargo4core7package12PackageInnerEBM_.llvm.11294386640889789425 (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".343%" y="1589" fill="#E12308" fg:w="1" fg:x="17"/></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".343%" y="1573" fill="#FAD518" fg:w="1" fg:x="17"/></g><g><title>_RINvNtCs5SG5FiVtMak_4core3ptr13drop_in_placeNtNtNtCs91RHfw1kJHZ_5cargo4core7summary5InnerEBM_.llvm.11294386640889789425 (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".363%" y="1589" fill="#F77B16" fg:w="1" fg:x="18"/></g><g><title>_int_free (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".363%" y="1573" fill="#E78A26" fg:w="1" fg:x="18"/></g><g><title>_RINvNtCs5SG5FiVtMak_4core3ptr13drop_in_placeNtNtNtCs91RHfw1kJHZ_5cargo4core8manifest10TargetKindEBM_.llvm.17410322496986008596 (2 samples, 0.04%)</title><rect width=".04%" height="15" x=".384%" y="1589" fill="#E7912E" fg:w="2" fg:x="19"/></g><g><title>_RINvNtCsgVEU3eNk0wn_5alloc7raw_vec11finish_growNtNtB4_5alloc6GlobalECsd54lCtrCTyZ_4toml.llvm.5451170430713821559 (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".424%" y="1589" fill="#FB760B" fg:w="1" fg:x="21"/></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".424%" y="1573" fill="#D99319" fg:w="1" fg:x="21"/></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".424%" y="1557" fill="#F75125" fg:w="1" fg:x="21"/></g><g><title>_RINvNtCsgVEU3eNk0wn_5alloc7raw_vec11finish_growNtNtB4_5alloc6GlobalECsjXfa599Qfro_9toml_edit.llvm.9746813815476944100 (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".444%" y="1589" fill="#D10C26" fg:w="1" fg:x="22"/></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".444%" y="1573" fill="#E30109" fg:w="1" fg:x="22"/></g><g><title>_RINvNtCslAJt4rsqvXy_6winnow5token12take_while1_TINtNtNtCs5SG5FiVtMak_4core3ops5range14RangeInclusivehEBK_BK_hhEINtNtB4_6stream7LocatedRNtB1O_4BStrENtNtB4_5error12ContextErrorKb0_ECsjXfa599Qfro_9toml_edit (2 samples, 0.04%)</title><rect width=".04%" height="15" x=".464%" y="1589" fill="#F82F2B" fg:w="2" fg:x="23"/></g><g><title>_RINvNtNtCslAJt4rsqvXy_6winnow10combinator5multi8repeat0_INtNtB6_6stream7LocatedRNtBV_4BStrETuuEuNtNtB6_5error12ContextErrorTNCNvNtNtCsjXfa599Qfro_9toml_edit6parser8document8documents0_0NCNvB22_8parse_ws0EEB26_ (2 samples, 0.04%)</title><rect width=".04%" height="15" x=".505%" y="1589" fill="#DD0A1E" fg:w="2" fg:x="25"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".525%" y="1573" fill="#D2E501" fg:w="1" fg:x="26"/></g><g><title>_RINvXNtNtNtCs91RHfw1kJHZ_5cargo4util6config2deNtB3_12DeserializerNtNtCs4tzRlw4u1YC_5serde2de12Deserializer15deserialize_mapNtNvXNvNtB5_6target1__NtB24_15TargetCfgConfigNtB13_11Deserialize11deserialize9___VisitorEB9_ (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".545%" y="1589" fill="#DE9425" fg:w="1" fg:x="27"/></g><g><title>_int_free (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".545%" y="1573" fill="#EA4321" fg:w="1" fg:x="27"/></g><g><title>_RINvXNvXNtNtCs91RHfw1kJHZ_5cargo4util4tomlINtB6_14TomlDependencypENtNtCs4tzRlw4u1YC_5serde2de11Deserialize11deserializeINtB3_21TomlDependencyVisitorNtNtCsgVEU3eNk0wn_5alloc6string6StringENtB14_7Visitor9visit_mapINtNtB14_5value15MapDeserializerINtNtNtNtCs5SG5FiVtMak_4core4iter8adapters3map3MapINtNtNtNtB2q_11collections5btree3map8IntoIterNtCsdh2kuPybrnA_11serde_value5ValueB5q_ENCINvXs9_NtB5s_2deINtB6d_17ValueDeserializerNtNtCsd54lCtrCTyZ_4toml2de5ErrorENtB14_12Deserializer15deserialize_anyB1T_E0EB6M_EEBa_ (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".565%" y="1589" fill="#F76223" fg:w="1" fg:x="28"/></g><g><title>_RINvXs0_NtNtNtCs5SG5FiVtMak_4core4iter8adapters3mapINtB6_3MapINtNtB8_6filter6FilterIBY_IBY_INtNtB8_10filter_map9FilterMapIB1s_INtNtNtNtCsbGDwpR2ddnS_3std11collections4hash3map7IterMutNtCs7eLoBKV2qX3_6semver7VersionNtNtNtNtCs91RHfw1kJHZ_5cargo7sources8registry5index17MaybeIndexSummaryENCNvMB3s_NtB3s_13RegistryIndex9summaries0ENCB4B_s_0ENCB4B_s0_0ENCNvB4D_23query_inner_with_online0ENCB5C_s_0ENCB5C_s0_0ENtNtNtBa_6traits8iterator8Iterator8try_folduNCINvNvB6u_4find5checkNtNtNtB3y_4core7summary7SummaryQNCB5C_s1_0E0INtNtNtBc_3ops12control_flow11ControlFlowB7y_EEB3y_ (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".586%" y="1589" fill="#F78A34" fg:w="1" fg:x="29"/></g><g><title>_RINvXs0_NvXNvNtNtCs91RHfw1kJHZ_5cargo4util4tomlsg_1__NtBb_11TomlPackageNtNtCs4tzRlw4u1YC_5serde2de11Deserialize11deserializeNtB6_9___VisitorNtB19_7Visitor9visit_mapINtCs5VGRQ9yd1Sa_13serde_ignored9MapAccessQNtNtCsd54lCtrCTyZ_4toml5value15MapDeserializerNCNvBb_22read_manifest_from_strs_0EEBf_.llvm.17410322496986008596 (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".606%" y="1589" fill="#D54F1E" fg:w="1" fg:x="30"/></g><g><title>_RINvXs8_Cs5VGRQ9yd1Sa_13serde_ignoredINtB6_10CaptureKeyNtNvXNvNtNtCs91RHfw1kJHZ_5cargo4util4tomlsn_1__NtBY_10TomlTargetNtNtCs4tzRlw4u1YC_5serde2de11Deserialize11deserialize14___FieldVisitorENtB1V_7Visitor12visit_stringNtNtCsd54lCtrCTyZ_4toml2de5ErrorEB12_ (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".626%" y="1589" fill="#F6B117" fg:w="1" fg:x="31"/></g><g><title>_RINvXs9_NtCsdh2kuPybrnA_11serde_value2deINtB6_17ValueDeserializerNtNtCsd54lCtrCTyZ_4toml2de5ErrorENtNtCs4tzRlw4u1YC_5serde2de12Deserializer15deserialize_anyNtNvXNvNtNtCs91RHfw1kJHZ_5cargo4util4tomls_1__INtB2B_22DetailedTomlDependencypENtB1A_11Deserialize11deserialize14___FieldVisitorEB2F_ (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".646%" y="1589" fill="#E63E1B" fg:w="1" fg:x="32"/></g><g><title>_int_free (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".646%" y="1573" fill="#D89A08" fg:w="1" fg:x="32"/></g><g><title>_RINvXs_NtNtCs4xTPiOmgDMG_5im_rc3ord3mapTNtNtNtCs91RHfw1kJHZ_5cargo4core10package_id9PackageIdINtB5_6OrdMapBC_INtNtNtNtCsbGDwpR2ddnS_3std11collections4hash3set7HashSetNtNtBG_10dependency10DependencyEEENtNtNtB9_5nodes5btree10BTreeValue10search_keyBC_EBI_ (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".666%" y="1589" fill="#F4232D" fg:w="1" fg:x="33"/></g><g><title>_RINvXs_NtNtCs4xTPiOmgDMG_5im_rc3ord3mapTNtNtNtCs91RHfw1kJHZ_5cargo4core10package_id9PackageIdINtNtNtB9_4hash3set7HashSetNtNtBG_10dependency10DependencyEENtNtNtB9_5nodes5btree10BTreeValue10search_keyBC_EBI_ (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".686%" y="1589" fill="#FB730C" fg:w="1" fg:x="34"/></g><g><title>_RINvXsh_NtCsd54lCtrCTyZ_4toml5valueNtB6_5ValueNtNtCs4tzRlw4u1YC_5serde2de12Deserializer15deserialize_anyNtNvXNvNtNtNtCs91RHfw1kJHZ_5cargo4core8resolver6encodes3_1__NtB1L_19EncodableDependencyNtBK_11Deserialize11deserialize9___VisitorEB1R_ (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".707%" y="1589" fill="#F03632" fg:w="1" fg:x="35"/></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".707%" y="1573" fill="#E95434" fg:w="1" fg:x="35"/></g><g><title>_RINvXsl_NtCsd54lCtrCTyZ_4toml5valueNtB6_15MapDeserializerNtNtCs4tzRlw4u1YC_5serde2de9MapAccess15next_value_seedINtCs5VGRQ9yd1Sa_13serde_ignored11TrackedSeedINtNtCs5SG5FiVtMak_4core6marker11PhantomDataINtNtCsgVEU3eNk0wn_5alloc3vec3VecNtNtNtCs91RHfw1kJHZ_5cargo4util9interning14InternedStringEENCNvNtB3N_4toml22read_manifest_from_strs_0EEB3P_ (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".727%" y="1589" fill="#CF752F" fg:w="1" fg:x="36"/></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".727%" y="1573" fill="#F92B27" fg:w="1" fg:x="36"/></g><g><title>_RINvXsz_NtCsd54lCtrCTyZ_4toml5valueNtB6_17ValueSerializeMapNtNtCs4tzRlw4u1YC_5serde3ser15SerializeStruct15serialize_fieldINtNtCs5SG5FiVtMak_4core6option6OptionINtNtCsgVEU3eNk0wn_5alloc3vec3VecNtNtNtNtCs91RHfw1kJHZ_5cargo4core8resolver6encode18EncodablePackageIdEEEB3c_ (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".747%" y="1589" fill="#D1262C" fg:w="1" fg:x="37"/></g><g><title>_RINvYINtNtCs341v5OBXvdv_10serde_json3ser8CompoundQINtNtCsgVEU3eNk0wn_5alloc3vec3VechENtB6_16CompactFormatterENtNtCs4tzRlw4u1YC_5serde3ser12SerializeMap15serialize_entryeINtNtCs5SG5FiVtMak_4core6option6OptionIBN_ReEEECsjoxAk7uGzBK_5cargo (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".767%" y="1589" fill="#ECD417" fg:w="1" fg:x="38"/></g><g><title>_RINvYNtNtNtNtCsbGDwpR2ddnS_3std11collections4hash3map11RandomStateNtNtCs5SG5FiVtMak_4core4hash11BuildHasher8hash_oneRReECs91RHfw1kJHZ_5cargo (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".787%" y="1589" fill="#F24F15" fg:w="1" fg:x="39"/></g><g><title>_RNCNvNtNtCsjXfa599Qfro_9toml_edit6parser5value5value0B7_ (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".808%" y="1589" fill="#D36023" fg:w="1" fg:x="40"/></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".808%" y="1573" fill="#FDD728" fg:w="1" fg:x="40"/></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".808%" y="1557" fill="#D35115" fg:w="1" fg:x="40"/></g><g><title>_RNvMs5_NtNtCs91RHfw1kJHZ_5cargo4util9interningNtB5_14InternedString3new (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".828%" y="1589" fill="#D0BE26" fg:w="1" fg:x="41"/></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".828%" y="1573" fill="#EBD526" fg:w="1" fg:x="41"/></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".828%" y="1557" fill="#ED7A26" fg:w="1" fg:x="41"/></g><g><title>_RNvMs6_NtCsgVEU3eNk0wn_5alloc2rcINtB5_2RcNtNtNtCs91RHfw1kJHZ_5cargo4util4toml12TomlManifestE3newBJ_ (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".848%" y="1589" fill="#F4DA23" fg:w="1" fg:x="42"/></g><g><title>_RNvMs_NtNtNtCs91RHfw1kJHZ_5cargo4util6config2deNtB4_15ConfigMapAccess10new_struct (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".868%" y="1589" fill="#F0442F" fg:w="1" fg:x="43"/></g><g><title>_RNvMse_NtCsgVEU3eNk0wn_5alloc2rcINtB5_2RcNtNtNtCs91RHfw1kJHZ_5cargo4core10dependency5InnerE8make_mutBJ_.llvm.14666074212130275466 (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".888%" y="1589" fill="#D21035" fg:w="1" fg:x="44"/></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".888%" y="1573" fill="#EB7C0C" fg:w="1" fg:x="44"/></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".888%" y="1557" fill="#E0A90B" fg:w="1" fg:x="44"/></g><g><title>_RNvMse_NtCsgVEU3eNk0wn_5alloc2rcINtB5_2RcNtNtNtCs91RHfw1kJHZ_5cargo4core7summary5InnerE8make_mutBJ_.llvm.11294386640889789425 (2 samples, 0.04%)</title><rect width=".04%" height="15" x=".908%" y="1589" fill="#FAA602" fg:w="2" fg:x="45"/></g><g><title>_RNvMsi_NtNtNtCsgVEU3eNk0wn_5alloc11collections5btree3mapINtB5_8BTreeMapNtNtBb_6string6StringINtNtNtCs91RHfw1kJHZ_5cargo4util4toml14MaybeWorkspaceNtB1v_14TomlDependencyNtB1v_23TomlWorkspaceDependencyEE6insertB1z_ (2 samples, 0.04%)</title><rect width=".04%" height="15" x=".949%" y="1589" fill="#F2D81D" fg:w="2" fg:x="47"/></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".969%" y="1573" fill="#E6741B" fg:w="1" fg:x="48"/></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".969%" y="1557" fill="#E46330" fg:w="1" fg:x="48"/></g><g><title>_RNvMsi_NtNtNtCsgVEU3eNk0wn_5alloc11collections5btree3mapINtB5_8BTreeMapNtNtNtCs91RHfw1kJHZ_5cargo4util9interning14InternedStringINtNtBb_3vec3VecB17_EE6insertB1d_ (1 samples, 0.02%)</title><rect width=".02%" height="15" x=".989%" y="1589" fill="#FD0B06" fg:w="1" fg:x="49"/></g><g><title>_RNvMsu_NtNtCs91RHfw1kJHZ_5cargo4util4tomlNtB5_12TomlManifest16to_real_manifest (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.01%" y="1589" fill="#F78F27" fg:w="1" fg:x="50"/></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.01%" y="1573" fill="#EC610A" fg:w="1" fg:x="50"/></g><g><title>_RNvMsx_NtNtNtCsgVEU3eNk0wn_5alloc11collections5btree3mapINtB5_8IntoIterNtNtBb_6string6StringNtNtNtCs91RHfw1kJHZ_5cargo4util15command_prelude11CommandInfoE10dying_nextCsjoxAk7uGzBK_5cargo.llvm.10816283098724407795 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.03%" y="1589" fill="#E9D013" fg:w="1" fg:x="51"/></g><g><title>_RNvMsx_NtNtNtCsgVEU3eNk0wn_5alloc11collections5btree3mapINtB5_8IntoIterNtNtNtCs91RHfw1kJHZ_5cargo4core10package_id9PackageIdNtNtNtB1d_3ops21cargo_output_metadata19MetadataResolveNodeE10dying_nextB1d_.llvm.11294386640889789425 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.05%" y="1589" fill="#D8A402" fg:w="1" fg:x="52"/></g><g><title>_RNvNtCs7eLoBKV2qX3_6semver4eval12matches_impl.llvm.5927157812650432968 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.07%" y="1589" fill="#DC8105" fg:w="1" fg:x="53"/></g><g><title>_RNvNtNtCs91RHfw1kJHZ_5cargo4core7summary17build_feature_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.09%" y="1589" fill="#F2110A" fg:w="1" fg:x="54"/></g><g><title>_RNvNtNtCs91RHfw1kJHZ_5cargo4core8resolver8activate (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.11%" y="1589" fill="#F26B00" fg:w="1" fg:x="55"/></g><g><title>_RNvNtNtNtCsbiWzh4JGXYx_6memchr6memchr3x863avx6memchr (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.131%" y="1589" fill="#FB1C1F" fg:w="1" fg:x="56"/></g><g><title>_RNvXs0_NtCs7eLoBKV2qX3_6semver10identifierNtB5_10IdentifierNtNtNtCs5SG5FiVtMak_4core3ops4drop4Drop4drop (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.151%" y="1589" fill="#E9DF0A" fg:w="1" fg:x="57"/></g><g><title>_RNvXs1_NtNtNtCs91RHfw1kJHZ_5cargo4core6source9source_idNtB5_8SourceIdNtNtCs5SG5FiVtMak_4core3cmp3Ord3cmp (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.171%" y="1589" fill="#D7151B" fg:w="1" fg:x="58"/></g><g><title>_RNvXs3_NtNtCs5SG5FiVtMak_4core4hash3sipINtB5_6HasherNtB5_11Sip13RoundsENtB7_6Hasher5writeCs91RHfw1kJHZ_5cargo.llvm.11294386640889789425 (2 samples, 0.04%)</title><rect width=".04%" height="15" x="1.191%" y="1589" fill="#E81715" fg:w="2" fg:x="59"/></g><g><title>_RNvXs3_NtNtCs5SG5FiVtMak_4core4hash3sipINtB5_6HasherNtB5_11Sip13RoundsENtB7_6Hasher5writeCs91RHfw1kJHZ_5cargo.llvm.14666074212130275466 (2 samples, 0.04%)</title><rect width=".04%" height="15" x="1.232%" y="1589" fill="#F40517" fg:w="2" fg:x="61"/></g><g><title>_RNvXs3_NtNtCs5SG5FiVtMak_4core4hash3sipINtB5_6HasherNtB5_11Sip13RoundsENtB7_6Hasher5writeCs91RHfw1kJHZ_5cargo.llvm.6137529569853853886 (3 samples, 0.06%)</title><rect width=".061%" height="15" x="1.272%" y="1589" fill="#E2512E" fg:w="3" fg:x="63"/></g><g><title>_RNvXs5_NtCs341v5OBXvdv_10serde_json4readNtB5_9SliceReadNtB5_4Read9parse_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.333%" y="1589" fill="#F7461E" fg:w="1" fg:x="66"/></g><g><title>_RNvXs_NtNtCs4xTPiOmgDMG_5im_rc3ord3mapTNtNtNtCs91RHfw1kJHZ_5cargo4core10package_id9PackageIdINtNtNtNtCsbGDwpR2ddnS_3std11collections4hash3set7HashSetNtNtBF_10dependency10DependencyEENtNtNtB8_5nodes5btree10BTreeValue12search_valueBH_ (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.353%" y="1589" fill="#D44413" fg:w="1" fg:x="67"/></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.353%" y="1573" fill="#F0BB0D" fg:w="1" fg:x="67"/></g><g><title>_RNvXs_NtNtCslAJt4rsqvXy_6winnow10combinator6branchTINtNtB6_6parser3MapNCINvNtB6_5multi6repeatINtNtB8_6stream7LocatedRNtB1w_4BStrERShuNtNtB8_5error12ContextErrorNCINvB4_3altB1t_B23_B27_TNCINvNtB8_5token10take_whileThhEB1t_B27_INtNtNtCs5SG5FiVtMak_4core3ops5range9RangeFromjEE0INtBQ_5ValueNvNtNtCsjXfa599Qfro_9toml_edit6parser6trivia7newlineB1t_hB23_B27_EEE0B3B_E0NCNvB4D_18ws_comment_newline0B1t_uuB27_EIB4q_NvB4D_7commentB1t_B23_uB27_EEINtB4_3AltB1t_uB27_E6choiceB4H_ (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.373%" y="1589" fill="#DF711A" fg:w="1" fg:x="68"/></g><g><title>_RNvXse_NtCsaBmMM8Aev1H_14cargo_platform3cfgNtB5_7CfgExprNtNtCs5SG5FiVtMak_4core5clone5Clone5clone.llvm.7281415397597749530 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.393%" y="1589" fill="#CEC002" fg:w="1" fg:x="69"/></g><g><title>_RNvXsj_NtCsd54lCtrCTyZ_4toml5valueNtB5_15SeqDeserializerNtNtCs4tzRlw4u1YC_5serde2de9SeqAccess9size_hint (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.413%" y="1589" fill="#F16C04" fg:w="1" fg:x="70"/></g><g><title>_RNvXsm_NtCsgVEU3eNk0wn_5alloc3vecINtB5_3VecINtNtCs5SG5FiVtMak_4core6option6OptionTNtNtNtNtCs4tzRlw4u1YC_5serde9___private2de7content7ContentB1i_EEENtNtNtBK_3ops4drop4Drop4dropCs91RHfw1kJHZ_5cargo (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.433%" y="1589" fill="#F7AD31" fg:w="1" fg:x="71"/></g><g><title>_RNvXso_NtCsgVEU3eNk0wn_5alloc2rcINtB5_2RcINtNtNtCs4xTPiOmgDMG_5im_rc5nodes4hamt4NodeINtNtNtBK_4hash3set5ValueNtNtNtCs91RHfw1kJHZ_5cargo4core10dependency10DependencyEEENtNtNtCs5SG5FiVtMak_4core3ops4drop4Drop4dropB1P_ (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.454%" y="1589" fill="#E07223" fg:w="1" fg:x="72"/></g><g><title>_RNvXsq_NtCs2J9mQIaYYSz_7bitmaps6bitmapINtB5_4IterINtNtCs4DRpDyIi0zB_7typenum4uint4UIntIBM_IBM_IBM_IBM_IBM_NtBO_5UTermNtNtBQ_3bit2B1ENtB1T_2B0EB26_EB26_EB26_EB26_EENtNtNtNtCs5SG5FiVtMak_4core4iter6traits8iterator8Iterator4nextCs91RHfw1kJHZ_5cargo (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.474%" y="1589" fill="#F59F1B" fg:w="1" fg:x="73"/></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.494%" y="1589" fill="#F5AC2C" fg:w="1" fg:x="74"/></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.494%" y="1573" fill="#EC170B" fg:w="1" fg:x="74"/></g><g><title>asn1_check_tlen (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.514%" y="1589" fill="#CD7526" fg:w="1" fg:x="75"/></g><g><title>asn1_item_embed_d2i (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.534%" y="1589" fill="#ED4819" fg:w="1" fg:x="76"/></g><g><title>asn1_template_ex_d2i (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.555%" y="1589" fill="#F44609" fg:w="1" fg:x="77"/></g><g><title>core::str::converts::from_utf8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.575%" y="1589" fill="#D97D27" fg:w="1" fg:x="78"/></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.575%" y="1573" fill="#EB240A" fg:w="1" fg:x="78"/></g><g><title>entry_fromname (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.595%" y="1589" fill="#FB7B2F" fg:w="1" fg:x="79"/></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.595%" y="1573" fill="#DD0D0D" fg:w="1" fg:x="79"/></g><g><title>git_fs_path_prettify (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.615%" y="1589" fill="#EE8309" fg:w="1" fg:x="80"/></g><g><title>__realpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.615%" y="1573" fill="#D33208" fg:w="1" fg:x="80"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.615%" y="1557" fill="#F5B618" fg:w="1" fg:x="80"/></g><g><title>git_odb__hashobj (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.635%" y="1589" fill="#F20E25" fg:w="1" fg:x="81"/></g><g><title>__GI___snprintf (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.635%" y="1573" fill="#F6E40C" fg:w="1" fg:x="81"/></g><g><title>_IO_vsnprintf (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.635%" y="1557" fill="#D5370F" fg:w="1" fg:x="81"/></g><g><title>_IO_vfprintf_internal (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.635%" y="1541" fill="#D10903" fg:w="1" fg:x="81"/></g><g><title>_itoa_word (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.635%" y="1525" fill="#E63B1E" fg:w="1" fg:x="81"/></g><g><title>git_packfile_free (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.656%" y="1589" fill="#D17915" fg:w="1" fg:x="82"/></g><g><title>_int_free (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.656%" y="1573" fill="#DC6D0D" fg:w="1" fg:x="82"/></g><g><title>git_tree_entry_bypath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.676%" y="1589" fill="#E81201" fg:w="1" fg:x="83"/></g><g><title>__strchr_avx2 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.676%" y="1573" fill="#D7292A" fg:w="1" fg:x="83"/></g><g><title>inflate (2 samples, 0.04%)</title><rect width=".04%" height="15" x="1.696%" y="1589" fill="#E07B24" fg:w="2" fg:x="84"/></g><g><title>inflate_fast (3 samples, 0.06%)</title><rect width=".061%" height="15" x="1.736%" y="1589" fill="#F07D03" fg:w="3" fg:x="86"/></g><g><title>pack_entry_find_offset (2 samples, 0.04%)</title><rect width=".04%" height="15" x="1.797%" y="1589" fill="#CD6232" fg:w="2" fg:x="89"/></g><g><title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect width=".04%" height="15" x="1.797%" y="1573" fill="#CDB925" fg:w="2" fg:x="89"/></g><g><title>sha1_compression_states (3 samples, 0.06%)</title><rect width=".061%" height="15" x="1.837%" y="1589" fill="#EECF0F" fg:w="3" fg:x="91"/></g><g><title>ssl_cipher_process_rulestr (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.898%" y="1589" fill="#D5C72A" fg:w="1" fg:x="94"/></g><g><title>__strncmp_avx2 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.898%" y="1573" fill="#EBC90B" fg:w="1" fg:x="94"/></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.918%" y="1573" fill="#CF2E0B" fg:w="1" fg:x="95"/></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.918%" y="1557" fill="#F12323" fg:w="1" fg:x="95"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.918%" y="1541" fill="#F3202F" fg:w="1" fg:x="95"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.918%" y="1525" fill="#F7CA17" fg:w="1" fg:x="95"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.918%" y="1509" fill="#DB660B" fg:w="1" fg:x="95"/></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.918%" y="1493" fill="#F36E2C" fg:w="1" fg:x="95"/></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.918%" y="1477" fill="#DE4A36" fg:w="1" fg:x="95"/></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.918%" y="1461" fill="#D8630C" fg:w="1" fg:x="95"/></g><g><title>std::fs::read::inner (2 samples, 0.04%)</title><rect width=".04%" height="15" x="1.918%" y="1589" fill="#E2161A" fg:w="2" fg:x="95"/></g><g><title>std::fs::File::open (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.938%" y="1573" fill="#D9A30A" fg:w="1" fg:x="96"/></g><g><title>std::fs::OpenOptions::new (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.938%" y="1557" fill="#D51935" fg:w="1" fg:x="96"/></g><g><title>std::sys::unix::fs::OpenOptions::new (1 samples, 0.02%)</title><rect width=".02%" height="15" x="1.938%" y="1541" fill="#FC691A" fg:w="1" fg:x="96"/></g><g><title>cargo (100 samples, 2.02%)</title><rect width="2.019%" height="15" x="0%" y="1605" fill="#DC272B" fg:w="100" fg:x="0"/><text x=".25%" y="1615.5">c..</text></g><g><title>ubc_check (3 samples, 0.06%)</title><rect width=".061%" height="15" x="1.958%" y="1589" fill="#E54430" fg:w="3" fg:x="97"/></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="2.039%" y="1093" fill="#FC0820" fg:w="1" fg:x="101"/></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect width=".02%" height="15" x="2.12%" y="1045" fill="#DF142B" fg:w="1" fg:x="105"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="2.443%" y="805" fill="#E55131" fg:w="3" fg:x="121"/></g><g><title>?? (7 samples, 0.14%)</title><rect width=".141%" height="15" x="2.443%" y="837" fill="#EC1C24" fg:w="7" fg:x="121"/></g><g><title>?? (7 samples, 0.14%)</title><rect width=".141%" height="15" x="2.443%" y="821" fill="#F9B91A" fg:w="7" fg:x="121"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="2.503%" y="805" fill="#F9AE21" fg:w="4" fg:x="124"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="2.503%" y="789" fill="#E9C925" fg:w="4" fg:x="124"/></g><g><title>&lt;u32 as core::num::FromStrRadixHelper&gt;::checked_mul (5 samples, 0.10%)</title><rect width=".101%" height="15" x="2.726%" y="773" fill="#DD4E1A" fg:w="5" fg:x="135"/></g><g><title>core::num::&lt;impl u32&gt;::checked_mul (5 samples, 0.10%)</title><rect width=".101%" height="15" x="2.726%" y="757" fill="#FA7F1E" fg:w="5" fg:x="135"/></g><g><title>core::num::&lt;impl u32&gt;::overflowing_mul (5 samples, 0.10%)</title><rect width=".101%" height="15" x="2.726%" y="741" fill="#E6312C" fg:w="5" fg:x="135"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (24 samples, 0.48%)</title><rect width=".485%" height="15" x="2.382%" y="901" fill="#E54317" fg:w="24" fg:x="118"/></g><g><title>&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as serde::de::Deserialize&gt;::deserialize (21 samples, 0.42%)</title><rect width=".424%" height="15" x="2.443%" y="885" fill="#F9532F" fg:w="21" fg:x="121"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (21 samples, 0.42%)</title><rect width=".424%" height="15" x="2.443%" y="869" fill="#D72B03" fg:w="21" fg:x="121"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (21 samples, 0.42%)</title><rect width=".424%" height="15" x="2.443%" y="853" fill="#EE9A0D" fg:w="21" fg:x="121"/></g><g><title>serde::de::Visitor::visit_borrowed_str (14 samples, 0.28%)</title><rect width=".283%" height="15" x="2.584%" y="837" fill="#DB3802" fg:w="14" fg:x="128"/></g><g><title>&lt;&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as serde::de::Deserialize&gt;::deserialize::Visitor&lt;T&gt; as serde::de::Visitor&gt;::visit_str (14 samples, 0.28%)</title><rect width=".283%" height="15" x="2.584%" y="821" fill="#E90004" fg:w="14" fg:x="128"/></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u32&gt;::from_str (14 samples, 0.28%)</title><rect width=".283%" height="15" x="2.584%" y="805" fill="#EB1E07" fg:w="14" fg:x="128"/></g><g><title>core::num::from_str_radix (14 samples, 0.28%)</title><rect width=".283%" height="15" x="2.584%" y="789" fill="#FA4F0D" fg:w="14" fg:x="128"/></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (2 samples, 0.04%)</title><rect width=".04%" height="15" x="2.827%" y="773" fill="#D39222" fg:w="2" fg:x="140"/></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (2 samples, 0.04%)</title><rect width=".04%" height="15" x="2.827%" y="757" fill="#E41626" fg:w="2" fg:x="140"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect width=".02%" height="15" x="2.867%" y="885" fill="#EBA805" fg:w="1" fg:x="142"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (2 samples, 0.04%)</title><rect width=".04%" height="15" x="2.887%" y="885" fill="#DD9B10" fg:w="2" fg:x="143"/></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.02%)</title><rect width=".02%" height="15" x="2.907%" y="869" fill="#D7D735" fg:w="1" fg:x="144"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="2.907%" y="853" fill="#DF040A" fg:w="1" fg:x="144"/></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="2.907%" y="837" fill="#EA6706" fg:w="1" fg:x="144"/></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="2.907%" y="821" fill="#E36100" fg:w="1" fg:x="144"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (3 samples, 0.06%)</title><rect width=".061%" height="15" x="2.928%" y="869" fill="#EA9635" fg:w="3" fg:x="145"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (36 samples, 0.73%)</title><rect width=".727%" height="15" x="2.322%" y="917" fill="#E4C936" fg:w="36" fg:x="115"/></g><g><title>?? (9 samples, 0.18%)</title><rect width=".182%" height="15" x="2.867%" y="901" fill="#DE1625" fg:w="9" fg:x="142"/></g><g><title>sonic_rs::reader::Reader::next (6 samples, 0.12%)</title><rect width=".121%" height="15" x="2.928%" y="885" fill="#ED3520" fg:w="6" fg:x="145"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="2.988%" y="869" fill="#E91935" fg:w="3" fg:x="148"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (3 samples, 0.06%)</title><rect width=".061%" height="15" x="2.988%" y="853" fill="#D22822" fg:w="3" fg:x="148"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (3 samples, 0.06%)</title><rect width=".061%" height="15" x="2.988%" y="837" fill="#F1DC2C" fg:w="3" fg:x="148"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.049%" y="853" fill="#EB1C23" fg:w="1" fg:x="151"/></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.06%)</title><rect width=".061%" height="15" x="3.19%" y="837" fill="#D23811" fg:w="3" fg:x="158"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for ()&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.412%" y="789" fill="#E0821D" fg:w="1" fg:x="169"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_unit (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.412%" y="773" fill="#EBD408" fg:w="1" fg:x="169"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.412%" y="757" fill="#DF2132" fg:w="1" fg:x="169"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.412%" y="741" fill="#DB950D" fg:w="1" fg:x="169"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.412%" y="725" fill="#FA9C1D" fg:w="1" fg:x="169"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.412%" y="709" fill="#D8C113" fg:w="1" fg:x="169"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.412%" y="693" fill="#D8870E" fg:w="1" fg:x="169"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.473%" y="693" fill="#F12F05" fg:w="1" fg:x="172"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.493%" y="693" fill="#E92A23" fg:w="1" fg:x="173"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="3.473%" y="709" fill="#E70D06" fg:w="3" fg:x="172"/></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.513%" y="693" fill="#CFB528" fg:w="1" fg:x="174"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.533%" y="709" fill="#FEAD31" fg:w="1" fg:x="175"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.553%" y="693" fill="#DD0126" fg:w="1" fg:x="176"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.553%" y="677" fill="#CE7C2E" fg:w="1" fg:x="176"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.553%" y="661" fill="#F9150B" fg:w="1" fg:x="176"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.553%" y="645" fill="#DEC928" fg:w="1" fg:x="176"/></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.553%" y="629" fill="#EB3D1D" fg:w="1" fg:x="176"/></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.553%" y="613" fill="#DBCF03" fg:w="1" fg:x="176"/></g><g><title>?? (7 samples, 0.14%)</title><rect width=".141%" height="15" x="3.473%" y="741" fill="#DE382E" fg:w="7" fg:x="172"/></g><g><title>?? (7 samples, 0.14%)</title><rect width=".141%" height="15" x="3.473%" y="725" fill="#EF4C36" fg:w="7" fg:x="172"/></g><g><title>sonic_rs::util::string::parse_valid_escaped_string (3 samples, 0.06%)</title><rect width=".061%" height="15" x="3.553%" y="709" fill="#E77C1B" fg:w="3" fg:x="176"/></g><g><title>sonic_rs::util::string::parse_string_unchecked (2 samples, 0.04%)</title><rect width=".04%" height="15" x="3.574%" y="693" fill="#F9C306" fg:w="2" fg:x="177"/></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.06%)</title><rect width=".061%" height="15" x="3.614%" y="741" fill="#EDAE2F" fg:w="3" fg:x="179"/></g><g><title>_rjem_je_ecache_alloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="3.695%" y="261" fill="#CEC91F" fg:w="2" fg:x="183"/></g><g><title>extent_recycle (2 samples, 0.04%)</title><rect width=".04%" height="15" x="3.695%" y="245" fill="#E73934" fg:w="2" fg:x="183"/></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.715%" y="229" fill="#F8B116" fg:w="1" fg:x="184"/></g><g><title>extent_activate_locked (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.715%" y="213" fill="#D7D325" fg:w="1" fg:x="184"/></g><g><title>_rjem_je_emap_update_edata_state (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.715%" y="197" fill="#F18033" fg:w="1" fg:x="184"/></g><g><title>rtree_leaf_elm_state_update (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.715%" y="181" fill="#E3A51F" fg:w="1" fg:x="184"/></g><g><title>extent_deactivate_locked (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.735%" y="197" fill="#E4A718" fg:w="1" fg:x="185"/></g><g><title>extent_deactivate_locked_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.735%" y="181" fill="#E48F0C" fg:w="1" fg:x="185"/></g><g><title>_rjem_je_eset_insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.735%" y="165" fill="#F99508" fg:w="1" fg:x="185"/></g><g><title>_rjem_je_malloc_default (4 samples, 0.08%)</title><rect width=".081%" height="15" x="3.695%" y="485" fill="#F3232C" fg:w="4" fg:x="183"/></g><g><title>imalloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="3.695%" y="469" fill="#F65909" fg:w="4" fg:x="183"/></g><g><title>imalloc_body (4 samples, 0.08%)</title><rect width=".081%" height="15" x="3.695%" y="453" fill="#E9D50D" fg:w="4" fg:x="183"/></g><g><title>imalloc_no_sample (4 samples, 0.08%)</title><rect width=".081%" height="15" x="3.695%" y="437" fill="#E98D29" fg:w="4" fg:x="183"/></g><g><title>iallocztm (4 samples, 0.08%)</title><rect width=".081%" height="15" x="3.695%" y="421" fill="#EFA704" fg:w="4" fg:x="183"/></g><g><title>arena_malloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="3.695%" y="405" fill="#D1D910" fg:w="4" fg:x="183"/></g><g><title>tcache_alloc_small (4 samples, 0.08%)</title><rect width=".081%" height="15" x="3.695%" y="389" fill="#DB5823" fg:w="4" fg:x="183"/></g><g><title>_rjem_je_tcache_alloc_small_hard (4 samples, 0.08%)</title><rect width=".081%" height="15" x="3.695%" y="373" fill="#DCC117" fg:w="4" fg:x="183"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (4 samples, 0.08%)</title><rect width=".081%" height="15" x="3.695%" y="357" fill="#E65A34" fg:w="4" fg:x="183"/></g><g><title>arena_slab_alloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="3.695%" y="341" fill="#FC6A13" fg:w="4" fg:x="183"/></g><g><title>_rjem_je_pa_alloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="3.695%" y="325" fill="#CE4A14" fg:w="4" fg:x="183"/></g><g><title>pai_alloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="3.695%" y="309" fill="#E68A2C" fg:w="4" fg:x="183"/></g><g><title>pac_alloc_impl (4 samples, 0.08%)</title><rect width=".081%" height="15" x="3.695%" y="293" fill="#EBB62B" fg:w="4" fg:x="183"/></g><g><title>pac_alloc_real (4 samples, 0.08%)</title><rect width=".081%" height="15" x="3.695%" y="277" fill="#F21033" fg:w="4" fg:x="183"/></g><g><title>_rjem_je_ecache_alloc_grow (2 samples, 0.04%)</title><rect width=".04%" height="15" x="3.735%" y="261" fill="#F80904" fg:w="2" fg:x="185"/></g><g><title>extent_alloc_retained (2 samples, 0.04%)</title><rect width=".04%" height="15" x="3.735%" y="245" fill="#D21F16" fg:w="2" fg:x="185"/></g><g><title>extent_recycle (2 samples, 0.04%)</title><rect width=".04%" height="15" x="3.735%" y="229" fill="#EF3627" fg:w="2" fg:x="185"/></g><g><title>extent_recycle_split (2 samples, 0.04%)</title><rect width=".04%" height="15" x="3.735%" y="213" fill="#E66329" fg:w="2" fg:x="185"/></g><g><title>extent_split_interior (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.755%" y="197" fill="#FD6A0C" fg:w="1" fg:x="186"/></g><g><title>extent_split_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.755%" y="181" fill="#D52E29" fg:w="1" fg:x="186"/></g><g><title>_rjem_je_edata_cache_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.755%" y="165" fill="#D78523" fg:w="1" fg:x="186"/></g><g><title>_rjem_je_edata_avail_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.755%" y="149" fill="#D51C05" fg:w="1" fg:x="186"/></g><g><title>ph_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.755%" y="133" fill="#D74D31" fg:w="1" fg:x="186"/></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.755%" y="117" fill="#F86416" fg:w="1" fg:x="186"/></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.755%" y="101" fill="#D04309" fg:w="1" fg:x="186"/></g><g><title>phn_merge (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.755%" y="85" fill="#DB8515" fg:w="1" fg:x="186"/></g><g><title>phn_merge_ordered (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.755%" y="69" fill="#F62E1D" fg:w="1" fg:x="186"/></g><g><title>phn_lchild_set (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.755%" y="53" fill="#F6B934" fg:w="1" fg:x="186"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (19 samples, 0.38%)</title><rect width=".384%" height="15" x="3.432%" y="789" fill="#FC880B" fg:w="19" fg:x="170"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (17 samples, 0.34%)</title><rect width=".343%" height="15" x="3.473%" y="773" fill="#DB8A35" fg:w="17" fg:x="172"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (17 samples, 0.34%)</title><rect width=".343%" height="15" x="3.473%" y="757" fill="#D33317" fg:w="17" fg:x="172"/></g><g><title>serde::de::Visitor::visit_borrowed_str (7 samples, 0.14%)</title><rect width=".141%" height="15" x="3.675%" y="741" fill="#F7DD1C" fg:w="7" fg:x="182"/></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (7 samples, 0.14%)</title><rect width=".141%" height="15" x="3.675%" y="725" fill="#FBDE2D" fg:w="7" fg:x="182"/></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (7 samples, 0.14%)</title><rect width=".141%" height="15" x="3.675%" y="709" fill="#D9A235" fg:w="7" fg:x="182"/></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (7 samples, 0.14%)</title><rect width=".141%" height="15" x="3.675%" y="693" fill="#E55D0E" fg:w="7" fg:x="182"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (7 samples, 0.14%)</title><rect width=".141%" height="15" x="3.675%" y="677" fill="#D14331" fg:w="7" fg:x="182"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.14%)</title><rect width=".141%" height="15" x="3.675%" y="661" fill="#D5571D" fg:w="7" fg:x="182"/></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.14%)</title><rect width=".141%" height="15" x="3.675%" y="645" fill="#CD9734" fg:w="7" fg:x="182"/></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.14%)</title><rect width=".141%" height="15" x="3.675%" y="629" fill="#FDD727" fg:w="7" fg:x="182"/></g><g><title>?? (7 samples, 0.14%)</title><rect width=".141%" height="15" x="3.675%" y="613" fill="#DDDC29" fg:w="7" fg:x="182"/></g><g><title>?? (7 samples, 0.14%)</title><rect width=".141%" height="15" x="3.675%" y="597" fill="#DA8515" fg:w="7" fg:x="182"/></g><g><title>?? (7 samples, 0.14%)</title><rect width=".141%" height="15" x="3.675%" y="581" fill="#DDC12B" fg:w="7" fg:x="182"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.14%)</title><rect width=".141%" height="15" x="3.675%" y="565" fill="#F08034" fg:w="7" fg:x="182"/></g><g><title>?? (7 samples, 0.14%)</title><rect width=".141%" height="15" x="3.675%" y="549" fill="#FD720C" fg:w="7" fg:x="182"/></g><g><title>alloc::alloc::alloc (7 samples, 0.14%)</title><rect width=".141%" height="15" x="3.675%" y="533" fill="#D7DF2F" fg:w="7" fg:x="182"/></g><g><title>__rust_alloc (7 samples, 0.14%)</title><rect width=".141%" height="15" x="3.675%" y="517" fill="#F8E117" fg:w="7" fg:x="182"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (7 samples, 0.14%)</title><rect width=".141%" height="15" x="3.675%" y="501" fill="#FA6C00" fg:w="7" fg:x="182"/></g><g><title>_rjem_malloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="3.776%" y="485" fill="#E4D007" fg:w="2" fg:x="187"/></g><g><title>imalloc_fastpath (2 samples, 0.04%)</title><rect width=".04%" height="15" x="3.776%" y="469" fill="#F42D0A" fg:w="2" fg:x="187"/></g><g><title>cache_bin_alloc_easy (2 samples, 0.04%)</title><rect width=".04%" height="15" x="3.776%" y="453" fill="#CF7D19" fg:w="2" fg:x="187"/></g><g><title>cache_bin_alloc_impl (2 samples, 0.04%)</title><rect width=".04%" height="15" x="3.776%" y="437" fill="#D2C312" fg:w="2" fg:x="187"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="3.856%" y="757" fill="#F9500C" fg:w="1" fg:x="191"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.018%" y="693" fill="#DD4109" fg:w="1" fg:x="199"/></g><g><title>core::cmp::max (3 samples, 0.06%)</title><rect width=".061%" height="15" x="4.038%" y="693" fill="#EB3124" fg:w="3" fg:x="200"/></g><g><title>core::cmp::Ord::max (3 samples, 0.06%)</title><rect width=".061%" height="15" x="4.038%" y="677" fill="#E12014" fg:w="3" fg:x="200"/></g><g><title>core::cmp::max_by (3 samples, 0.06%)</title><rect width=".061%" height="15" x="4.038%" y="661" fill="#D78D2E" fg:w="3" fg:x="200"/></g><g><title>?? (6 samples, 0.12%)</title><rect width=".121%" height="15" x="4.018%" y="709" fill="#FAA02F" fg:w="6" fg:x="199"/></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.04%)</title><rect width=".04%" height="15" x="4.098%" y="693" fill="#D8DE28" fg:w="2" fg:x="203"/></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.04%)</title><rect width=".04%" height="15" x="4.098%" y="677" fill="#EAD927" fg:w="2" fg:x="203"/></g><g><title>_rjem_je_arena_ralloc_no_move (2 samples, 0.04%)</title><rect width=".04%" height="15" x="4.28%" y="549" fill="#CFB228" fg:w="2" fg:x="212"/></g><g><title>edata_usize_get (2 samples, 0.04%)</title><rect width=".04%" height="15" x="4.28%" y="533" fill="#DD880D" fg:w="2" fg:x="212"/></g><g><title>sz_index2size (2 samples, 0.04%)</title><rect width=".04%" height="15" x="4.28%" y="517" fill="#F9C70A" fg:w="2" fg:x="212"/></g><g><title>sz_index2size_lookup (2 samples, 0.04%)</title><rect width=".04%" height="15" x="4.28%" y="501" fill="#F9DE0D" fg:w="2" fg:x="212"/></g><g><title>sz_index2size_lookup_impl (2 samples, 0.04%)</title><rect width=".04%" height="15" x="4.28%" y="485" fill="#F4B926" fg:w="2" fg:x="212"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.08%)</title><rect width=".081%" height="15" x="4.26%" y="677" fill="#ECCA09" fg:w="4" fg:x="211"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="4.26%" y="661" fill="#FAE525" fg:w="4" fg:x="211"/></g><g><title>alloc::alloc::realloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="4.26%" y="645" fill="#CEAE17" fg:w="4" fg:x="211"/></g><g><title>__rust_realloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="4.26%" y="629" fill="#D3212B" fg:w="4" fg:x="211"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="4.26%" y="613" fill="#F53A32" fg:w="4" fg:x="211"/></g><g><title>do_rallocx (4 samples, 0.08%)</title><rect width=".081%" height="15" x="4.26%" y="597" fill="#F44424" fg:w="4" fg:x="211"/></g><g><title>iralloct (4 samples, 0.08%)</title><rect width=".081%" height="15" x="4.26%" y="581" fill="#E8E50F" fg:w="4" fg:x="211"/></g><g><title>_rjem_je_arena_ralloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="4.26%" y="565" fill="#FE1E17" fg:w="4" fg:x="211"/></g><g><title>sz_s2u (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.321%" y="549" fill="#EBA00E" fg:w="1" fg:x="214"/></g><g><title>sz_s2u_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.321%" y="533" fill="#D49B2C" fg:w="1" fg:x="214"/></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.321%" y="517" fill="#E20232" fg:w="1" fg:x="214"/></g><g><title>sz_size2index_lookup_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.321%" y="501" fill="#EAB106" fg:w="1" fg:x="214"/></g><g><title>_rjem_je_arena_bin_choose (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.361%" y="533" fill="#D91809" fg:w="1" fg:x="216"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.361%" y="517" fill="#DC0D2E" fg:w="1" fg:x="216"/></g><g><title>arena_bin_refill_slabcur_no_fresh_slab (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.381%" y="533" fill="#EFDD1B" fg:w="1" fg:x="217"/></g><g><title>arena_bin_slabs_full_insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.381%" y="517" fill="#DEC619" fg:w="1" fg:x="217"/></g><g><title>arena_is_auto (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.381%" y="501" fill="#D3630D" fg:w="1" fg:x="217"/></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.401%" y="405" fill="#E86F1F" fg:w="1" fg:x="218"/></g><g><title>_rjem_je_eset_fit (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.401%" y="389" fill="#F55225" fg:w="1" fg:x="218"/></g><g><title>arena_slab_alloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="4.401%" y="533" fill="#E3952E" fg:w="3" fg:x="218"/></g><g><title>_rjem_je_pa_alloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="4.401%" y="517" fill="#DA2432" fg:w="3" fg:x="218"/></g><g><title>pai_alloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="4.401%" y="501" fill="#E25030" fg:w="3" fg:x="218"/></g><g><title>pac_alloc_impl (3 samples, 0.06%)</title><rect width=".061%" height="15" x="4.401%" y="485" fill="#EEE00F" fg:w="3" fg:x="218"/></g><g><title>pac_alloc_real (3 samples, 0.06%)</title><rect width=".061%" height="15" x="4.401%" y="469" fill="#F1880A" fg:w="3" fg:x="218"/></g><g><title>_rjem_je_ecache_alloc_grow (3 samples, 0.06%)</title><rect width=".061%" height="15" x="4.401%" y="453" fill="#D0202D" fg:w="3" fg:x="218"/></g><g><title>extent_alloc_retained (3 samples, 0.06%)</title><rect width=".061%" height="15" x="4.401%" y="437" fill="#CF8709" fg:w="3" fg:x="218"/></g><g><title>extent_recycle (3 samples, 0.06%)</title><rect width=".061%" height="15" x="4.401%" y="421" fill="#CE562C" fg:w="3" fg:x="218"/></g><g><title>extent_recycle_split (2 samples, 0.04%)</title><rect width=".04%" height="15" x="4.422%" y="405" fill="#F5B10F" fg:w="2" fg:x="219"/></g><g><title>extent_split_interior (2 samples, 0.04%)</title><rect width=".04%" height="15" x="4.422%" y="389" fill="#CE4032" fg:w="2" fg:x="219"/></g><g><title>extent_split_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.442%" y="373" fill="#EA2428" fg:w="1" fg:x="220"/></g><g><title>_rjem_je_edata_cache_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.442%" y="357" fill="#D54008" fg:w="1" fg:x="220"/></g><g><title>_rjem_je_edata_avail_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.442%" y="341" fill="#D24B24" fg:w="1" fg:x="220"/></g><g><title>ph_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.442%" y="325" fill="#E55815" fg:w="1" fg:x="220"/></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.442%" y="309" fill="#FCCC2F" fg:w="1" fg:x="220"/></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.442%" y="293" fill="#D04D1B" fg:w="1" fg:x="220"/></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.462%" y="517" fill="#DD4C1A" fg:w="1" fg:x="221"/></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.462%" y="501" fill="#E18B12" fg:w="1" fg:x="221"/></g><g><title>_rjem_je_malloc_default (8 samples, 0.16%)</title><rect width=".162%" height="15" x="4.341%" y="677" fill="#E6890B" fg:w="8" fg:x="215"/></g><g><title>imalloc (7 samples, 0.14%)</title><rect width=".141%" height="15" x="4.361%" y="661" fill="#D41C01" fg:w="7" fg:x="216"/></g><g><title>imalloc_body (7 samples, 0.14%)</title><rect width=".141%" height="15" x="4.361%" y="645" fill="#F8A411" fg:w="7" fg:x="216"/></g><g><title>imalloc_no_sample (7 samples, 0.14%)</title><rect width=".141%" height="15" x="4.361%" y="629" fill="#DEAB2A" fg:w="7" fg:x="216"/></g><g><title>iallocztm (7 samples, 0.14%)</title><rect width=".141%" height="15" x="4.361%" y="613" fill="#F3542D" fg:w="7" fg:x="216"/></g><g><title>arena_malloc (7 samples, 0.14%)</title><rect width=".141%" height="15" x="4.361%" y="597" fill="#FC3117" fg:w="7" fg:x="216"/></g><g><title>tcache_alloc_small (7 samples, 0.14%)</title><rect width=".141%" height="15" x="4.361%" y="581" fill="#D71307" fg:w="7" fg:x="216"/></g><g><title>_rjem_je_tcache_alloc_small_hard (7 samples, 0.14%)</title><rect width=".141%" height="15" x="4.361%" y="565" fill="#EE5129" fg:w="7" fg:x="216"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (7 samples, 0.14%)</title><rect width=".141%" height="15" x="4.361%" y="549" fill="#D2C725" fg:w="7" fg:x="216"/></g><g><title>malloc_mutex_lock (2 samples, 0.04%)</title><rect width=".04%" height="15" x="4.462%" y="533" fill="#F4C031" fg:w="2" fg:x="221"/></g><g><title>mutex_owner_stats_update (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.482%" y="517" fill="#E2D30B" fg:w="1" fg:x="222"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (32 samples, 0.65%)</title><rect width=".646%" height="15" x="3.977%" y="741" fill="#ECA236" fg:w="32" fg:x="197"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (30 samples, 0.61%)</title><rect width=".606%" height="15" x="4.018%" y="725" fill="#DCE509" fg:w="30" fg:x="199"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (24 samples, 0.48%)</title><rect width=".485%" height="15" x="4.139%" y="709" fill="#FA5716" fg:w="24" fg:x="205"/></g><g><title>alloc::raw_vec::finish_grow (19 samples, 0.38%)</title><rect width=".384%" height="15" x="4.24%" y="693" fill="#EF2B11" fg:w="19" fg:x="210"/></g><g><title>_rjem_malloc (6 samples, 0.12%)</title><rect width=".121%" height="15" x="4.502%" y="677" fill="#E7B119" fg:w="6" fg:x="223"/></g><g><title>imalloc_fastpath (5 samples, 0.10%)</title><rect width=".101%" height="15" x="4.522%" y="661" fill="#DBB301" fg:w="5" fg:x="224"/></g><g><title>cache_bin_alloc_easy (4 samples, 0.08%)</title><rect width=".081%" height="15" x="4.543%" y="645" fill="#EEDB35" fg:w="4" fg:x="225"/></g><g><title>cache_bin_alloc_impl (4 samples, 0.08%)</title><rect width=".081%" height="15" x="4.543%" y="629" fill="#E8A724" fg:w="4" fg:x="225"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.805%" y="693" fill="#F41333" fg:w="1" fg:x="238"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::set_index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.825%" y="693" fill="#E00616" fg:w="1" fg:x="239"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (4 samples, 0.08%)</title><rect width=".081%" height="15" x="4.846%" y="677" fill="#E09105" fg:w="4" fg:x="240"/></g><g><title>sonic_rs::reader::Reader::next (5 samples, 0.10%)</title><rect width=".101%" height="15" x="4.846%" y="693" fill="#EA8231" fg:w="5" fg:x="240"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.926%" y="677" fill="#FE0602" fg:w="1" fg:x="244"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.926%" y="661" fill="#D0602E" fg:w="1" fg:x="244"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="4.926%" y="645" fill="#EF0327" fg:w="1" fg:x="244"/></g><g><title>?? (9 samples, 0.18%)</title><rect width=".182%" height="15" x="4.805%" y="709" fill="#E9D201" fg:w="9" fg:x="238"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (2 samples, 0.04%)</title><rect width=".04%" height="15" x="4.947%" y="693" fill="#F48925" fg:w="2" fg:x="245"/></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.04%)</title><rect width=".04%" height="15" x="4.947%" y="677" fill="#F08802" fg:w="2" fg:x="245"/></g><g><title>serde::de::SeqAccess::next_element (12 samples, 0.24%)</title><rect width=".242%" height="15" x="4.987%" y="709" fill="#EF1225" fg:w="12" fg:x="247"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u64 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="5.33%" y="645" fill="#DAB916" fg:w="1" fg:x="264"/></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (1 samples, 0.02%)</title><rect width=".02%" height="15" x="5.35%" y="645" fill="#E1DA04" fg:w="1" fg:x="265"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="5.37%" y="629" fill="#E6B620" fg:w="1" fg:x="266"/></g><g><title>sonic_rs::reader::Reader::next (2 samples, 0.04%)</title><rect width=".04%" height="15" x="5.37%" y="645" fill="#F2382B" fg:w="2" fg:x="266"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="5.391%" y="629" fill="#E96318" fg:w="1" fg:x="267"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="5.391%" y="613" fill="#EAD12A" fg:w="1" fg:x="267"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="5.391%" y="597" fill="#E3070C" fg:w="1" fg:x="267"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (2 samples, 0.04%)</title><rect width=".04%" height="15" x="5.411%" y="645" fill="#F5CB2B" fg:w="2" fg:x="268"/></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.04%)</title><rect width=".04%" height="15" x="5.411%" y="629" fill="#EECD21" fg:w="2" fg:x="268"/></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (4 samples, 0.08%)</title><rect width=".081%" height="15" x="5.552%" y="629" fill="#E73807" fg:w="4" fg:x="275"/></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (4 samples, 0.08%)</title><rect width=".081%" height="15" x="5.552%" y="613" fill="#F4BA1D" fg:w="4" fg:x="275"/></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (6 samples, 0.12%)</title><rect width=".121%" height="15" x="5.633%" y="629" fill="#EA6F1F" fg:w="6" fg:x="279"/></g><g><title>?? (29 samples, 0.59%)</title><rect width=".586%" height="15" x="5.33%" y="661" fill="#F1950A" fg:w="29" fg:x="264"/></g><g><title>sonic_rs::util::num::parse_number_unchecked (23 samples, 0.46%)</title><rect width=".464%" height="15" x="5.451%" y="645" fill="#F9CE2C" fg:w="23" fg:x="270"/></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (8 samples, 0.16%)</title><rect width=".162%" height="15" x="5.754%" y="629" fill="#FB991E" fg:w="8" fg:x="285"/></g><g><title>?? (39 samples, 0.79%)</title><rect width=".787%" height="15" x="5.33%" y="677" fill="#EF9826" fg:w="39" fg:x="264"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (10 samples, 0.20%)</title><rect width=".202%" height="15" x="5.916%" y="661" fill="#F98B2F" fg:w="10" fg:x="293"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (117 samples, 2.36%)</title><rect width="2.362%" height="15" x="3.816%" y="789" fill="#F44023" fg:w="117" fg:x="189"/><text x="4.066%" y="799.5">se..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (117 samples, 2.36%)</title><rect width="2.362%" height="15" x="3.816%" y="773" fill="#D82E0F" fg:w="117" fg:x="189"/><text x="4.066%" y="783.5">&lt;&amp;..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (114 samples, 2.30%)</title><rect width="2.302%" height="15" x="3.876%" y="757" fill="#FA4A13" fg:w="114" fg:x="192"/><text x="4.126%" y="767.5">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (77 samples, 1.55%)</title><rect width="1.555%" height="15" x="4.623%" y="741" fill="#F92A21" fg:w="77" fg:x="229"/></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (76 samples, 1.53%)</title><rect width="1.534%" height="15" x="4.644%" y="725" fill="#F29511" fg:w="76" fg:x="230"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (47 samples, 0.95%)</title><rect width=".949%" height="15" x="5.229%" y="709" fill="#F41D15" fg:w="47" fg:x="259"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (42 samples, 0.85%)</title><rect width=".848%" height="15" x="5.33%" y="693" fill="#DC8225" fg:w="42" fg:x="264"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="6.117%" y="677" fill="#D34302" fg:w="3" fg:x="303"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.178%" y="741" fill="#EB4434" fg:w="1" fg:x="306"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.259%" y="693" fill="#F68E03" fg:w="1" fg:x="310"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.259%" y="677" fill="#F11907" fg:w="1" fg:x="310"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.259%" y="661" fill="#F27727" fg:w="1" fg:x="310"/></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.259%" y="645" fill="#F1622D" fg:w="1" fg:x="310"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.279%" y="293" fill="#FE1C1E" fg:w="1" fg:x="311"/></g><g><title>_rjem_je_malloc_default (2 samples, 0.04%)</title><rect width=".04%" height="15" x="6.279%" y="437" fill="#F18E36" fg:w="2" fg:x="311"/></g><g><title>imalloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="6.279%" y="421" fill="#DE550F" fg:w="2" fg:x="311"/></g><g><title>imalloc_body (2 samples, 0.04%)</title><rect width=".04%" height="15" x="6.279%" y="405" fill="#D2552F" fg:w="2" fg:x="311"/></g><g><title>imalloc_no_sample (2 samples, 0.04%)</title><rect width=".04%" height="15" x="6.279%" y="389" fill="#E0CE19" fg:w="2" fg:x="311"/></g><g><title>iallocztm (2 samples, 0.04%)</title><rect width=".04%" height="15" x="6.279%" y="373" fill="#F3C913" fg:w="2" fg:x="311"/></g><g><title>arena_malloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="6.279%" y="357" fill="#EC3B04" fg:w="2" fg:x="311"/></g><g><title>tcache_alloc_small (2 samples, 0.04%)</title><rect width=".04%" height="15" x="6.279%" y="341" fill="#FEB32D" fg:w="2" fg:x="311"/></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.04%)</title><rect width=".04%" height="15" x="6.279%" y="325" fill="#E20E0A" fg:w="2" fg:x="311"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (2 samples, 0.04%)</title><rect width=".04%" height="15" x="6.279%" y="309" fill="#F41B29" fg:w="2" fg:x="311"/></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.299%" y="293" fill="#EB2320" fg:w="1" fg:x="312"/></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.299%" y="277" fill="#DA441F" fg:w="1" fg:x="312"/></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.299%" y="261" fill="#CF7825" fg:w="1" fg:x="312"/></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.299%" y="245" fill="#E36200" fg:w="1" fg:x="312"/></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.299%" y="229" fill="#CF0703" fg:w="1" fg:x="312"/></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.299%" y="213" fill="#CE6213" fg:w="1" fg:x="312"/></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.299%" y="197" fill="#D9051A" fg:w="1" fg:x="312"/></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.299%" y="181" fill="#EBBE26" fg:w="1" fg:x="312"/></g><g><title>_rjem_je_eset_fit (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.299%" y="165" fill="#F75618" fg:w="1" fg:x="312"/></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (8 samples, 0.16%)</title><rect width=".162%" height="15" x="6.178%" y="757" fill="#CD6510" fg:w="8" fg:x="306"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (7 samples, 0.14%)</title><rect width=".141%" height="15" x="6.198%" y="741" fill="#F6A821" fg:w="7" fg:x="307"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (5 samples, 0.10%)</title><rect width=".101%" height="15" x="6.239%" y="725" fill="#E77201" fg:w="5" fg:x="309"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (5 samples, 0.10%)</title><rect width=".101%" height="15" x="6.239%" y="709" fill="#CFB835" fg:w="5" fg:x="309"/></g><g><title>serde::de::Visitor::visit_borrowed_str (3 samples, 0.06%)</title><rect width=".061%" height="15" x="6.279%" y="693" fill="#E05F33" fg:w="3" fg:x="311"/></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (3 samples, 0.06%)</title><rect width=".061%" height="15" x="6.279%" y="677" fill="#D4BC2D" fg:w="3" fg:x="311"/></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.06%)</title><rect width=".061%" height="15" x="6.279%" y="661" fill="#DF9A26" fg:w="3" fg:x="311"/></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.06%)</title><rect width=".061%" height="15" x="6.279%" y="645" fill="#FB1634" fg:w="3" fg:x="311"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.06%)</title><rect width=".061%" height="15" x="6.279%" y="629" fill="#E5D116" fg:w="3" fg:x="311"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.06%)</title><rect width=".061%" height="15" x="6.279%" y="613" fill="#EA8A22" fg:w="3" fg:x="311"/></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.06%)</title><rect width=".061%" height="15" x="6.279%" y="597" fill="#D45F0B" fg:w="3" fg:x="311"/></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.06%)</title><rect width=".061%" height="15" x="6.279%" y="581" fill="#F0B32F" fg:w="3" fg:x="311"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="6.279%" y="565" fill="#F0A30B" fg:w="3" fg:x="311"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="6.279%" y="549" fill="#EC250C" fg:w="3" fg:x="311"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="6.279%" y="533" fill="#E8A410" fg:w="3" fg:x="311"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.06%)</title><rect width=".061%" height="15" x="6.279%" y="517" fill="#F4CD0F" fg:w="3" fg:x="311"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="6.279%" y="501" fill="#DF752F" fg:w="3" fg:x="311"/></g><g><title>alloc::alloc::alloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="6.279%" y="485" fill="#F46B23" fg:w="3" fg:x="311"/></g><g><title>__rust_alloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="6.279%" y="469" fill="#CD8C08" fg:w="3" fg:x="311"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="6.279%" y="453" fill="#E4542E" fg:w="3" fg:x="311"/></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.319%" y="437" fill="#FEBC09" fg:w="1" fg:x="313"/></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.319%" y="421" fill="#CE7036" fg:w="1" fg:x="313"/></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.319%" y="405" fill="#D85431" fg:w="1" fg:x="313"/></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.319%" y="389" fill="#D6C223" fg:w="1" fg:x="313"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (9 samples, 0.18%)</title><rect width=".182%" height="15" x="6.178%" y="789" fill="#F91C03" fg:w="9" fg:x="306"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (9 samples, 0.18%)</title><rect width=".182%" height="15" x="6.178%" y="773" fill="#DE3834" fg:w="9" fg:x="306"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.34%" y="757" fill="#F5D932" fg:w="1" fg:x="314"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.34%" y="741" fill="#D5C918" fg:w="1" fg:x="314"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.34%" y="725" fill="#F8741C" fg:w="1" fg:x="314"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.34%" y="709" fill="#DB482B" fg:w="1" fg:x="314"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (154 samples, 3.11%)</title><rect width="3.109%" height="15" x="3.271%" y="805" fill="#D18A0E" fg:w="154" fg:x="162"/><text x="3.521%" y="815.5">&lt;co..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.36%" y="789" fill="#DE1221" fg:w="1" fg:x="315"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.36%" y="773" fill="#D5C707" fg:w="1" fg:x="315"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.36%" y="757" fill="#FA6E0A" fg:w="1" fg:x="315"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.36%" y="741" fill="#F87B06" fg:w="1" fg:x="315"/></g><g><title>sonic_rs::util::num::parse_number_unchecked (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.36%" y="725" fill="#CE5B1F" fg:w="1" fg:x="315"/></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.36%" y="709" fill="#D39A0D" fg:w="1" fg:x="315"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="6.38%" y="757" fill="#E19407" fg:w="1" fg:x="316"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (158 samples, 3.19%)</title><rect width="3.19%" height="15" x="3.251%" y="837" fill="#DCA02B" fg:w="158" fg:x="161"/><text x="3.501%" y="847.5">&lt;so..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (158 samples, 3.19%)</title><rect width="3.19%" height="15" x="3.251%" y="821" fill="#D53427" fg:w="158" fg:x="161"/><text x="3.501%" y="831.5">&lt;so..</text></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="6.38%" y="805" fill="#F38907" fg:w="3" fg:x="316"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="6.38%" y="789" fill="#E64F0D" fg:w="3" fg:x="316"/></g><g><title>sonic_rs::reader::Reader::next (3 samples, 0.06%)</title><rect width=".061%" height="15" x="6.38%" y="773" fill="#F76917" fg:w="3" fg:x="316"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="6.4%" y="757" fill="#DFB329" fg:w="2" fg:x="317"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="6.4%" y="741" fill="#DA0922" fg:w="2" fg:x="317"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect width=".04%" height="15" x="6.4%" y="725" fill="#DE6A08" fg:w="2" fg:x="317"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="6.864%" y="741" fill="#D3DC00" fg:w="2" fg:x="340"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (10 samples, 0.20%)</title><rect width=".202%" height="15" x="6.905%" y="741" fill="#E53410" fg:w="10" fg:x="342"/></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (4 samples, 0.08%)</title><rect width=".081%" height="15" x="7.026%" y="725" fill="#D49B12" fg:w="4" fg:x="348"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.08%)</title><rect width=".081%" height="15" x="7.026%" y="709" fill="#F2150E" fg:w="4" fg:x="348"/></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.08%)</title><rect width=".081%" height="15" x="7.026%" y="693" fill="#DE1330" fg:w="4" fg:x="348"/></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.08%)</title><rect width=".081%" height="15" x="7.026%" y="677" fill="#E82D1B" fg:w="4" fg:x="348"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.10%)</title><rect width=".101%" height="15" x="7.107%" y="709" fill="#F9672A" fg:w="5" fg:x="352"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::slice_unchecked (1 samples, 0.02%)</title><rect width=".02%" height="15" x="7.208%" y="709" fill="#F65121" fg:w="1" fg:x="357"/></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="7.208%" y="693" fill="#FC212A" fg:w="1" fg:x="357"/></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="7.208%" y="677" fill="#D1D429" fg:w="1" fg:x="357"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8 samples, 0.16%)</title><rect width=".162%" height="15" x="7.228%" y="693" fill="#CF9A06" fg:w="8" fg:x="358"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="7.389%" y="693" fill="#DF402F" fg:w="1" fg:x="366"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="7.41%" y="693" fill="#D3A126" fg:w="3" fg:x="367"/></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.06%)</title><rect width=".061%" height="15" x="7.41%" y="677" fill="#DB8A28" fg:w="3" fg:x="367"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (50 samples, 1.01%)</title><rect width="1.01%" height="15" x="6.501%" y="805" fill="#F1E42E" fg:w="50" fg:x="322"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (32 samples, 0.65%)</title><rect width=".646%" height="15" x="6.864%" y="789" fill="#DFD126" fg:w="32" fg:x="340"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (32 samples, 0.65%)</title><rect width=".646%" height="15" x="6.864%" y="773" fill="#ECA42D" fg:w="32" fg:x="340"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (32 samples, 0.65%)</title><rect width=".646%" height="15" x="6.864%" y="757" fill="#E70F05" fg:w="32" fg:x="340"/></g><g><title>?? (20 samples, 0.40%)</title><rect width=".404%" height="15" x="7.107%" y="741" fill="#FC230F" fg:w="20" fg:x="352"/></g><g><title>?? (20 samples, 0.40%)</title><rect width=".404%" height="15" x="7.107%" y="725" fill="#F8B512" fg:w="20" fg:x="352"/></g><g><title>?? (14 samples, 0.28%)</title><rect width=".283%" height="15" x="7.228%" y="709" fill="#E9272A" fg:w="14" fg:x="358"/></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (2 samples, 0.04%)</title><rect width=".04%" height="15" x="7.47%" y="693" fill="#EE6E21" fg:w="2" fg:x="370"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (4 samples, 0.08%)</title><rect width=".081%" height="15" x="7.511%" y="789" fill="#E9C30A" fg:w="4" fg:x="372"/></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.02%)</title><rect width=".02%" height="15" x="7.571%" y="773" fill="#FE6903" fg:w="1" fg:x="375"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="7.571%" y="757" fill="#DDE109" fg:w="1" fg:x="375"/></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="7.571%" y="741" fill="#E0E32D" fg:w="1" fg:x="375"/></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="7.571%" y="725" fill="#E5C62B" fg:w="1" fg:x="375"/></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (1 samples, 0.02%)</title><rect width=".02%" height="15" x="7.591%" y="789" fill="#CED123" fg:w="1" fg:x="376"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (7 samples, 0.14%)</title><rect width=".141%" height="15" x="7.612%" y="773" fill="#F5C335" fg:w="7" fg:x="377"/></g><g><title>sonic_rs::reader::Reader::next (12 samples, 0.24%)</title><rect width=".242%" height="15" x="7.612%" y="789" fill="#F05C1A" fg:w="12" fg:x="377"/></g><g><title>?? (5 samples, 0.10%)</title><rect width=".101%" height="15" x="7.753%" y="773" fill="#CF2817" fg:w="5" fg:x="384"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (5 samples, 0.10%)</title><rect width=".101%" height="15" x="7.753%" y="757" fill="#DF6F23" fg:w="5" fg:x="384"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (5 samples, 0.10%)</title><rect width=".101%" height="15" x="7.753%" y="741" fill="#E5931C" fg:w="5" fg:x="384"/></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (2 samples, 0.04%)</title><rect width=".04%" height="15" x="7.854%" y="773" fill="#D31D1C" fg:w="2" fg:x="389"/></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="7.894%" y="773" fill="#E44821" fg:w="1" fg:x="391"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize (242 samples, 4.89%)</title><rect width="4.886%" height="15" x="3.049%" y="885" fill="#CDD61F" fg:w="242" fg:x="151"/><text x="3.299%" y="895.5">json_b..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (242 samples, 4.89%)</title><rect width="4.886%" height="15" x="3.049%" y="869" fill="#E06F0F" fg:w="242" fg:x="151"/><text x="3.299%" y="879.5">&lt;&amp;mut ..</text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (241 samples, 4.87%)</title><rect width="4.866%" height="15" x="3.069%" y="853" fill="#FD151A" fg:w="241" fg:x="152"/><text x="3.319%" y="863.5">&lt;json_..</text></g><g><title>serde::de::MapAccess::next_key (74 samples, 1.49%)</title><rect width="1.494%" height="15" x="6.441%" y="837" fill="#F58B2B" fg:w="74" fg:x="319"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (74 samples, 1.49%)</title><rect width="1.494%" height="15" x="6.441%" y="821" fill="#FCAA07" fg:w="74" fg:x="319"/></g><g><title>?? (21 samples, 0.42%)</title><rect width=".424%" height="15" x="7.511%" y="805" fill="#E7760E" fg:w="21" fg:x="372"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (4 samples, 0.08%)</title><rect width=".081%" height="15" x="7.854%" y="789" fill="#EE5300" fg:w="4" fg:x="389"/></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="7.914%" y="773" fill="#DD2727" fg:w="1" fg:x="392"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="7.955%" y="837" fill="#DE772E" fg:w="1" fg:x="394"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="7.955%" y="821" fill="#DEA531" fg:w="1" fg:x="394"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="7.955%" y="805" fill="#DB7134" fg:w="1" fg:x="394"/></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect width=".04%" height="15" x="7.975%" y="837" fill="#D6070F" fg:w="2" fg:x="395"/></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.015%" y="581" fill="#EB2004" fg:w="1" fg:x="397"/></g><g><title>imalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.015%" y="565" fill="#EE5A36" fg:w="1" fg:x="397"/></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.015%" y="549" fill="#D5D013" fg:w="1" fg:x="397"/></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.015%" y="533" fill="#E99C04" fg:w="1" fg:x="397"/></g><g><title>iallocztm (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.015%" y="517" fill="#CFC205" fg:w="1" fg:x="397"/></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.015%" y="501" fill="#CE6F1E" fg:w="1" fg:x="397"/></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.015%" y="485" fill="#F34636" fg:w="1" fg:x="397"/></g><g><title>arena_choose (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.015%" y="469" fill="#F21C08" fg:w="1" fg:x="397"/></g><g><title>arena_choose_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.015%" y="453" fill="#DB6A12" fg:w="1" fg:x="397"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (7 samples, 0.14%)</title><rect width=".141%" height="15" x="7.935%" y="885" fill="#F4DE0A" fg:w="7" fg:x="393"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (6 samples, 0.12%)</title><rect width=".121%" height="15" x="7.955%" y="869" fill="#ECB334" fg:w="6" fg:x="394"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (6 samples, 0.12%)</title><rect width=".121%" height="15" x="7.955%" y="853" fill="#D51727" fg:w="6" fg:x="394"/></g><g><title>serde::de::Visitor::visit_borrowed_str (3 samples, 0.06%)</title><rect width=".061%" height="15" x="8.015%" y="837" fill="#EE300A" fg:w="3" fg:x="397"/></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (3 samples, 0.06%)</title><rect width=".061%" height="15" x="8.015%" y="821" fill="#FBC417" fg:w="3" fg:x="397"/></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.06%)</title><rect width=".061%" height="15" x="8.015%" y="805" fill="#FA9818" fg:w="3" fg:x="397"/></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.06%)</title><rect width=".061%" height="15" x="8.015%" y="789" fill="#D19611" fg:w="3" fg:x="397"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.06%)</title><rect width=".061%" height="15" x="8.015%" y="773" fill="#EACA22" fg:w="3" fg:x="397"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.06%)</title><rect width=".061%" height="15" x="8.015%" y="757" fill="#FD9435" fg:w="3" fg:x="397"/></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.06%)</title><rect width=".061%" height="15" x="8.015%" y="741" fill="#DA8110" fg:w="3" fg:x="397"/></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.06%)</title><rect width=".061%" height="15" x="8.015%" y="725" fill="#D85513" fg:w="3" fg:x="397"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="8.015%" y="709" fill="#EBE407" fg:w="3" fg:x="397"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="8.015%" y="693" fill="#F5AF00" fg:w="3" fg:x="397"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="8.015%" y="677" fill="#D0A824" fg:w="3" fg:x="397"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.06%)</title><rect width=".061%" height="15" x="8.015%" y="661" fill="#F6AB18" fg:w="3" fg:x="397"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="8.015%" y="645" fill="#D78E18" fg:w="3" fg:x="397"/></g><g><title>alloc::alloc::alloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="8.015%" y="629" fill="#FABB07" fg:w="3" fg:x="397"/></g><g><title>__rust_alloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="8.015%" y="613" fill="#E44221" fg:w="3" fg:x="397"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="8.015%" y="597" fill="#EAD715" fg:w="3" fg:x="397"/></g><g><title>_rjem_malloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.036%" y="581" fill="#DEBF14" fg:w="2" fg:x="398"/></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.056%" y="565" fill="#F54F36" fg:w="1" fg:x="399"/></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.056%" y="549" fill="#F00A25" fg:w="1" fg:x="399"/></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.056%" y="533" fill="#D6C020" fg:w="1" fg:x="399"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.096%" y="773" fill="#D12436" fg:w="1" fg:x="401"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.096%" y="757" fill="#DC0A0B" fg:w="1" fg:x="401"/></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.096%" y="741" fill="#DD6A11" fg:w="1" fg:x="401"/></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.096%" y="725" fill="#FB8E2C" fg:w="1" fg:x="401"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.096%" y="709" fill="#EE0D0F" fg:w="1" fg:x="401"/></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.096%" y="693" fill="#D06B1B" fg:w="1" fg:x="401"/></g><g><title>iralloct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.096%" y="677" fill="#CD8825" fg:w="1" fg:x="401"/></g><g><title>_rjem_je_arena_ralloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.096%" y="661" fill="#FACD1B" fg:w="1" fg:x="401"/></g><g><title>_rjem_je_arena_ralloc_no_move (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.096%" y="645" fill="#D2502B" fg:w="1" fg:x="401"/></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.116%" y="773" fill="#F7A024" fg:w="1" fg:x="402"/></g><g><title>imalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.116%" y="757" fill="#EA0D31" fg:w="1" fg:x="402"/></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.116%" y="741" fill="#EA7A00" fg:w="1" fg:x="402"/></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.116%" y="725" fill="#CF9226" fg:w="1" fg:x="402"/></g><g><title>iallocztm (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.116%" y="709" fill="#CFB119" fg:w="1" fg:x="402"/></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.116%" y="693" fill="#D3B22A" fg:w="1" fg:x="402"/></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.116%" y="677" fill="#E64536" fg:w="1" fg:x="402"/></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.116%" y="661" fill="#D68729" fg:w="1" fg:x="402"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.116%" y="645" fill="#ED4319" fg:w="1" fg:x="402"/></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.116%" y="629" fill="#DEBD32" fg:w="1" fg:x="402"/></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.116%" y="613" fill="#F59422" fg:w="1" fg:x="402"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="8.076%" y="837" fill="#DE1D06" fg:w="4" fg:x="400"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.08%)</title><rect width=".081%" height="15" x="8.076%" y="821" fill="#DDBD2B" fg:w="4" fg:x="400"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.08%)</title><rect width=".081%" height="15" x="8.076%" y="805" fill="#CF241B" fg:w="4" fg:x="400"/></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.08%)</title><rect width=".081%" height="15" x="8.076%" y="789" fill="#D95A18" fg:w="4" fg:x="400"/></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.136%" y="773" fill="#E04223" fg:w="1" fg:x="403"/></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.136%" y="757" fill="#DD0D32" fg:w="1" fg:x="403"/></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.136%" y="741" fill="#EC4431" fg:w="1" fg:x="403"/></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.136%" y="725" fill="#E5921C" fg:w="1" fg:x="403"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.157%" y="741" fill="#E11F26" fg:w="1" fg:x="404"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.157%" y="725" fill="#FAD003" fg:w="1" fg:x="404"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.157%" y="709" fill="#F63617" fg:w="1" fg:x="404"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.157%" y="693" fill="#F34C0B" fg:w="1" fg:x="404"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (255 samples, 5.15%)</title><rect width="5.148%" height="15" x="3.049%" y="901" fill="#F51532" fg:w="255" fg:x="151"/><text x="3.299%" y="911.5">&lt;core:..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (6 samples, 0.12%)</title><rect width=".121%" height="15" x="8.076%" y="885" fill="#E4092B" fg:w="6" fg:x="400"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (6 samples, 0.12%)</title><rect width=".121%" height="15" x="8.076%" y="869" fill="#D0642F" fg:w="6" fg:x="400"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (6 samples, 0.12%)</title><rect width=".121%" height="15" x="8.076%" y="853" fill="#E81A08" fg:w="6" fg:x="400"/></g><g><title>serde::de::SeqAccess::next_element (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.157%" y="837" fill="#D8A626" fg:w="2" fg:x="404"/></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.157%" y="821" fill="#FBCA33" fg:w="2" fg:x="404"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.157%" y="805" fill="#FED822" fg:w="2" fg:x="404"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.157%" y="789" fill="#FB201B" fg:w="2" fg:x="404"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.157%" y="773" fill="#D07F1C" fg:w="2" fg:x="404"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.157%" y="757" fill="#E08916" fg:w="2" fg:x="404"/></g><g><title>sonic_rs::util::num::parse_number_unchecked (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.177%" y="741" fill="#FE4620" fg:w="1" fg:x="405"/></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.177%" y="725" fill="#E54B25" fg:w="1" fg:x="405"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_entry (295 samples, 5.96%)</title><rect width="5.956%" height="15" x="2.261%" y="949" fill="#FC4017" fg:w="295" fg:x="112"/><text x="2.511%" y="959.5">&lt;sonic_r..</text></g><g><title>serde::de::MapAccess::next_entry_seed (295 samples, 5.96%)</title><rect width="5.956%" height="15" x="2.261%" y="933" fill="#E8A230" fg:w="295" fg:x="112"/><text x="2.511%" y="943.5">serde::d..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (256 samples, 5.17%)</title><rect width="5.169%" height="15" x="3.049%" y="917" fill="#F6A00C" fg:w="256" fg:x="151"/><text x="3.299%" y="927.5">&lt;sonic..</text></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.197%" y="901" fill="#F7A600" fg:w="1" fg:x="406"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.197%" y="885" fill="#F9DB15" fg:w="1" fg:x="406"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.197%" y="869" fill="#CDD103" fg:w="1" fg:x="406"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.197%" y="853" fill="#F32C01" fg:w="1" fg:x="406"/></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.318%" y="869" fill="#CE9F10" fg:w="2" fg:x="412"/></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.318%" y="853" fill="#F44D1E" fg:w="2" fg:x="412"/></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.318%" y="837" fill="#DA450C" fg:w="2" fg:x="412"/></g><g><title>&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as core::cmp::Ord&gt;::cmp (5 samples, 0.10%)</title><rect width=".101%" height="15" x="8.359%" y="869" fill="#D45707" fg:w="5" fg:x="414"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (5 samples, 0.10%)</title><rect width=".101%" height="15" x="8.359%" y="853" fill="#F57219" fg:w="5" fg:x="414"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.46%" y="853" fill="#D23D2A" fg:w="1" fg:x="419"/></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.46%" y="837" fill="#D33421" fg:w="1" fg:x="419"/></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.46%" y="821" fill="#EA3A21" fg:w="1" fg:x="419"/></g><g><title>aligned_usize_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.48%" y="693" fill="#DC7324" fg:w="1" fg:x="420"/></g><g><title>sz_index2size (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.48%" y="677" fill="#F39936" fg:w="1" fg:x="420"/></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.48%" y="661" fill="#FB2F12" fg:w="1" fg:x="420"/></g><g><title>sz_index2size_lookup_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.48%" y="645" fill="#F2662A" fg:w="1" fg:x="420"/></g><g><title>_rjem_je_emap_register_interior (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.5%" y="565" fill="#EA1F26" fg:w="1" fg:x="421"/></g><g><title>rtree_write_range (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.5%" y="549" fill="#DD7533" fg:w="1" fg:x="421"/></g><g><title>rtree_write_range_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.5%" y="533" fill="#D41412" fg:w="1" fg:x="421"/></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.52%" y="517" fill="#F58524" fg:w="1" fg:x="422"/></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.52%" y="501" fill="#D40613" fg:w="1" fg:x="422"/></g><g><title>extent_recycle_split (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.52%" y="485" fill="#DA0124" fg:w="1" fg:x="422"/></g><g><title>extent_deactivate_locked (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.52%" y="469" fill="#F65436" fg:w="1" fg:x="422"/></g><g><title>extent_deactivate_locked_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.52%" y="453" fill="#F26E06" fg:w="1" fg:x="422"/></g><g><title>_rjem_je_eset_insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.52%" y="437" fill="#D62F05" fg:w="1" fg:x="422"/></g><g><title>_rjem_je_sz_psz_quantize_floor (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.52%" y="421" fill="#DA9F19" fg:w="1" fg:x="422"/></g><g><title>arena_slab_alloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="8.5%" y="597" fill="#D7D31C" fg:w="3" fg:x="421"/></g><g><title>_rjem_je_pa_alloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="8.5%" y="581" fill="#EE3B20" fg:w="3" fg:x="421"/></g><g><title>pai_alloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.52%" y="565" fill="#E25203" fg:w="2" fg:x="422"/></g><g><title>pac_alloc_impl (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.52%" y="549" fill="#F0A420" fg:w="2" fg:x="422"/></g><g><title>pac_alloc_real (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.52%" y="533" fill="#E82E07" fg:w="2" fg:x="422"/></g><g><title>_rjem_je_ecache_alloc_grow (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.54%" y="517" fill="#E58135" fg:w="1" fg:x="423"/></g><g><title>extent_alloc_retained (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.54%" y="501" fill="#EABC1D" fg:w="1" fg:x="423"/></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.54%" y="485" fill="#F68D04" fg:w="1" fg:x="423"/></g><g><title>extent_recycle_split (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.54%" y="469" fill="#E51727" fg:w="1" fg:x="423"/></g><g><title>extent_deactivate_locked (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.54%" y="453" fill="#CE0C03" fg:w="1" fg:x="423"/></g><g><title>extent_deactivate_locked_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.54%" y="437" fill="#FCE214" fg:w="1" fg:x="423"/></g><g><title>_rjem_je_eset_insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.54%" y="421" fill="#D87B23" fg:w="1" fg:x="423"/></g><g><title>_rjem_je_edata_heap_empty (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.54%" y="405" fill="#D44428" fg:w="1" fg:x="423"/></g><g><title>ph_empty (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.54%" y="389" fill="#FE7D20" fg:w="1" fg:x="423"/></g><g><title>cache_bin_finish_fill (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.56%" y="597" fill="#FD6116" fg:w="1" fg:x="424"/></g><g><title>cache_bin_empty_position_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.56%" y="581" fill="#F1650E" fg:w="1" fg:x="424"/></g><g><title>__rust_alloc (6 samples, 0.12%)</title><rect width=".121%" height="15" x="8.48%" y="773" fill="#EE671D" fg:w="6" fg:x="420"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (6 samples, 0.12%)</title><rect width=".121%" height="15" x="8.48%" y="757" fill="#E9C32F" fg:w="6" fg:x="420"/></g><g><title>_rjem_je_malloc_default (6 samples, 0.12%)</title><rect width=".121%" height="15" x="8.48%" y="741" fill="#F6DA1E" fg:w="6" fg:x="420"/></g><g><title>imalloc (6 samples, 0.12%)</title><rect width=".121%" height="15" x="8.48%" y="725" fill="#DB912F" fg:w="6" fg:x="420"/></g><g><title>imalloc_body (6 samples, 0.12%)</title><rect width=".121%" height="15" x="8.48%" y="709" fill="#F30C1A" fg:w="6" fg:x="420"/></g><g><title>imalloc_no_sample (5 samples, 0.10%)</title><rect width=".101%" height="15" x="8.5%" y="693" fill="#D65710" fg:w="5" fg:x="421"/></g><g><title>iallocztm (5 samples, 0.10%)</title><rect width=".101%" height="15" x="8.5%" y="677" fill="#D0632A" fg:w="5" fg:x="421"/></g><g><title>arena_malloc (5 samples, 0.10%)</title><rect width=".101%" height="15" x="8.5%" y="661" fill="#FD6302" fg:w="5" fg:x="421"/></g><g><title>tcache_alloc_small (5 samples, 0.10%)</title><rect width=".101%" height="15" x="8.5%" y="645" fill="#DCA817" fg:w="5" fg:x="421"/></g><g><title>_rjem_je_tcache_alloc_small_hard (5 samples, 0.10%)</title><rect width=".101%" height="15" x="8.5%" y="629" fill="#F22618" fg:w="5" fg:x="421"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (5 samples, 0.10%)</title><rect width=".101%" height="15" x="8.5%" y="613" fill="#E1B609" fg:w="5" fg:x="421"/></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.581%" y="597" fill="#F3B225" fg:w="1" fg:x="425"/></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.581%" y="581" fill="#E88B13" fg:w="1" fg:x="425"/></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.581%" y="565" fill="#E1C918" fg:w="1" fg:x="425"/></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (7 samples, 0.14%)</title><rect width=".141%" height="15" x="8.48%" y="853" fill="#DD2F2E" fg:w="7" fg:x="420"/></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (7 samples, 0.14%)</title><rect width=".141%" height="15" x="8.48%" y="837" fill="#F9170D" fg:w="7" fg:x="420"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.14%)</title><rect width=".141%" height="15" x="8.48%" y="821" fill="#DB0905" fg:w="7" fg:x="420"/></g><g><title>?? (7 samples, 0.14%)</title><rect width=".141%" height="15" x="8.48%" y="805" fill="#FEAB10" fg:w="7" fg:x="420"/></g><g><title>alloc::alloc::alloc (7 samples, 0.14%)</title><rect width=".141%" height="15" x="8.48%" y="789" fill="#E6AB14" fg:w="7" fg:x="420"/></g><g><title>core::ptr::read_volatile (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.601%" y="773" fill="#D24729" fg:w="1" fg:x="426"/></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.621%" y="853" fill="#CEAD14" fg:w="1" fg:x="427"/></g><g><title>?? (11 samples, 0.22%)</title><rect width=".222%" height="15" x="8.46%" y="869" fill="#E95822" fg:w="11" fg:x="419"/></g><g><title>alloc::collections::btree::node::move_to_slice (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.641%" y="853" fill="#DFD12E" fg:w="2" fg:x="428"/></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.641%" y="837" fill="#FA2B12" fg:w="2" fg:x="428"/></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.641%" y="821" fill="#D00D0A" fg:w="2" fg:x="428"/></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.682%" y="869" fill="#D4C824" fg:w="1" fg:x="430"/></g><g><title>?? (21 samples, 0.42%)</title><rect width=".424%" height="15" x="8.318%" y="885" fill="#E15A1E" fg:w="21" fg:x="412"/></g><g><title>alloc::collections::btree::node::slice_insert (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.702%" y="869" fill="#ECB627" fg:w="2" fg:x="431"/></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.702%" y="853" fill="#D49023" fg:w="2" fg:x="431"/></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.742%" y="661" fill="#E43F2C" fg:w="1" fg:x="433"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.742%" y="645" fill="#E46D06" fg:w="1" fg:x="433"/></g><g><title>arena_bin_refill_slabcur_no_fresh_slab (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.742%" y="629" fill="#EE7518" fg:w="1" fg:x="433"/></g><g><title>arena_bin_slabs_nonfull_tryget (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.742%" y="613" fill="#F21A1A" fg:w="1" fg:x="433"/></g><g><title>_rjem_je_edata_heap_remove_first (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.742%" y="597" fill="#DD5C30" fg:w="1" fg:x="433"/></g><g><title>ph_remove_first (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.742%" y="581" fill="#D1D120" fg:w="1" fg:x="433"/></g><g><title>ph_merge_aux (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.742%" y="565" fill="#DD4616" fg:w="1" fg:x="433"/></g><g><title>_rjem_je_malloc_default (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.742%" y="773" fill="#F89105" fg:w="2" fg:x="433"/></g><g><title>imalloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.742%" y="757" fill="#E2741A" fg:w="2" fg:x="433"/></g><g><title>imalloc_body (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.742%" y="741" fill="#F40511" fg:w="2" fg:x="433"/></g><g><title>imalloc_no_sample (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.742%" y="725" fill="#FC9F21" fg:w="2" fg:x="433"/></g><g><title>iallocztm (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.742%" y="709" fill="#CE4700" fg:w="2" fg:x="433"/></g><g><title>arena_malloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.742%" y="693" fill="#E97636" fg:w="2" fg:x="433"/></g><g><title>tcache_alloc_small (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.742%" y="677" fill="#EA5330" fg:w="2" fg:x="433"/></g><g><title>_rjem_je_tcache_bin_flush_stashed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.762%" y="661" fill="#E40336" fg:w="1" fg:x="434"/></g><g><title>cache_bin_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.783%" y="741" fill="#E29B0D" fg:w="1" fg:x="435"/></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.783%" y="725" fill="#F11C25" fg:w="1" fg:x="435"/></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (4 samples, 0.08%)</title><rect width=".081%" height="15" x="8.742%" y="885" fill="#E95D0A" fg:w="4" fg:x="433"/></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (4 samples, 0.08%)</title><rect width=".081%" height="15" x="8.742%" y="869" fill="#E17113" fg:w="4" fg:x="433"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.08%)</title><rect width=".081%" height="15" x="8.742%" y="853" fill="#F10212" fg:w="4" fg:x="433"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="8.742%" y="837" fill="#E4CF15" fg:w="4" fg:x="433"/></g><g><title>alloc::alloc::alloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="8.742%" y="821" fill="#D5D323" fg:w="4" fg:x="433"/></g><g><title>__rust_alloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="8.742%" y="805" fill="#D1530A" fg:w="4" fg:x="433"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="8.742%" y="789" fill="#D1A401" fg:w="4" fg:x="433"/></g><g><title>_rjem_malloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.783%" y="773" fill="#D5B82B" fg:w="2" fg:x="435"/></g><g><title>imalloc_fastpath (2 samples, 0.04%)</title><rect width=".04%" height="15" x="8.783%" y="757" fill="#E73D22" fg:w="2" fg:x="435"/></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.803%" y="741" fill="#EB4B03" fg:w="1" fg:x="436"/></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="8.803%" y="725" fill="#DC6A2F" fg:w="1" fg:x="436"/></g><g><title>?? (36 samples, 0.73%)</title><rect width=".727%" height="15" x="8.318%" y="901" fill="#D2C421" fg:w="36" fg:x="412"/></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (11 samples, 0.22%)</title><rect width=".222%" height="15" x="8.823%" y="885" fill="#E59A2A" fg:w="11" fg:x="437"/></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.045%" y="901" fill="#E4721A" fg:w="1" fg:x="448"/></g><g><title>?? (38 samples, 0.77%)</title><rect width=".767%" height="15" x="8.318%" y="917" fill="#D09001" fg:w="38" fg:x="412"/></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="901" fill="#EF7025" fg:w="1" fg:x="449"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="885" fill="#D26032" fg:w="1" fg:x="449"/></g><g><title>alloc::collections::btree::mem::take_mut (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="869" fill="#DEB202" fg:w="1" fg:x="449"/></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="853" fill="#E24A12" fg:w="1" fg:x="449"/></g><g><title>alloc::collections::btree::mem::take_mut::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="837" fill="#E14336" fg:w="1" fg:x="449"/></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="821" fill="#FB5C20" fg:w="1" fg:x="449"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="805" fill="#E49516" fg:w="1" fg:x="449"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="789" fill="#F3360D" fg:w="1" fg:x="449"/></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="773" fill="#F3B41C" fg:w="1" fg:x="449"/></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="757" fill="#D0A718" fg:w="1" fg:x="449"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="741" fill="#F5492D" fg:w="1" fg:x="449"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="725" fill="#EDCB30" fg:w="1" fg:x="449"/></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="709" fill="#D3C510" fg:w="1" fg:x="449"/></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="693" fill="#F36333" fg:w="1" fg:x="449"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="677" fill="#D77B1D" fg:w="1" fg:x="449"/></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="661" fill="#EFBA25" fg:w="1" fg:x="449"/></g><g><title>imalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="645" fill="#FC8827" fg:w="1" fg:x="449"/></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="629" fill="#DFD520" fg:w="1" fg:x="449"/></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="613" fill="#E97305" fg:w="1" fg:x="449"/></g><g><title>iallocztm (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="597" fill="#CFE22C" fg:w="1" fg:x="449"/></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="581" fill="#D07E00" fg:w="1" fg:x="449"/></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="565" fill="#F44215" fg:w="1" fg:x="449"/></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="549" fill="#DE610C" fg:w="1" fg:x="449"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="533" fill="#DBD513" fg:w="1" fg:x="449"/></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="517" fill="#FCA91E" fg:w="1" fg:x="449"/></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="501" fill="#CE2033" fg:w="1" fg:x="449"/></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.065%" y="485" fill="#FAAC2A" fg:w="1" fg:x="449"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (349 samples, 7.05%)</title><rect width="7.046%" height="15" x="2.16%" y="997" fill="#D1222B" fg:w="349" fg:x="107"/><text x="2.41%" y="1007.5">serde::de..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (349 samples, 7.05%)</title><rect width="7.046%" height="15" x="2.16%" y="981" fill="#DF0B23" fg:w="349" fg:x="107"/><text x="2.41%" y="991.5">&lt;&amp;mut son..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (349 samples, 7.05%)</title><rect width="7.046%" height="15" x="2.16%" y="965" fill="#FBDB1A" fg:w="349" fg:x="107"/><text x="2.41%" y="975.5">&lt;serde::d..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (49 samples, 0.99%)</title><rect width=".989%" height="15" x="8.217%" y="949" fill="#E77703" fg:w="49" fg:x="407"/></g><g><title>?? (44 samples, 0.89%)</title><rect width=".888%" height="15" x="8.318%" y="933" fill="#D8610B" fg:w="44" fg:x="412"/></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.12%)</title><rect width=".121%" height="15" x="9.085%" y="917" fill="#DF3B09" fg:w="6" fg:x="450"/></g><g><title>emap_alloc_ctx_lookup (3 samples, 0.06%)</title><rect width=".061%" height="15" x="9.247%" y="789" fill="#E95D1F" fg:w="3" fg:x="458"/></g><g><title>rtree_metadata_read (3 samples, 0.06%)</title><rect width=".061%" height="15" x="9.247%" y="773" fill="#EF5121" fg:w="3" fg:x="458"/></g><g><title>rtree_leaf_elm_read (3 samples, 0.06%)</title><rect width=".061%" height="15" x="9.247%" y="757" fill="#D57822" fg:w="3" fg:x="458"/></g><g><title>rtree_leaf_elm_bits_decode (3 samples, 0.06%)</title><rect width=".061%" height="15" x="9.247%" y="741" fill="#F33135" fg:w="3" fg:x="458"/></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.10%)</title><rect width=".101%" height="15" x="9.307%" y="757" fill="#F7D821" fg:w="5" fg:x="461"/></g><g><title>_rjem_je_arena_ralloc_no_move (3 samples, 0.06%)</title><rect width=".061%" height="15" x="9.408%" y="757" fill="#E21A0E" fg:w="3" fg:x="466"/></g><g><title>edata_usize_get (3 samples, 0.06%)</title><rect width=".061%" height="15" x="9.408%" y="741" fill="#D73135" fg:w="3" fg:x="466"/></g><g><title>sz_index2size (3 samples, 0.06%)</title><rect width=".061%" height="15" x="9.408%" y="725" fill="#F5A228" fg:w="3" fg:x="466"/></g><g><title>sz_index2size_lookup (3 samples, 0.06%)</title><rect width=".061%" height="15" x="9.408%" y="709" fill="#E54411" fg:w="3" fg:x="466"/></g><g><title>sz_index2size_lookup_impl (3 samples, 0.06%)</title><rect width=".061%" height="15" x="9.408%" y="693" fill="#D5B60A" fg:w="3" fg:x="466"/></g><g><title>_rjem_je_large_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.469%" y="709" fill="#F57D1E" fg:w="1" fg:x="469"/></g><g><title>_rjem_je_large_palloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.489%" y="709" fill="#E8CA02" fg:w="1" fg:x="470"/></g><g><title>_rjem_je_arena_extent_alloc_large (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.489%" y="693" fill="#ED8C33" fg:w="1" fg:x="470"/></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.489%" y="677" fill="#EC9D19" fg:w="1" fg:x="470"/></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.489%" y="661" fill="#DBD100" fg:w="1" fg:x="470"/></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.489%" y="645" fill="#F07436" fg:w="1" fg:x="470"/></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.489%" y="629" fill="#D80A24" fg:w="1" fg:x="470"/></g><g><title>_rjem_je_ecache_alloc_grow (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.489%" y="613" fill="#DE482C" fg:w="1" fg:x="470"/></g><g><title>extent_alloc_retained (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.489%" y="597" fill="#E89F09" fg:w="1" fg:x="470"/></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.489%" y="581" fill="#D22720" fg:w="1" fg:x="470"/></g><g><title>extent_recycle_split (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.489%" y="565" fill="#D8C22D" fg:w="1" fg:x="470"/></g><g><title>extent_split_interior (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.489%" y="549" fill="#DA1223" fg:w="1" fg:x="470"/></g><g><title>extent_split_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.489%" y="533" fill="#CF5333" fg:w="1" fg:x="470"/></g><g><title>_rjem_je_emap_split_prepare (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.489%" y="517" fill="#E13F2B" fg:w="1" fg:x="470"/></g><g><title>emap_rtree_leaf_elms_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.489%" y="501" fill="#CF3924" fg:w="1" fg:x="470"/></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.489%" y="485" fill="#D86321" fg:w="1" fg:x="470"/></g><g><title>rtree_leafkey (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.489%" y="469" fill="#E12A10" fg:w="1" fg:x="470"/></g><g><title>iralloct (11 samples, 0.22%)</title><rect width=".222%" height="15" x="9.307%" y="789" fill="#DCC92D" fg:w="11" fg:x="461"/></g><g><title>_rjem_je_arena_ralloc (11 samples, 0.22%)</title><rect width=".222%" height="15" x="9.307%" y="773" fill="#E12104" fg:w="11" fg:x="461"/></g><g><title>arena_ralloc_move_helper (3 samples, 0.06%)</title><rect width=".061%" height="15" x="9.469%" y="757" fill="#E02132" fg:w="3" fg:x="469"/></g><g><title>arena_malloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="9.469%" y="741" fill="#F6C633" fg:w="3" fg:x="469"/></g><g><title>tcache_alloc_large (3 samples, 0.06%)</title><rect width=".061%" height="15" x="9.469%" y="725" fill="#CD1604" fg:w="3" fg:x="469"/></g><g><title>cache_bin_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.509%" y="709" fill="#CE0308" fg:w="1" fg:x="471"/></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="9.509%" y="693" fill="#FB170F" fg:w="1" fg:x="471"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (18 samples, 0.36%)</title><rect width=".363%" height="15" x="9.207%" y="949" fill="#FC581C" fg:w="18" fg:x="456"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.34%)</title><rect width=".343%" height="15" x="9.227%" y="933" fill="#D47F0E" fg:w="17" fg:x="457"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.34%)</title><rect width=".343%" height="15" x="9.227%" y="917" fill="#F79125" fg:w="17" fg:x="457"/></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.34%)</title><rect width=".343%" height="15" x="9.227%" y="901" fill="#D17535" fg:w="17" fg:x="457"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (17 samples, 0.34%)</title><rect width=".343%" height="15" x="9.227%" y="885" fill="#D45A2A" fg:w="17" fg:x="457"/></g><g><title>?? (17 samples, 0.34%)</title><rect width=".343%" height="15" x="9.227%" y="869" fill="#DAA425" fg:w="17" fg:x="457"/></g><g><title>alloc::alloc::realloc (17 samples, 0.34%)</title><rect width=".343%" height="15" x="9.227%" y="853" fill="#F64122" fg:w="17" fg:x="457"/></g><g><title>__rust_realloc (17 samples, 0.34%)</title><rect width=".343%" height="15" x="9.227%" y="837" fill="#E76421" fg:w="17" fg:x="457"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (17 samples, 0.34%)</title><rect width=".343%" height="15" x="9.227%" y="821" fill="#E47E0E" fg:w="17" fg:x="457"/></g><g><title>do_rallocx (17 samples, 0.34%)</title><rect width=".343%" height="15" x="9.227%" y="805" fill="#D7AD15" fg:w="17" fg:x="457"/></g><g><title>thread_dalloc_event (2 samples, 0.04%)</title><rect width=".04%" height="15" x="9.53%" y="789" fill="#D20628" fg:w="2" fg:x="472"/></g><g><title>te_event_advance (2 samples, 0.04%)</title><rect width=".04%" height="15" x="9.53%" y="773" fill="#D43012" fg:w="2" fg:x="472"/></g><g><title>_rjem_je_te_event_trigger (2 samples, 0.04%)</title><rect width=".04%" height="15" x="9.53%" y="757" fill="#E6D60B" fg:w="2" fg:x="472"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="9.57%" y="949" fill="#FE6927" fg:w="3" fg:x="474"/></g><g><title>core::ptr::write (3 samples, 0.06%)</title><rect width=".061%" height="15" x="9.57%" y="933" fill="#F59E05" fg:w="3" fg:x="474"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.04%)</title><rect width=".04%" height="15" x="9.812%" y="869" fill="#F9D00B" fg:w="2" fg:x="486"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="10.155%" y="853" fill="#D2271C" fg:w="1" fg:x="503"/></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.16%)</title><rect width=".162%" height="15" x="10.176%" y="853" fill="#D33835" fg:w="8" fg:x="504"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="10.398%" y="757" fill="#E2C91E" fg:w="1" fg:x="515"/></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="10.398%" y="741" fill="#EF6522" fg:w="1" fg:x="515"/></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect width=".02%" height="15" x="10.398%" y="725" fill="#E2D105" fg:w="1" fg:x="515"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for ()&gt;::deserialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="10.398%" y="805" fill="#FA692F" fg:w="3" fg:x="515"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_unit (3 samples, 0.06%)</title><rect width=".061%" height="15" x="10.398%" y="789" fill="#E64803" fg:w="3" fg:x="515"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="10.398%" y="773" fill="#E8DA27" fg:w="3" fg:x="515"/></g><g><title>sonic_rs::reader::Reader::next (2 samples, 0.04%)</title><rect width=".04%" height="15" x="10.418%" y="757" fill="#F8A606" fg:w="2" fg:x="516"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect width=".04%" height="15" x="10.418%" y="741" fill="#F75914" fg:w="2" fg:x="516"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::slice_unchecked (1 samples, 0.02%)</title><rect width=".02%" height="15" x="10.479%" y="725" fill="#F88236" fg:w="1" fg:x="519"/></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="10.479%" y="709" fill="#EAC404" fg:w="1" fg:x="519"/></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="10.479%" y="693" fill="#FA8F1F" fg:w="1" fg:x="519"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="10.479%" y="741" fill="#D36E22" fg:w="3" fg:x="519"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="10.499%" y="725" fill="#D77C30" fg:w="2" fg:x="520"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="10.499%" y="709" fill="#D82E0D" fg:w="2" fg:x="520"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="10.479%" y="757" fill="#CDB819" fg:w="4" fg:x="519"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="10.539%" y="741" fill="#E4010A" fg:w="1" fg:x="522"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="10.539%" y="725" fill="#D5741B" fg:w="1" fg:x="522"/></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect width=".04%" height="15" x="10.559%" y="757" fill="#F15F32" fg:w="2" fg:x="523"/></g><g><title>cache_bin_alloc_easy (2 samples, 0.04%)</title><rect width=".04%" height="15" x="10.6%" y="469" fill="#EE3020" fg:w="2" fg:x="525"/></g><g><title>cache_bin_alloc_impl (2 samples, 0.04%)</title><rect width=".04%" height="15" x="10.6%" y="453" fill="#EB7131" fg:w="2" fg:x="525"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="10.6%" y="597" fill="#CD7F2B" fg:w="3" fg:x="525"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.06%)</title><rect width=".061%" height="15" x="10.6%" y="581" fill="#FAA202" fg:w="3" fg:x="525"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="10.6%" y="565" fill="#DC0D29" fg:w="3" fg:x="525"/></g><g><title>alloc::alloc::alloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="10.6%" y="549" fill="#F9DD19" fg:w="3" fg:x="525"/></g><g><title>__rust_alloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="10.6%" y="533" fill="#D7D013" fg:w="3" fg:x="525"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="10.6%" y="517" fill="#ECAF02" fg:w="3" fg:x="525"/></g><g><title>_rjem_malloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="10.6%" y="501" fill="#F13402" fg:w="3" fg:x="525"/></g><g><title>imalloc_fastpath (3 samples, 0.06%)</title><rect width=".061%" height="15" x="10.6%" y="485" fill="#F88C0E" fg:w="3" fg:x="525"/></g><g><title>te_malloc_fastpath_ctx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="10.64%" y="469" fill="#FD162A" fg:w="1" fg:x="527"/></g><g><title>serde::de::Visitor::visit_borrowed_str (4 samples, 0.08%)</title><rect width=".081%" height="15" x="10.6%" y="757" fill="#EA3D2F" fg:w="4" fg:x="525"/></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (4 samples, 0.08%)</title><rect width=".081%" height="15" x="10.6%" y="741" fill="#D0E20F" fg:w="4" fg:x="525"/></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (4 samples, 0.08%)</title><rect width=".081%" height="15" x="10.6%" y="725" fill="#D9DD04" fg:w="4" fg:x="525"/></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (4 samples, 0.08%)</title><rect width=".081%" height="15" x="10.6%" y="709" fill="#D4AE22" fg:w="4" fg:x="525"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.08%)</title><rect width=".081%" height="15" x="10.6%" y="693" fill="#FD5304" fg:w="4" fg:x="525"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.08%)</title><rect width=".081%" height="15" x="10.6%" y="677" fill="#FAC331" fg:w="4" fg:x="525"/></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.08%)</title><rect width=".081%" height="15" x="10.6%" y="661" fill="#F1C019" fg:w="4" fg:x="525"/></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.08%)</title><rect width=".081%" height="15" x="10.6%" y="645" fill="#D07C0A" fg:w="4" fg:x="525"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="10.6%" y="629" fill="#DE2100" fg:w="4" fg:x="525"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="10.6%" y="613" fill="#EAD11C" fg:w="4" fg:x="525"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="10.66%" y="597" fill="#E00B17" fg:w="1" fg:x="528"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (12 samples, 0.24%)</title><rect width=".242%" height="15" x="10.458%" y="805" fill="#E86301" fg:w="12" fg:x="518"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (12 samples, 0.24%)</title><rect width=".242%" height="15" x="10.458%" y="789" fill="#ED5F2D" fg:w="12" fg:x="518"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (12 samples, 0.24%)</title><rect width=".242%" height="15" x="10.458%" y="773" fill="#D06D0B" fg:w="12" fg:x="518"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="10.68%" y="757" fill="#D8BE30" fg:w="1" fg:x="529"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="10.741%" y="773" fill="#FBAB24" fg:w="2" fg:x="532"/></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.04%)</title><rect width=".04%" height="15" x="10.943%" y="709" fill="#E63E16" fg:w="2" fg:x="542"/></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect width=".02%" height="15" x="10.983%" y="709" fill="#E17223" fg:w="1" fg:x="544"/></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect width=".02%" height="15" x="10.983%" y="693" fill="#D7762A" fg:w="1" fg:x="544"/></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect width=".02%" height="15" x="10.983%" y="677" fill="#F37715" fg:w="1" fg:x="544"/></g><g><title>?? (6 samples, 0.12%)</title><rect width=".121%" height="15" x="10.943%" y="725" fill="#FCB135" fg:w="6" fg:x="542"/></g><g><title>core::num::&lt;impl usize&gt;::checked_add (3 samples, 0.06%)</title><rect width=".061%" height="15" x="11.003%" y="709" fill="#EDD11D" fg:w="3" fg:x="545"/></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (3 samples, 0.06%)</title><rect width=".061%" height="15" x="11.003%" y="693" fill="#D44117" fg:w="3" fg:x="545"/></g><g><title>emap_alloc_ctx_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.266%" y="597" fill="#E6DE2E" fg:w="1" fg:x="558"/></g><g><title>rtree_metadata_read (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.266%" y="581" fill="#D78720" fg:w="1" fg:x="558"/></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.266%" y="565" fill="#F66516" fg:w="1" fg:x="558"/></g><g><title>rtree_leaf_elm_bits_decode (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.266%" y="549" fill="#CE6B0D" fg:w="1" fg:x="558"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.326%" y="565" fill="#FA642C" fg:w="1" fg:x="561"/></g><g><title>_rjem_je_arena_ralloc_no_move (3 samples, 0.06%)</title><rect width=".061%" height="15" x="11.347%" y="565" fill="#E79326" fg:w="3" fg:x="562"/></g><g><title>edata_usize_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.387%" y="549" fill="#E50828" fg:w="1" fg:x="564"/></g><g><title>sz_index2size (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.387%" y="533" fill="#DD871E" fg:w="1" fg:x="564"/></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.387%" y="517" fill="#F9C112" fg:w="1" fg:x="564"/></g><g><title>sz_index2size_lookup_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.387%" y="501" fill="#D18527" fg:w="1" fg:x="564"/></g><g><title>_rjem_je_hook_invoke_alloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="11.407%" y="565" fill="#E8640E" fg:w="2" fg:x="565"/></g><g><title>atomic_load_u (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.427%" y="549" fill="#E0B901" fg:w="1" fg:x="566"/></g><g><title>_rjem_je_hook_invoke_dalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.448%" y="565" fill="#DF8B08" fg:w="1" fg:x="567"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.468%" y="485" fill="#E8D526" fg:w="1" fg:x="568"/></g><g><title>arena_decay_tick (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.488%" y="485" fill="#CF5E16" fg:w="1" fg:x="569"/></g><g><title>arena_decay_ticks (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.488%" y="469" fill="#DBB736" fg:w="1" fg:x="569"/></g><g><title>_rjem_je_arena_decay (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.488%" y="453" fill="#D8B936" fg:w="1" fg:x="569"/></g><g><title>arena_decay_dirty (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.488%" y="437" fill="#FED927" fg:w="1" fg:x="569"/></g><g><title>arena_decay_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.488%" y="421" fill="#F0B217" fg:w="1" fg:x="569"/></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.488%" y="405" fill="#DA0B2F" fg:w="1" fg:x="569"/></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.549%" y="373" fill="#DA3333" fg:w="1" fg:x="572"/></g><g><title>extent_activate_locked (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.549%" y="357" fill="#EE7E1B" fg:w="1" fg:x="572"/></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.549%" y="341" fill="#F9CA16" fg:w="1" fg:x="572"/></g><g><title>eset_stats_sub (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.549%" y="325" fill="#FEC331" fg:w="1" fg:x="572"/></g><g><title>atomic_store_zu (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.549%" y="309" fill="#D07B0E" fg:w="1" fg:x="572"/></g><g><title>extent_recycle_split (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.569%" y="373" fill="#E0C808" fg:w="1" fg:x="573"/></g><g><title>extent_split_interior (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.569%" y="357" fill="#D93D24" fg:w="1" fg:x="573"/></g><g><title>extent_split_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.569%" y="341" fill="#CE232D" fg:w="1" fg:x="573"/></g><g><title>_rjem_je_edata_cache_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.569%" y="325" fill="#D94121" fg:w="1" fg:x="573"/></g><g><title>_rjem_je_edata_avail_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.569%" y="309" fill="#DE9E30" fg:w="1" fg:x="573"/></g><g><title>ph_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.569%" y="293" fill="#FE0236" fg:w="1" fg:x="573"/></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.569%" y="277" fill="#FA8F26" fg:w="1" fg:x="573"/></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.569%" y="261" fill="#F81900" fg:w="1" fg:x="573"/></g><g><title>_rjem_je_ecache_alloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="11.549%" y="405" fill="#CE981B" fg:w="4" fg:x="572"/></g><g><title>extent_recycle (4 samples, 0.08%)</title><rect width=".081%" height="15" x="11.549%" y="389" fill="#F04D1E" fg:w="4" fg:x="572"/></g><g><title>malloc_mutex_lock (2 samples, 0.04%)</title><rect width=".04%" height="15" x="11.589%" y="373" fill="#E70503" fg:w="2" fg:x="574"/></g><g><title>malloc_mutex_trylock_final (2 samples, 0.04%)</title><rect width=".04%" height="15" x="11.589%" y="357" fill="#CFE220" fg:w="2" fg:x="574"/></g><g><title>__GI___pthread_mutex_trylock (2 samples, 0.04%)</title><rect width=".04%" height="15" x="11.589%" y="341" fill="#DECF2F" fg:w="2" fg:x="574"/></g><g><title>_rjem_je_emap_update_edata_state (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.629%" y="325" fill="#E5732D" fg:w="1" fg:x="576"/></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.629%" y="309" fill="#E0BF06" fg:w="1" fg:x="576"/></g><g><title>rtree_cache_direct_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.629%" y="293" fill="#E6E318" fg:w="1" fg:x="576"/></g><g><title>extent_recycle_extract (2 samples, 0.04%)</title><rect width=".04%" height="15" x="11.629%" y="357" fill="#E45013" fg:w="2" fg:x="576"/></g><g><title>extent_activate_locked (2 samples, 0.04%)</title><rect width=".04%" height="15" x="11.629%" y="341" fill="#F7E500" fg:w="2" fg:x="576"/></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.649%" y="325" fill="#EDC20F" fg:w="1" fg:x="577"/></g><g><title>eset_stats_sub (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.649%" y="309" fill="#DBCB14" fg:w="1" fg:x="577"/></g><g><title>atomic_store_zu (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.649%" y="293" fill="#EA8008" fg:w="1" fg:x="577"/></g><g><title>extent_deactivate_locked (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.67%" y="341" fill="#F8CA08" fg:w="1" fg:x="578"/></g><g><title>extent_deactivate_locked_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.67%" y="325" fill="#CE6825" fg:w="1" fg:x="578"/></g><g><title>_rjem_je_eset_insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.67%" y="309" fill="#DF081B" fg:w="1" fg:x="578"/></g><g><title>_rjem_je_edata_heap_insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.67%" y="293" fill="#D8D91C" fg:w="1" fg:x="578"/></g><g><title>ph_insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.67%" y="277" fill="#F9C701" fg:w="1" fg:x="578"/></g><g><title>_rjem_je_base_alloc_edata (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.69%" y="309" fill="#F05511" fg:w="1" fg:x="579"/></g><g><title>base_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.69%" y="293" fill="#CE6C2D" fg:w="1" fg:x="579"/></g><g><title>_rjem_je_edata_heap_remove_first (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.69%" y="277" fill="#F5D229" fg:w="1" fg:x="579"/></g><g><title>extent_recycle_split (3 samples, 0.06%)</title><rect width=".061%" height="15" x="11.67%" y="357" fill="#CE0D25" fg:w="3" fg:x="578"/></g><g><title>extent_split_interior (2 samples, 0.04%)</title><rect width=".04%" height="15" x="11.69%" y="341" fill="#FA3D12" fg:w="2" fg:x="579"/></g><g><title>extent_split_impl (2 samples, 0.04%)</title><rect width=".04%" height="15" x="11.69%" y="325" fill="#EBAC30" fg:w="2" fg:x="579"/></g><g><title>_rjem_je_edata_cache_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.71%" y="309" fill="#F9C911" fg:w="1" fg:x="580"/></g><g><title>_rjem_je_edata_avail_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.71%" y="293" fill="#DBD006" fg:w="1" fg:x="580"/></g><g><title>ph_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.71%" y="277" fill="#F81F17" fg:w="1" fg:x="580"/></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.71%" y="261" fill="#F50F2A" fg:w="1" fg:x="580"/></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.71%" y="245" fill="#DED927" fg:w="1" fg:x="580"/></g><g><title>extent_recycle (6 samples, 0.12%)</title><rect width=".121%" height="15" x="11.629%" y="373" fill="#D2DB1B" fg:w="6" fg:x="576"/></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.73%" y="357" fill="#FCA624" fg:w="1" fg:x="581"/></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.73%" y="341" fill="#F58422" fg:w="1" fg:x="581"/></g><g><title>_rjem_je_ecache_alloc_grow (7 samples, 0.14%)</title><rect width=".141%" height="15" x="11.629%" y="405" fill="#EC3603" fg:w="7" fg:x="576"/></g><g><title>extent_alloc_retained (7 samples, 0.14%)</title><rect width=".141%" height="15" x="11.629%" y="389" fill="#F1AD2B" fg:w="7" fg:x="576"/></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.751%" y="373" fill="#D7BE09" fg:w="1" fg:x="582"/></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.751%" y="357" fill="#F26510" fg:w="1" fg:x="582"/></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.751%" y="341" fill="#DFBE15" fg:w="1" fg:x="582"/></g><g><title>arena_slab_alloc (14 samples, 0.28%)</title><rect width=".283%" height="15" x="11.508%" y="485" fill="#D7E419" fg:w="14" fg:x="570"/></g><g><title>_rjem_je_pa_alloc (14 samples, 0.28%)</title><rect width=".283%" height="15" x="11.508%" y="469" fill="#E12416" fg:w="14" fg:x="570"/></g><g><title>pai_alloc (13 samples, 0.26%)</title><rect width=".263%" height="15" x="11.528%" y="453" fill="#FB6A2E" fg:w="13" fg:x="571"/></g><g><title>pac_alloc_impl (13 samples, 0.26%)</title><rect width=".263%" height="15" x="11.528%" y="437" fill="#D05A01" fg:w="13" fg:x="571"/></g><g><title>pac_alloc_real (13 samples, 0.26%)</title><rect width=".263%" height="15" x="11.528%" y="421" fill="#F30A04" fg:w="13" fg:x="571"/></g><g><title>pac_may_have_muzzy (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.771%" y="405" fill="#D4891B" fg:w="1" fg:x="583"/></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.791%" y="485" fill="#E7DC31" fg:w="1" fg:x="584"/></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.791%" y="469" fill="#ED6014" fg:w="1" fg:x="584"/></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.791%" y="453" fill="#EFE51E" fg:w="1" fg:x="584"/></g><g><title>_rjem_je_tcache_alloc_small_hard (18 samples, 0.36%)</title><rect width=".363%" height="15" x="11.468%" y="517" fill="#DB4121" fg:w="18" fg:x="568"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (18 samples, 0.36%)</title><rect width=".363%" height="15" x="11.468%" y="501" fill="#F38607" fg:w="18" fg:x="568"/></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.811%" y="485" fill="#D8B136" fg:w="1" fg:x="585"/></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.811%" y="469" fill="#D3A014" fg:w="1" fg:x="585"/></g><g><title>arena_malloc (19 samples, 0.38%)</title><rect width=".384%" height="15" x="11.468%" y="549" fill="#EF5527" fg:w="19" fg:x="568"/></g><g><title>tcache_alloc_small (19 samples, 0.38%)</title><rect width=".384%" height="15" x="11.468%" y="533" fill="#E87D16" fg:w="19" fg:x="568"/></g><g><title>cache_bin_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.831%" y="517" fill="#F43922" fg:w="1" fg:x="586"/></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.831%" y="501" fill="#D6CB20" fg:w="1" fg:x="586"/></g><g><title>arena_ralloc_move_helper (20 samples, 0.40%)</title><rect width=".404%" height="15" x="11.468%" y="565" fill="#CF3A2B" fg:w="20" fg:x="568"/></g><g><title>sz_size2index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.851%" y="549" fill="#D7C10F" fg:w="1" fg:x="587"/></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.851%" y="533" fill="#E80F2C" fg:w="1" fg:x="587"/></g><g><title>sz_size2index_lookup_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.851%" y="517" fill="#D40330" fg:w="1" fg:x="587"/></g><g><title>iralloct (30 samples, 0.61%)</title><rect width=".606%" height="15" x="11.286%" y="597" fill="#DA8007" fg:w="30" fg:x="559"/></g><g><title>_rjem_je_arena_ralloc (30 samples, 0.61%)</title><rect width=".606%" height="15" x="11.286%" y="581" fill="#E2D827" fg:w="30" fg:x="559"/></g><g><title>isdalloct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.872%" y="565" fill="#F32F33" fg:w="1" fg:x="588"/></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.872%" y="549" fill="#F1B728" fg:w="1" fg:x="588"/></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.872%" y="533" fill="#E7D920" fg:w="1" fg:x="588"/></g><g><title>cache_bin_dalloc_easy (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.872%" y="517" fill="#E53D26" fg:w="1" fg:x="588"/></g><g><title>cache_bin_full (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.872%" y="501" fill="#E1D205" fg:w="1" fg:x="588"/></g><g><title>thread_alloc_event (2 samples, 0.04%)</title><rect width=".04%" height="15" x="11.892%" y="597" fill="#E74F2D" fg:w="2" fg:x="589"/></g><g><title>te_event_advance (2 samples, 0.04%)</title><rect width=".04%" height="15" x="11.892%" y="581" fill="#E06407" fg:w="2" fg:x="589"/></g><g><title>te_ctx_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.912%" y="565" fill="#F1C612" fg:w="1" fg:x="590"/></g><g><title>?? (38 samples, 0.77%)</title><rect width=".767%" height="15" x="11.185%" y="677" fill="#FC6135" fg:w="38" fg:x="554"/></g><g><title>alloc::alloc::realloc (38 samples, 0.77%)</title><rect width=".767%" height="15" x="11.185%" y="661" fill="#DC5807" fg:w="38" fg:x="554"/></g><g><title>__rust_realloc (38 samples, 0.77%)</title><rect width=".767%" height="15" x="11.185%" y="645" fill="#D5B00E" fg:w="38" fg:x="554"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (38 samples, 0.77%)</title><rect width=".767%" height="15" x="11.185%" y="629" fill="#F64907" fg:w="38" fg:x="554"/></g><g><title>do_rallocx (38 samples, 0.77%)</title><rect width=".767%" height="15" x="11.185%" y="613" fill="#F54024" fg:w="38" fg:x="554"/></g><g><title>thread_dalloc_event (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.932%" y="597" fill="#F5500A" fg:w="1" fg:x="591"/></g><g><title>te_event_advance (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.932%" y="581" fill="#E86B32" fg:w="1" fg:x="591"/></g><g><title>te_ctx_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.932%" y="565" fill="#FD0300" fg:w="1" fg:x="591"/></g><g><title>tsd_thread_deallocated_next_event_fastp_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.932%" y="549" fill="#D46335" fg:w="1" fg:x="591"/></g><g><title>tsd_thread_deallocated_next_event_fastp_get_unsafe (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.932%" y="533" fill="#F96F36" fg:w="1" fg:x="591"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (39 samples, 0.79%)</title><rect width=".787%" height="15" x="11.185%" y="693" fill="#F9371E" fg:w="39" fg:x="554"/></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.952%" y="677" fill="#ED2F2A" fg:w="1" fg:x="592"/></g><g><title>_rjem_je_eset_fit (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.993%" y="405" fill="#D31412" fg:w="1" fg:x="594"/></g><g><title>eset_first_fit (1 samples, 0.02%)</title><rect width=".02%" height="15" x="11.993%" y="389" fill="#E7CB2E" fg:w="1" fg:x="594"/></g><g><title>extent_recycle_extract (2 samples, 0.04%)</title><rect width=".04%" height="15" x="11.993%" y="421" fill="#ED8E03" fg:w="2" fg:x="594"/></g><g><title>extent_activate_locked (1 samples, 0.02%)</title><rect width=".02%" height="15" x="12.013%" y="405" fill="#F16B01" fg:w="1" fg:x="595"/></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="12.013%" y="389" fill="#E5530D" fg:w="1" fg:x="595"/></g><g><title>_rjem_je_sz_psz_quantize_floor (1 samples, 0.02%)</title><rect width=".02%" height="15" x="12.013%" y="373" fill="#F15B28" fg:w="1" fg:x="595"/></g><g><title>_rjem_je_edata_avail_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="12.053%" y="357" fill="#E1032D" fg:w="1" fg:x="597"/></g><g><title>ph_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="12.053%" y="341" fill="#F4DF0E" fg:w="1" fg:x="597"/></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect width=".02%" height="15" x="12.053%" y="325" fill="#E07C25" fg:w="1" fg:x="597"/></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect width=".02%" height="15" x="12.053%" y="309" fill="#FBAB1E" fg:w="1" fg:x="597"/></g><g><title>phn_next_set (1 samples, 0.02%)</title><rect width=".02%" height="15" x="12.053%" y="293" fill="#EC2E36" fg:w="1" fg:x="597"/></g><g><title>extent_recycle_split (3 samples, 0.06%)</title><rect width=".061%" height="15" x="12.033%" y="421" fill="#F5D505" fg:w="3" fg:x="596"/></g><g><title>extent_split_interior (3 samples, 0.06%)</title><rect width=".061%" height="15" x="12.033%" y="405" fill="#E6901B" fg:w="3" fg:x="596"/></g><g><title>extent_split_impl (3 samples, 0.06%)</title><rect width=".061%" height="15" x="12.033%" y="389" fill="#DC5606" fg:w="3" fg:x="596"/></g><g><title>_rjem_je_edata_cache_get (2 samples, 0.04%)</title><rect width=".04%" height="15" x="12.053%" y="373" fill="#F0140D" fg:w="2" fg:x="597"/></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="12.073%" y="357" fill="#D95922" fg:w="1" fg:x="598"/></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect width=".02%" height="15" x="12.073%" y="341" fill="#E50D05" fg:w="1" fg:x="598"/></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="12.094%" y="421" fill="#F44323" fg:w="1" fg:x="599"/></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect width=".02%" height="15" x="12.094%" y="405" fill="#DD2802" fg:w="1" fg:x="599"/></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="12.094%" y="389" fill="#ED9D15" fg:w="1" fg:x="599"/></g><g><title>arena_slab_alloc (7 samples, 0.14%)</title><rect width=".141%" height="15" x="11.993%" y="549" fill="#DE5E0B" fg:w="7" fg:x="594"/></g><g><title>_rjem_je_pa_alloc (7 samples, 0.14%)</title><rect width=".141%" height="15" x="11.993%" y="533" fill="#F97106" fg:w="7" fg:x="594"/></g><g><title>pai_alloc (7 samples, 0.14%)</title><rect width=".141%" height="15" x="11.993%" y="517" fill="#EE8924" fg:w="7" fg:x="594"/></g><g><title>pac_alloc_impl (7 samples, 0.14%)</title><rect width=".141%" height="15" x="11.993%" y="501" fill="#D2661A" fg:w="7" fg:x="594"/></g><g><title>pac_alloc_real (7 samples, 0.14%)</title><rect width=".141%" height="15" x="11.993%" y="485" fill="#DA1E1E" fg:w="7" fg:x="594"/></g><g><title>_rjem_je_ecache_alloc_grow (7 samples, 0.14%)</title><rect width=".141%" height="15" x="11.993%" y="469" fill="#D6431A" fg:w="7" fg:x="594"/></g><g><title>extent_alloc_retained (7 samples, 0.14%)</title><rect width=".141%" height="15" x="11.993%" y="453" fill="#FB0935" fg:w="7" fg:x="594"/></g><g><title>extent_recycle (7 samples, 0.14%)</title><rect width=".141%" height="15" x="11.993%" y="437" fill="#E4CC19" fg:w="7" fg:x="594"/></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="12.114%" y="421" fill="#CF9908" fg:w="1" fg:x="600"/></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect width=".02%" height="15" x="12.114%" y="405" fill="#F20910" fg:w="1" fg:x="600"/></g><g><title>imalloc_no_sample (10 samples, 0.20%)</title><rect width=".202%" height="15" x="11.973%" y="645" fill="#D9D30A" fg:w="10" fg:x="593"/></g><g><title>iallocztm (10 samples, 0.20%)</title><rect width=".202%" height="15" x="11.973%" y="629" fill="#DBE434" fg:w="10" fg:x="593"/></g><g><title>arena_malloc (10 samples, 0.20%)</title><rect width=".202%" height="15" x="11.973%" y="613" fill="#E75C1D" fg:w="10" fg:x="593"/></g><g><title>tcache_alloc_small (10 samples, 0.20%)</title><rect width=".202%" height="15" x="11.973%" y="597" fill="#E80817" fg:w="10" fg:x="593"/></g><g><title>_rjem_je_tcache_alloc_small_hard (9 samples, 0.18%)</title><rect width=".182%" height="15" x="11.993%" y="581" fill="#D8D322" fg:w="9" fg:x="594"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (9 samples, 0.18%)</title><rect width=".182%" height="15" x="11.993%" y="565" fill="#EC9700" fg:w="9" fg:x="594"/></g><g><title>malloc_mutex_lock (2 samples, 0.04%)</title><rect width=".04%" height="15" x="12.134%" y="549" fill="#D1A803" fg:w="2" fg:x="601"/></g><g><title>malloc_mutex_trylock_final (2 samples, 0.04%)</title><rect width=".04%" height="15" x="12.134%" y="533" fill="#D0811C" fg:w="2" fg:x="601"/></g><g><title>__GI___pthread_mutex_trylock (2 samples, 0.04%)</title><rect width=".04%" height="15" x="12.134%" y="517" fill="#E54E16" fg:w="2" fg:x="601"/></g><g><title>_rjem_je_malloc_default (11 samples, 0.22%)</title><rect width=".222%" height="15" x="11.973%" y="693" fill="#E4BB0D" fg:w="11" fg:x="593"/></g><g><title>imalloc (11 samples, 0.22%)</title><rect width=".222%" height="15" x="11.973%" y="677" fill="#F07718" fg:w="11" fg:x="593"/></g><g><title>imalloc_body (11 samples, 0.22%)</title><rect width=".222%" height="15" x="11.973%" y="661" fill="#D1C22A" fg:w="11" fg:x="593"/></g><g><title>thread_alloc_event (1 samples, 0.02%)</title><rect width=".02%" height="15" x="12.174%" y="645" fill="#F7C82E" fg:w="1" fg:x="603"/></g><g><title>te_event_advance (1 samples, 0.02%)</title><rect width=".02%" height="15" x="12.174%" y="629" fill="#DA4C10" fg:w="1" fg:x="603"/></g><g><title>te_ctx_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="12.174%" y="613" fill="#E11530" fg:w="1" fg:x="603"/></g><g><title>cache_bin_alloc_easy (4 samples, 0.08%)</title><rect width=".081%" height="15" x="12.235%" y="661" fill="#EFDF32" fg:w="4" fg:x="606"/></g><g><title>cache_bin_alloc_impl (4 samples, 0.08%)</title><rect width=".081%" height="15" x="12.235%" y="645" fill="#F42D15" fg:w="4" fg:x="606"/></g><g><title>_rjem_malloc (7 samples, 0.14%)</title><rect width=".141%" height="15" x="12.195%" y="693" fill="#E8212B" fg:w="7" fg:x="604"/></g><g><title>imalloc_fastpath (6 samples, 0.12%)</title><rect width=".121%" height="15" x="12.215%" y="677" fill="#D10803" fg:w="6" fg:x="605"/></g><g><title>sz_size2index_usize_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="12.316%" y="661" fill="#D61935" fg:w="1" fg:x="610"/></g><g><title>sz_index2size_lookup_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="12.316%" y="645" fill="#FEBA36" fg:w="1" fg:x="610"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (75 samples, 1.51%)</title><rect width="1.514%" height="15" x="10.862%" y="757" fill="#D0AE31" fg:w="75" fg:x="538"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (72 samples, 1.45%)</title><rect width="1.454%" height="15" x="10.923%" y="741" fill="#E9BF33" fg:w="72" fg:x="541"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (65 samples, 1.31%)</title><rect width="1.312%" height="15" x="11.064%" y="725" fill="#DE860A" fg:w="65" fg:x="548"/></g><g><title>alloc::raw_vec::finish_grow (62 samples, 1.25%)</title><rect width="1.252%" height="15" x="11.125%" y="709" fill="#E6E214" fg:w="62" fg:x="551"/></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect width=".04%" height="15" x="12.336%" y="693" fill="#FB6F19" fg:w="2" fg:x="611"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="12.376%" y="741" fill="#E0282E" fg:w="1" fg:x="613"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="12.396%" y="741" fill="#EC6C2F" fg:w="1" fg:x="614"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="12.396%" y="725" fill="#EA5D00" fg:w="1" fg:x="614"/></g><g><title>?? (13 samples, 0.26%)</title><rect width=".263%" height="15" x="12.376%" y="757" fill="#E0D520" fg:w="13" fg:x="613"/></g><g><title>core::ptr::write (11 samples, 0.22%)</title><rect width=".222%" height="15" x="12.417%" y="741" fill="#FB0B30" fg:w="11" fg:x="615"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.14%)</title><rect width=".141%" height="15" x="13.325%" y="677" fill="#ECAD05" fg:w="7" fg:x="660"/></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.10%)</title><rect width=".101%" height="15" x="13.608%" y="661" fill="#E65F0C" fg:w="5" fg:x="674"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u64 (2 samples, 0.04%)</title><rect width=".04%" height="15" x="14.193%" y="549" fill="#E8D101" fg:w="2" fg:x="703"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (6 samples, 0.12%)</title><rect width=".121%" height="15" x="14.234%" y="533" fill="#E80601" fg:w="6" fg:x="705"/></g><g><title>sonic_rs::reader::Reader::next (10 samples, 0.20%)</title><rect width=".202%" height="15" x="14.234%" y="549" fill="#D2E032" fg:w="10" fg:x="705"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="14.355%" y="533" fill="#E47F23" fg:w="4" fg:x="711"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (4 samples, 0.08%)</title><rect width=".081%" height="15" x="14.355%" y="517" fill="#F5662D" fg:w="4" fg:x="711"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (4 samples, 0.08%)</title><rect width=".081%" height="15" x="14.355%" y="501" fill="#D60131" fg:w="4" fg:x="711"/></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (7 samples, 0.14%)</title><rect width=".141%" height="15" x="14.9%" y="533" fill="#E2A328" fg:w="7" fg:x="738"/></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (7 samples, 0.14%)</title><rect width=".141%" height="15" x="14.9%" y="517" fill="#EFD41C" fg:w="7" fg:x="738"/></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (10 samples, 0.20%)</title><rect width=".202%" height="15" x="15.041%" y="533" fill="#DC140D" fg:w="10" fg:x="745"/></g><g><title>?? (65 samples, 1.31%)</title><rect width="1.312%" height="15" x="14.193%" y="565" fill="#D2A423" fg:w="65" fg:x="703"/></g><g><title>sonic_rs::util::num::parse_number_unchecked (53 samples, 1.07%)</title><rect width="1.07%" height="15" x="14.436%" y="549" fill="#F86D29" fg:w="53" fg:x="715"/></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (13 samples, 0.26%)</title><rect width=".263%" height="15" x="15.243%" y="533" fill="#EE1732" fg:w="13" fg:x="755"/></g><g><title>?? (67 samples, 1.35%)</title><rect width="1.353%" height="15" x="14.193%" y="581" fill="#D33031" fg:w="67" fg:x="703"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="15.506%" y="565" fill="#DF2415" fg:w="2" fg:x="768"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (99 samples, 2.00%)</title><rect width="1.999%" height="15" x="13.709%" y="629" fill="#CF7B2E" fg:w="99" fg:x="679"/><text x="13.959%" y="639.5">&lt;..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (92 samples, 1.86%)</title><rect width="1.857%" height="15" x="13.85%" y="613" fill="#F0DA20" fg:w="92" fg:x="686"/><text x="14.1%" y="623.5">s..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (75 samples, 1.51%)</title><rect width="1.514%" height="15" x="14.193%" y="597" fill="#FC052B" fg:w="75" fg:x="703"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (8 samples, 0.16%)</title><rect width=".162%" height="15" x="15.546%" y="581" fill="#FC5413" fg:w="8" fg:x="770"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect width=".04%" height="15" x="15.708%" y="581" fill="#F39827" fg:w="2" fg:x="778"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (103 samples, 2.08%)</title><rect width="2.079%" height="15" x="13.709%" y="661" fill="#EAA00F" fg:w="103" fg:x="679"/><text x="13.959%" y="671.5">&lt;..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (103 samples, 2.08%)</title><rect width="2.079%" height="15" x="13.709%" y="645" fill="#ED2214" fg:w="103" fg:x="679"/><text x="13.959%" y="655.5">&lt;..</text></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="15.708%" y="629" fill="#E5610D" fg:w="4" fg:x="778"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="15.708%" y="613" fill="#EA4732" fg:w="4" fg:x="778"/></g><g><title>sonic_rs::reader::Reader::next (4 samples, 0.08%)</title><rect width=".081%" height="15" x="15.708%" y="597" fill="#FD9B04" fg:w="4" fg:x="778"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="15.748%" y="581" fill="#DEB925" fg:w="2" fg:x="780"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="15.748%" y="565" fill="#FBB10D" fg:w="2" fg:x="780"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect width=".04%" height="15" x="15.748%" y="549" fill="#FAB328" fg:w="2" fg:x="780"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="16.455%" y="565" fill="#F22C02" fg:w="4" fg:x="815"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10 samples, 0.20%)</title><rect width=".202%" height="15" x="16.535%" y="533" fill="#D8B10D" fg:w="10" fg:x="819"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::slice_unchecked (4 samples, 0.08%)</title><rect width=".081%" height="15" x="16.737%" y="533" fill="#D86A2B" fg:w="4" fg:x="829"/></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.08%)</title><rect width=".081%" height="15" x="16.737%" y="517" fill="#D8B702" fg:w="4" fg:x="829"/></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.08%)</title><rect width=".081%" height="15" x="16.737%" y="501" fill="#F94B03" fg:w="4" fg:x="829"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14 samples, 0.28%)</title><rect width=".283%" height="15" x="16.818%" y="517" fill="#DB4327" fg:w="14" fg:x="833"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (7 samples, 0.14%)</title><rect width=".141%" height="15" x="17.101%" y="517" fill="#FDE402" fg:w="7" fg:x="847"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect width=".02%" height="15" x="17.242%" y="517" fill="#EB8A1B" fg:w="1" fg:x="854"/></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (4 samples, 0.08%)</title><rect width=".081%" height="15" x="17.262%" y="517" fill="#EC6133" fg:w="4" fg:x="855"/></g><g><title>?? (41 samples, 0.83%)</title><rect width=".828%" height="15" x="16.535%" y="565" fill="#F0501E" fg:w="41" fg:x="819"/></g><g><title>?? (41 samples, 0.83%)</title><rect width=".828%" height="15" x="16.535%" y="549" fill="#E6B213" fg:w="41" fg:x="819"/></g><g><title>?? (27 samples, 0.55%)</title><rect width=".545%" height="15" x="16.818%" y="533" fill="#D2BE1B" fg:w="27" fg:x="833"/></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (1 samples, 0.02%)</title><rect width=".02%" height="15" x="17.343%" y="517" fill="#DE6B1F" fg:w="1" fg:x="859"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (82 samples, 1.66%)</title><rect width="1.656%" height="15" x="15.869%" y="629" fill="#D87F22" fg:w="82" fg:x="786"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (53 samples, 1.07%)</title><rect width="1.07%" height="15" x="16.455%" y="613" fill="#EA7434" fg:w="53" fg:x="815"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (53 samples, 1.07%)</title><rect width="1.07%" height="15" x="16.455%" y="597" fill="#DE7C0F" fg:w="53" fg:x="815"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (53 samples, 1.07%)</title><rect width="1.07%" height="15" x="16.455%" y="581" fill="#E7B31C" fg:w="53" fg:x="815"/></g><g><title>serde::de::Visitor::visit_borrowed_str (8 samples, 0.16%)</title><rect width=".162%" height="15" x="17.363%" y="565" fill="#E25D2D" fg:w="8" fg:x="860"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (8 samples, 0.16%)</title><rect width=".162%" height="15" x="17.363%" y="549" fill="#D70833" fg:w="8" fg:x="860"/></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (7 samples, 0.14%)</title><rect width=".141%" height="15" x="17.383%" y="533" fill="#DF6A05" fg:w="7" fg:x="861"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7 samples, 0.14%)</title><rect width=".141%" height="15" x="17.383%" y="517" fill="#FABF05" fg:w="7" fg:x="861"/></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (7 samples, 0.14%)</title><rect width=".141%" height="15" x="17.383%" y="501" fill="#F2842C" fg:w="7" fg:x="861"/></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (7 samples, 0.14%)</title><rect width=".141%" height="15" x="17.383%" y="485" fill="#FB981D" fg:w="7" fg:x="861"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect width=".02%" height="15" x="17.525%" y="613" fill="#DAB305" fg:w="1" fg:x="868"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (3 samples, 0.06%)</title><rect width=".061%" height="15" x="17.545%" y="613" fill="#E34313" fg:w="3" fg:x="869"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect width=".02%" height="15" x="17.605%" y="613" fill="#E9771F" fg:w="1" fg:x="872"/></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (2 samples, 0.04%)</title><rect width=".04%" height="15" x="17.626%" y="613" fill="#F17816" fg:w="2" fg:x="873"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (9 samples, 0.18%)</title><rect width=".182%" height="15" x="17.666%" y="597" fill="#E0661E" fg:w="9" fg:x="875"/></g><g><title>sonic_rs::reader::Reader::next (14 samples, 0.28%)</title><rect width=".283%" height="15" x="17.666%" y="613" fill="#D2A425" fg:w="14" fg:x="875"/></g><g><title>?? (5 samples, 0.10%)</title><rect width=".101%" height="15" x="17.848%" y="597" fill="#E2BF10" fg:w="5" fg:x="884"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (5 samples, 0.10%)</title><rect width=".101%" height="15" x="17.848%" y="581" fill="#D6282D" fg:w="5" fg:x="884"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (5 samples, 0.10%)</title><rect width=".101%" height="15" x="17.848%" y="565" fill="#F41D1A" fg:w="5" fg:x="884"/></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (5 samples, 0.10%)</title><rect width=".101%" height="15" x="17.989%" y="597" fill="#D81005" fg:w="5" fg:x="891"/></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (8 samples, 0.16%)</title><rect width=".162%" height="15" x="18.09%" y="597" fill="#F94C23" fg:w="8" fg:x="896"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (238 samples, 4.81%)</title><rect width="4.805%" height="15" x="13.467%" y="677" fill="#CF0B2C" fg:w="238" fg:x="667"/><text x="13.717%" y="687.5">&lt;json_..</text></g><g><title>serde::de::MapAccess::next_key (123 samples, 2.48%)</title><rect width="2.483%" height="15" x="15.788%" y="661" fill="#E4BE31" fg:w="123" fg:x="782"/><text x="16.038%" y="671.5">se..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (123 samples, 2.48%)</title><rect width="2.483%" height="15" x="15.788%" y="645" fill="#D6AD0C" fg:w="123" fg:x="782"/><text x="16.038%" y="655.5">&lt;s..</text></g><g><title>?? (37 samples, 0.75%)</title><rect width=".747%" height="15" x="17.525%" y="629" fill="#DA1A23" fg:w="37" fg:x="868"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (16 samples, 0.32%)</title><rect width=".323%" height="15" x="17.949%" y="613" fill="#DCC813" fg:w="16" fg:x="889"/></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="18.252%" y="597" fill="#EF5F31" fg:w="1" fg:x="904"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize (249 samples, 5.03%)</title><rect width="5.027%" height="15" x="13.285%" y="709" fill="#EB5535" fg:w="249" fg:x="658"/><text x="13.535%" y="719.5">json_b..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (249 samples, 5.03%)</title><rect width="5.027%" height="15" x="13.285%" y="693" fill="#E9851F" fg:w="249" fg:x="658"/><text x="13.535%" y="703.5">&lt;&amp;mut ..</text></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="18.272%" y="677" fill="#DA1914" fg:w="2" fg:x="905"/></g><g><title>sonic_rs::reader::Reader::next (2 samples, 0.04%)</title><rect width=".04%" height="15" x="18.272%" y="661" fill="#FCD226" fg:w="2" fg:x="905"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect width=".04%" height="15" x="18.272%" y="645" fill="#F28615" fg:w="2" fg:x="905"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8 samples, 0.16%)</title><rect width=".162%" height="15" x="18.453%" y="677" fill="#D51C30" fg:w="8" fg:x="914"/></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.08%)</title><rect width=".081%" height="15" x="18.635%" y="661" fill="#FAC402" fg:w="4" fg:x="923"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="18.958%" y="581" fill="#E30511" fg:w="3" fg:x="939"/></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.06%)</title><rect width=".061%" height="15" x="19.847%" y="517" fill="#DDE218" fg:w="3" fg:x="983"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="19.907%" y="517" fill="#D30530" fg:w="2" fg:x="986"/></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.04%)</title><rect width=".04%" height="15" x="19.907%" y="501" fill="#DB9606" fg:w="2" fg:x="986"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 0.22%)</title><rect width=".222%" height="15" x="19.948%" y="517" fill="#FB2E10" fg:w="11" fg:x="988"/></g><g><title>core::cmp::max (4 samples, 0.08%)</title><rect width=".081%" height="15" x="20.17%" y="517" fill="#DCCC28" fg:w="4" fg:x="999"/></g><g><title>core::cmp::Ord::max (4 samples, 0.08%)</title><rect width=".081%" height="15" x="20.17%" y="501" fill="#D35502" fg:w="4" fg:x="999"/></g><g><title>core::cmp::max_by (4 samples, 0.08%)</title><rect width=".081%" height="15" x="20.17%" y="485" fill="#E51107" fg:w="4" fg:x="999"/></g><g><title>?? (38 samples, 0.77%)</title><rect width=".767%" height="15" x="19.847%" y="533" fill="#EF481C" fg:w="38" fg:x="983"/></g><g><title>core::num::&lt;impl usize&gt;::checked_add (18 samples, 0.36%)</title><rect width=".363%" height="15" x="20.25%" y="517" fill="#E62F36" fg:w="18" fg:x="1003"/></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (18 samples, 0.36%)</title><rect width=".363%" height="15" x="20.25%" y="501" fill="#D63208" fg:w="18" fg:x="1003"/></g><g><title>_rjem_realloc (15 samples, 0.30%)</title><rect width=".303%" height="15" x="20.957%" y="421" fill="#D8C62B" fg:w="15" fg:x="1038"/></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="21.704%" y="357" fill="#EA1423" fg:w="1" fg:x="1075"/></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="21.704%" y="341" fill="#FE2D13" fg:w="1" fg:x="1075"/></g><g><title>aligned_usize_get (9 samples, 0.18%)</title><rect width=".182%" height="15" x="21.563%" y="405" fill="#DB0E2C" fg:w="9" fg:x="1068"/></g><g><title>sz_s2u (2 samples, 0.04%)</title><rect width=".04%" height="15" x="21.704%" y="389" fill="#D9DC1A" fg:w="2" fg:x="1075"/></g><g><title>sz_s2u_lookup (2 samples, 0.04%)</title><rect width=".04%" height="15" x="21.704%" y="373" fill="#D59E1C" fg:w="2" fg:x="1075"/></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="21.724%" y="357" fill="#FC3334" fg:w="1" fg:x="1076"/></g><g><title>sz_size2index_lookup_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="21.724%" y="341" fill="#F65910" fg:w="1" fg:x="1076"/></g><g><title>rtree_leaf_elm_lookup (4 samples, 0.08%)</title><rect width=".081%" height="15" x="21.744%" y="373" fill="#D89E31" fg:w="4" fg:x="1077"/></g><g><title>rtree_leafkey (2 samples, 0.04%)</title><rect width=".04%" height="15" x="21.785%" y="357" fill="#EC6B13" fg:w="2" fg:x="1079"/></g><g><title>rtree_leaf_elm_bits_decode (2 samples, 0.04%)</title><rect width=".04%" height="15" x="21.825%" y="357" fill="#E4B91E" fg:w="2" fg:x="1081"/></g><g><title>rtree_metadata_read (8 samples, 0.16%)</title><rect width=".162%" height="15" x="21.744%" y="389" fill="#F68608" fg:w="8" fg:x="1077"/></g><g><title>rtree_leaf_elm_read (4 samples, 0.08%)</title><rect width=".081%" height="15" x="21.825%" y="373" fill="#D68F32" fg:w="4" fg:x="1081"/></g><g><title>rtree_leaf_elm_bits_read (2 samples, 0.04%)</title><rect width=".04%" height="15" x="21.866%" y="357" fill="#E44B08" fg:w="2" fg:x="1083"/></g><g><title>atomic_load_p (2 samples, 0.04%)</title><rect width=".04%" height="15" x="21.866%" y="341" fill="#CFAF04" fg:w="2" fg:x="1083"/></g><g><title>emap_alloc_ctx_lookup (9 samples, 0.18%)</title><rect width=".182%" height="15" x="21.744%" y="405" fill="#CD6C18" fg:w="9" fg:x="1077"/></g><g><title>tsdn_rtree_ctx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="21.906%" y="389" fill="#F47831" fg:w="1" fg:x="1085"/></g><g><title>tsdn_null (1 samples, 0.02%)</title><rect width=".02%" height="15" x="21.906%" y="373" fill="#DF2F26" fg:w="1" fg:x="1085"/></g><g><title>[deserialize_struct-11f044a2796e0e73] (1 samples, 0.02%)</title><rect width=".02%" height="15" x="22.512%" y="373" fill="#E5B30B" fg:w="1" fg:x="1115"/></g><g><title>__memmove_avx_unaligned_erms (21 samples, 0.42%)</title><rect width=".424%" height="15" x="22.532%" y="373" fill="#E77A01" fg:w="21" fg:x="1116"/></g><g><title>edata_usize_get (2 samples, 0.04%)</title><rect width=".04%" height="15" x="23.198%" y="357" fill="#F57709" fg:w="2" fg:x="1149"/></g><g><title>sz_index2size (2 samples, 0.04%)</title><rect width=".04%" height="15" x="23.198%" y="341" fill="#F1A319" fg:w="2" fg:x="1149"/></g><g><title>sz_index2size_lookup (2 samples, 0.04%)</title><rect width=".04%" height="15" x="23.198%" y="325" fill="#D9D603" fg:w="2" fg:x="1149"/></g><g><title>sz_index2size_lookup_impl (2 samples, 0.04%)</title><rect width=".04%" height="15" x="23.198%" y="309" fill="#F0561C" fg:w="2" fg:x="1149"/></g><g><title>rtree_leaf_elm_lookup (4 samples, 0.08%)</title><rect width=".081%" height="15" x="23.238%" y="325" fill="#D72F09" fg:w="4" fg:x="1151"/></g><g><title>rtree_leafkey (2 samples, 0.04%)</title><rect width=".04%" height="15" x="23.279%" y="309" fill="#FC192D" fg:w="2" fg:x="1153"/></g><g><title>rtree_leaf_elm_bits_decode (4 samples, 0.08%)</title><rect width=".081%" height="15" x="23.319%" y="309" fill="#FBA409" fg:w="4" fg:x="1155"/></g><g><title>rtree_read (11 samples, 0.22%)</title><rect width=".222%" height="15" x="23.238%" y="341" fill="#E9C200" fg:w="11" fg:x="1151"/></g><g><title>rtree_leaf_elm_read (7 samples, 0.14%)</title><rect width=".141%" height="15" x="23.319%" y="325" fill="#F96F18" fg:w="7" fg:x="1155"/></g><g><title>rtree_leaf_elm_bits_read (3 samples, 0.06%)</title><rect width=".061%" height="15" x="23.4%" y="309" fill="#FADF03" fg:w="3" fg:x="1159"/></g><g><title>atomic_load_p (3 samples, 0.06%)</title><rect width=".061%" height="15" x="23.4%" y="293" fill="#ECB225" fg:w="3" fg:x="1159"/></g><g><title>emap_edata_lookup (12 samples, 0.24%)</title><rect width=".242%" height="15" x="23.238%" y="357" fill="#F19E32" fg:w="12" fg:x="1151"/></g><g><title>tsdn_rtree_ctx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="23.46%" y="341" fill="#D57929" fg:w="1" fg:x="1162"/></g><g><title>tsdn_null (1 samples, 0.02%)</title><rect width=".02%" height="15" x="23.46%" y="325" fill="#F05C03" fg:w="1" fg:x="1162"/></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="23.481%" y="325" fill="#CD7B03" fg:w="1" fg:x="1163"/></g><g><title>sz_index2size_lookup_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="23.481%" y="309" fill="#CD612F" fg:w="1" fg:x="1163"/></g><g><title>sz_s2u (2 samples, 0.04%)</title><rect width=".04%" height="15" x="23.481%" y="357" fill="#F7980E" fg:w="2" fg:x="1163"/></g><g><title>sz_s2u_lookup (2 samples, 0.04%)</title><rect width=".04%" height="15" x="23.481%" y="341" fill="#F8C335" fg:w="2" fg:x="1163"/></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="23.501%" y="325" fill="#E2C910" fg:w="1" fg:x="1164"/></g><g><title>sz_size2index_lookup_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="23.501%" y="309" fill="#CD6200" fg:w="1" fg:x="1164"/></g><g><title>_rjem_je_arena_ralloc_no_move (32 samples, 0.65%)</title><rect width=".646%" height="15" x="22.956%" y="373" fill="#D6BF30" fg:w="32" fg:x="1137"/></g><g><title>sz_size2index (4 samples, 0.08%)</title><rect width=".081%" height="15" x="23.521%" y="357" fill="#ED7027" fg:w="4" fg:x="1165"/></g><g><title>sz_size2index_lookup (4 samples, 0.08%)</title><rect width=".081%" height="15" x="23.521%" y="341" fill="#F7CB1B" fg:w="4" fg:x="1165"/></g><g><title>sz_size2index_lookup_impl (4 samples, 0.08%)</title><rect width=".081%" height="15" x="23.521%" y="325" fill="#EB7C1C" fg:w="4" fg:x="1165"/></g><g><title>_rjem_je_hook_invoke_alloc (18 samples, 0.36%)</title><rect width=".363%" height="15" x="23.602%" y="373" fill="#D0CF2E" fg:w="18" fg:x="1169"/></g><g><title>atomic_load_u (5 samples, 0.10%)</title><rect width=".101%" height="15" x="23.864%" y="357" fill="#EAB004" fg:w="5" fg:x="1182"/></g><g><title>_rjem_je_hook_invoke_dalloc (8 samples, 0.16%)</title><rect width=".162%" height="15" x="23.965%" y="373" fill="#E6851C" fg:w="8" fg:x="1187"/></g><g><title>atomic_load_u (2 samples, 0.04%)</title><rect width=".04%" height="15" x="24.086%" y="357" fill="#D38928" fg:w="2" fg:x="1193"/></g><g><title>_rjem_je_arena_ralloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="24.127%" y="357" fill="#FE230D" fg:w="2" fg:x="1195"/></g><g><title>arena_bin_refill_slabcur_no_fresh_slab (1 samples, 0.02%)</title><rect width=".02%" height="15" x="24.288%" y="293" fill="#E13133" fg:w="1" fg:x="1203"/></g><g><title>_rjem_je_edata_heap_remove (2 samples, 0.04%)</title><rect width=".04%" height="15" x="24.329%" y="133" fill="#FB0A0F" fg:w="2" fg:x="1205"/></g><g><title>ph_remove (2 samples, 0.04%)</title><rect width=".04%" height="15" x="24.329%" y="117" fill="#E4CF0F" fg:w="2" fg:x="1205"/></g><g><title>ph_merge_children (2 samples, 0.04%)</title><rect width=".04%" height="15" x="24.329%" y="101" fill="#F16313" fg:w="2" fg:x="1205"/></g><g><title>phn_merge_siblings (2 samples, 0.04%)</title><rect width=".04%" height="15" x="24.329%" y="85" fill="#CF6831" fg:w="2" fg:x="1205"/></g><g><title>phn_merge (1 samples, 0.02%)</title><rect width=".02%" height="15" x="24.349%" y="69" fill="#EA6312" fg:w="1" fg:x="1206"/></g><g><title>edata_heap_ph_cmp (1 samples, 0.02%)</title><rect width=".02%" height="15" x="24.349%" y="53" fill="#D5BF31" fg:w="1" fg:x="1206"/></g><g><title>_rjem_je_ecache_alloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="24.308%" y="213" fill="#D2E213" fg:w="4" fg:x="1204"/></g><g><title>extent_recycle (3 samples, 0.06%)</title><rect width=".061%" height="15" x="24.329%" y="197" fill="#E56112" fg:w="3" fg:x="1205"/></g><g><title>extent_recycle_extract (3 samples, 0.06%)</title><rect width=".061%" height="15" x="24.329%" y="181" fill="#D3A70F" fg:w="3" fg:x="1205"/></g><g><title>extent_activate_locked (3 samples, 0.06%)</title><rect width=".061%" height="15" x="24.329%" y="165" fill="#D2A922" fg:w="3" fg:x="1205"/></g><g><title>_rjem_je_eset_remove (3 samples, 0.06%)</title><rect width=".061%" height="15" x="24.329%" y="149" fill="#F1791F" fg:w="3" fg:x="1205"/></g><g><title>edata_list_inactive_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="24.369%" y="133" fill="#E8280B" fg:w="1" fg:x="1207"/></g><g><title>_rjem_je_edata_avail_remove (2 samples, 0.04%)</title><rect width=".04%" height="15" x="24.389%" y="101" fill="#CD561A" fg:w="2" fg:x="1208"/></g><g><title>ph_remove (2 samples, 0.04%)</title><rect width=".04%" height="15" x="24.389%" y="85" fill="#E77E1C" fg:w="2" fg:x="1208"/></g><g><title>ph_merge_children (2 samples, 0.04%)</title><rect width=".04%" height="15" x="24.389%" y="69" fill="#DBDD12" fg:w="2" fg:x="1208"/></g><g><title>phn_merge_siblings (2 samples, 0.04%)</title><rect width=".04%" height="15" x="24.389%" y="53" fill="#D32800" fg:w="2" fg:x="1208"/></g><g><title>phn_next_set (1 samples, 0.02%)</title><rect width=".02%" height="15" x="24.409%" y="37" fill="#EF552B" fg:w="1" fg:x="1209"/></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="24.43%" y="101" fill="#E73715" fg:w="1" fg:x="1210"/></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect width=".02%" height="15" x="24.43%" y="85" fill="#E1B82B" fg:w="1" fg:x="1210"/></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="24.43%" y="69" fill="#FB9E29" fg:w="1" fg:x="1210"/></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="24.45%" y="85" fill="#EA9F25" fg:w="1" fg:x="1211"/></g><g><title>extent_recycle_split (5 samples, 0.10%)</title><rect width=".101%" height="15" x="24.389%" y="165" fill="#D8CC16" fg:w="5" fg:x="1208"/></g><g><title>extent_split_interior (5 samples, 0.10%)</title><rect width=".101%" height="15" x="24.389%" y="149" fill="#D61103" fg:w="5" fg:x="1208"/></g><g><title>extent_split_impl (5 samples, 0.10%)</title><rect width=".101%" height="15" x="24.389%" y="133" fill="#D46F11" fg:w="5" fg:x="1208"/></g><g><title>_rjem_je_edata_cache_get (5 samples, 0.10%)</title><rect width=".101%" height="15" x="24.389%" y="117" fill="#DD9D18" fg:w="5" fg:x="1208"/></g><g><title>malloc_mutex_unlock (2 samples, 0.04%)</title><rect width=".04%" height="15" x="24.45%" y="101" fill="#FC100D" fg:w="2" fg:x="1211"/></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect width=".02%" height="15" x="24.47%" y="85" fill="#DD3E02" fg:w="1" fg:x="1212"/></g><g><title>_rjem_je_pa_alloc (11 samples, 0.22%)</title><rect width=".222%" height="15" x="24.308%" y="277" fill="#F75716" fg:w="11" fg:x="1204"/></g><g><title>pai_alloc (11 samples, 0.22%)</title><rect width=".222%" height="15" x="24.308%" y="261" fill="#D74909" fg:w="11" fg:x="1204"/></g><g><title>pac_alloc_impl (11 samples, 0.22%)</title><rect width=".222%" height="15" x="24.308%" y="245" fill="#CFAF21" fg:w="11" fg:x="1204"/></g><g><title>pac_alloc_real (11 samples, 0.22%)</title><rect width=".222%" height="15" x="24.308%" y="229" fill="#F38136" fg:w="11" fg:x="1204"/></g><g><title>_rjem_je_ecache_alloc_grow (7 samples, 0.14%)</title><rect width=".141%" height="15" x="24.389%" y="213" fill="#E3772D" fg:w="7" fg:x="1208"/></g><g><title>extent_alloc_retained (7 samples, 0.14%)</title><rect width=".141%" height="15" x="24.389%" y="197" fill="#CD6D24" fg:w="7" fg:x="1208"/></g><g><title>extent_recycle (7 samples, 0.14%)</title><rect width=".141%" height="15" x="24.389%" y="181" fill="#CD0627" fg:w="7" fg:x="1208"/></g><g><title>malloc_mutex_unlock (2 samples, 0.04%)</title><rect width=".04%" height="15" x="24.49%" y="165" fill="#DD2010" fg:w="2" fg:x="1213"/></g><g><title>__pthread_mutex_unlock_usercnt (2 samples, 0.04%)</title><rect width=".04%" height="15" x="24.49%" y="149" fill="#E49032" fg:w="2" fg:x="1213"/></g><g><title>arena_slab_alloc (12 samples, 0.24%)</title><rect width=".242%" height="15" x="24.308%" y="293" fill="#E5C935" fg:w="12" fg:x="1204"/></g><g><title>edata_nfree_binshard_set (1 samples, 0.02%)</title><rect width=".02%" height="15" x="24.531%" y="277" fill="#F9991B" fg:w="1" fg:x="1215"/></g><g><title>arena_slab_reg_alloc_batch (7 samples, 0.14%)</title><rect width=".141%" height="15" x="24.551%" y="293" fill="#E36A19" fg:w="7" fg:x="1216"/></g><g><title>cfs_lu (1 samples, 0.02%)</title><rect width=".02%" height="15" x="24.672%" y="277" fill="#E6411D" fg:w="1" fg:x="1222"/></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="24.692%" y="293" fill="#DD392E" fg:w="1" fg:x="1223"/></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect width=".02%" height="15" x="24.692%" y="277" fill="#E5A111" fg:w="1" fg:x="1223"/></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="24.692%" y="261" fill="#DED50B" fg:w="1" fg:x="1223"/></g><g><title>_rjem_je_tcache_alloc_small_hard (24 samples, 0.48%)</title><rect width=".485%" height="15" x="24.248%" y="325" fill="#EB230D" fg:w="24" fg:x="1201"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (24 samples, 0.48%)</title><rect width=".485%" height="15" x="24.248%" y="309" fill="#E99E22" fg:w="24" fg:x="1201"/></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="24.712%" y="293" fill="#D79730" fg:w="1" fg:x="1224"/></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="24.712%" y="277" fill="#E5540E" fg:w="1" fg:x="1224"/></g><g><title>arena_choose (1 samples, 0.02%)</title><rect width=".02%" height="15" x="24.753%" y="309" fill="#E5440E" fg:w="1" fg:x="1226"/></g><g><title>arena_choose (3 samples, 0.06%)</title><rect width=".061%" height="15" x="24.733%" y="325" fill="#F36A1A" fg:w="3" fg:x="1225"/></g><g><title>arena_choose_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="24.773%" y="309" fill="#CE2D26" fg:w="1" fg:x="1227"/></g><g><title>arena_malloc (38 samples, 0.77%)</title><rect width=".767%" height="15" x="24.167%" y="357" fill="#E2060F" fg:w="38" fg:x="1197"/></g><g><title>tcache_alloc_small (37 samples, 0.75%)</title><rect width=".747%" height="15" x="24.187%" y="341" fill="#E81636" fg:w="37" fg:x="1198"/></g><g><title>cache_bin_alloc (7 samples, 0.14%)</title><rect width=".141%" height="15" x="24.793%" y="325" fill="#E5DE20" fg:w="7" fg:x="1228"/></g><g><title>cache_bin_alloc_impl (7 samples, 0.14%)</title><rect width=".141%" height="15" x="24.793%" y="309" fill="#E43E1D" fg:w="7" fg:x="1228"/></g><g><title>arena_ralloc_move_helper (43 samples, 0.87%)</title><rect width=".868%" height="15" x="24.127%" y="373" fill="#FB6722" fg:w="43" fg:x="1195"/></g><g><title>sz_size2index (3 samples, 0.06%)</title><rect width=".061%" height="15" x="24.934%" y="357" fill="#E90C1E" fg:w="3" fg:x="1235"/></g><g><title>sz_size2index_lookup (3 samples, 0.06%)</title><rect width=".061%" height="15" x="24.934%" y="341" fill="#EE3400" fg:w="3" fg:x="1235"/></g><g><title>sz_size2index_lookup_impl (3 samples, 0.06%)</title><rect width=".061%" height="15" x="24.934%" y="325" fill="#DF6205" fg:w="3" fg:x="1235"/></g><g><title>iralloct (162 samples, 3.27%)</title><rect width="3.271%" height="15" x="21.926%" y="405" fill="#E44B25" fg:w="162" fg:x="1086"/><text x="22.176%" y="415.5">ira..</text></g><g><title>_rjem_je_arena_ralloc (156 samples, 3.15%)</title><rect width="3.15%" height="15" x="22.047%" y="389" fill="#CD7331" fg:w="156" fg:x="1092"/><text x="22.297%" y="399.5">_rj..</text></g><g><title>isdalloct (10 samples, 0.20%)</title><rect width=".202%" height="15" x="24.995%" y="373" fill="#FA9A2B" fg:w="10" fg:x="1238"/></g><g><title>arena_sdalloc (10 samples, 0.20%)</title><rect width=".202%" height="15" x="24.995%" y="357" fill="#E22B1D" fg:w="10" fg:x="1238"/></g><g><title>tcache_dalloc_small (9 samples, 0.18%)</title><rect width=".182%" height="15" x="25.015%" y="341" fill="#F9E427" fg:w="9" fg:x="1239"/></g><g><title>cache_bin_dalloc_easy (8 samples, 0.16%)</title><rect width=".162%" height="15" x="25.035%" y="325" fill="#D84F2B" fg:w="8" fg:x="1240"/></g><g><title>cache_bin_full (3 samples, 0.06%)</title><rect width=".061%" height="15" x="25.136%" y="309" fill="#E45F0C" fg:w="3" fg:x="1245"/></g><g><title>do_rallocx (7 samples, 0.14%)</title><rect width=".141%" height="15" x="25.197%" y="373" fill="#F9DD0F" fg:w="7" fg:x="1248"/></g><g><title>sz_index2size (9 samples, 0.18%)</title><rect width=".182%" height="15" x="25.197%" y="405" fill="#E9220D" fg:w="9" fg:x="1248"/></g><g><title>sz_index2size_lookup (9 samples, 0.18%)</title><rect width=".182%" height="15" x="25.197%" y="389" fill="#D66727" fg:w="9" fg:x="1248"/></g><g><title>sz_index2size_lookup_impl (2 samples, 0.04%)</title><rect width=".04%" height="15" x="25.338%" y="373" fill="#FB7E27" fg:w="2" fg:x="1255"/></g><g><title>tcache_get_from_ind (2 samples, 0.04%)</title><rect width=".04%" height="15" x="25.379%" y="405" fill="#D6D824" fg:w="2" fg:x="1257"/></g><g><title>tcache_get (2 samples, 0.04%)</title><rect width=".04%" height="15" x="25.379%" y="389" fill="#DCDD08" fg:w="2" fg:x="1257"/></g><g><title>tcache_available (1 samples, 0.02%)</title><rect width=".02%" height="15" x="25.399%" y="373" fill="#F0D803" fg:w="1" fg:x="1258"/></g><g><title>tsd_tcache_enabled_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="25.399%" y="357" fill="#E8DA11" fg:w="1" fg:x="1258"/></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="25.419%" y="389" fill="#E5A32D" fg:w="1" fg:x="1259"/></g><g><title>thread_alloc_event (6 samples, 0.12%)</title><rect width=".121%" height="15" x="25.419%" y="405" fill="#E76E2A" fg:w="6" fg:x="1259"/></g><g><title>te_event_advance (5 samples, 0.10%)</title><rect width=".101%" height="15" x="25.439%" y="389" fill="#D0AA30" fg:w="5" fg:x="1260"/></g><g><title>te_ctx_get (2 samples, 0.04%)</title><rect width=".04%" height="15" x="25.5%" y="373" fill="#EF7419" fg:w="2" fg:x="1263"/></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="25.54%" y="389" fill="#DBC832" fg:w="1" fg:x="1265"/></g><g><title>?? (237 samples, 4.78%)</title><rect width="4.785%" height="15" x="20.937%" y="485" fill="#F5C800" fg:w="237" fg:x="1037"/><text x="21.187%" y="495.5">??</text></g><g><title>alloc::alloc::realloc (237 samples, 4.78%)</title><rect width="4.785%" height="15" x="20.937%" y="469" fill="#F57721" fg:w="237" fg:x="1037"/><text x="21.187%" y="479.5">alloc:..</text></g><g><title>__rust_realloc (237 samples, 4.78%)</title><rect width="4.785%" height="15" x="20.937%" y="453" fill="#E77D0C" fg:w="237" fg:x="1037"/><text x="21.187%" y="463.5">__rust..</text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (237 samples, 4.78%)</title><rect width="4.785%" height="15" x="20.937%" y="437" fill="#D86029" fg:w="237" fg:x="1037"/><text x="21.187%" y="447.5">&lt;jemal..</text></g><g><title>do_rallocx (221 samples, 4.46%)</title><rect width="4.462%" height="15" x="21.26%" y="421" fill="#F82B2D" fg:w="221" fg:x="1053"/><text x="21.51%" y="431.5">do_ra..</text></g><g><title>thread_dalloc_event (9 samples, 0.18%)</title><rect width=".182%" height="15" x="25.54%" y="405" fill="#D9DE07" fg:w="9" fg:x="1265"/></g><g><title>te_event_advance (8 samples, 0.16%)</title><rect width=".162%" height="15" x="25.56%" y="389" fill="#E91C06" fg:w="8" fg:x="1266"/></g><g><title>te_ctx_get (7 samples, 0.14%)</title><rect width=".141%" height="15" x="25.581%" y="373" fill="#E7DA0F" fg:w="7" fg:x="1267"/></g><g><title>tsd_thread_deallocatedp_get (5 samples, 0.10%)</title><rect width=".101%" height="15" x="25.621%" y="357" fill="#E2AB30" fg:w="5" fg:x="1269"/></g><g><title>tsd_thread_deallocatedp_get_unsafe (5 samples, 0.10%)</title><rect width=".101%" height="15" x="25.621%" y="341" fill="#EBC909" fg:w="5" fg:x="1269"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (238 samples, 4.81%)</title><rect width="4.805%" height="15" x="20.937%" y="501" fill="#D9500F" fg:w="238" fg:x="1037"/><text x="21.187%" y="511.5">&lt;alloc..</text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect width=".02%" height="15" x="25.722%" y="485" fill="#DB9808" fg:w="1" fg:x="1274"/></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="25.762%" y="357" fill="#F36B26" fg:w="1" fg:x="1276"/></g><g><title>_rjem_je_malloc_default (6 samples, 0.12%)</title><rect width=".121%" height="15" x="25.742%" y="501" fill="#E71105" fg:w="6" fg:x="1275"/></g><g><title>imalloc (5 samples, 0.10%)</title><rect width=".101%" height="15" x="25.762%" y="485" fill="#D11936" fg:w="5" fg:x="1276"/></g><g><title>imalloc_body (5 samples, 0.10%)</title><rect width=".101%" height="15" x="25.762%" y="469" fill="#DB0002" fg:w="5" fg:x="1276"/></g><g><title>imalloc_no_sample (5 samples, 0.10%)</title><rect width=".101%" height="15" x="25.762%" y="453" fill="#F60905" fg:w="5" fg:x="1276"/></g><g><title>iallocztm (5 samples, 0.10%)</title><rect width=".101%" height="15" x="25.762%" y="437" fill="#E29F04" fg:w="5" fg:x="1276"/></g><g><title>arena_malloc (5 samples, 0.10%)</title><rect width=".101%" height="15" x="25.762%" y="421" fill="#DBAF22" fg:w="5" fg:x="1276"/></g><g><title>tcache_alloc_small (5 samples, 0.10%)</title><rect width=".101%" height="15" x="25.762%" y="405" fill="#EC0A2E" fg:w="5" fg:x="1276"/></g><g><title>_rjem_je_tcache_alloc_small_hard (5 samples, 0.10%)</title><rect width=".101%" height="15" x="25.762%" y="389" fill="#F0D310" fg:w="5" fg:x="1276"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (5 samples, 0.10%)</title><rect width=".101%" height="15" x="25.762%" y="373" fill="#CD032B" fg:w="5" fg:x="1276"/></g><g><title>arena_slab_reg_alloc_batch (4 samples, 0.08%)</title><rect width=".081%" height="15" x="25.782%" y="357" fill="#F50716" fg:w="4" fg:x="1277"/></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="25.904%" y="485" fill="#EF8420" fg:w="1" fg:x="1283"/></g><g><title>_rjem_malloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="25.863%" y="501" fill="#E4CA22" fg:w="4" fg:x="1281"/></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="25.924%" y="485" fill="#FEC816" fg:w="1" fg:x="1284"/></g><g><title>sz_size2index_usize_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="25.924%" y="469" fill="#DB0A27" fg:w="1" fg:x="1284"/></g><g><title>sz_size2index_lookup_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="25.924%" y="453" fill="#E2D227" fg:w="1" fg:x="1284"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (343 samples, 6.93%)</title><rect width="6.925%" height="15" x="19.14%" y="565" fill="#D0DB10" fg:w="343" fg:x="948"/><text x="19.39%" y="575.5">&lt;core::ma..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (310 samples, 6.26%)</title><rect width="6.259%" height="15" x="19.806%" y="549" fill="#D89E33" fg:w="310" fg:x="981"/><text x="20.056%" y="559.5">alloc::r..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (270 samples, 5.45%)</title><rect width="5.451%" height="15" x="20.614%" y="533" fill="#E90E2C" fg:w="270" fg:x="1021"/><text x="20.864%" y="543.5">alloc::..</text></g><g><title>alloc::raw_vec::finish_grow (265 samples, 5.35%)</title><rect width="5.35%" height="15" x="20.715%" y="517" fill="#ED6127" fg:w="265" fg:x="1026"/><text x="20.965%" y="527.5">alloc::..</text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.12%)</title><rect width=".121%" height="15" x="25.944%" y="501" fill="#DAC62B" fg:w="6" fg:x="1285"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="26.065%" y="549" fill="#E76814" fg:w="1" fg:x="1291"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="26.065%" y="565" fill="#FE240D" fg:w="3" fg:x="1291"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="26.085%" y="549" fill="#F80E32" fg:w="2" fg:x="1292"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="26.085%" y="533" fill="#D96B1D" fg:w="2" fg:x="1292"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (43 samples, 0.87%)</title><rect width=".868%" height="15" x="28.871%" y="485" fill="#FBA921" fg:w="43" fg:x="1430"/></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (14 samples, 0.28%)</title><rect width=".283%" height="15" x="30.285%" y="469" fill="#D96C20" fg:w="14" fg:x="1500"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14 samples, 0.28%)</title><rect width=".283%" height="15" x="31.88%" y="373" fill="#DB422A" fg:w="14" fg:x="1579"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (29 samples, 0.59%)</title><rect width=".586%" height="15" x="32.162%" y="341" fill="#CEB407" fg:w="29" fg:x="1593"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (52 samples, 1.05%)</title><rect width="1.05%" height="15" x="31.759%" y="389" fill="#D0E21F" fg:w="52" fg:x="1573"/></g><g><title>?? (32 samples, 0.65%)</title><rect width=".646%" height="15" x="32.162%" y="373" fill="#DA1A31" fg:w="32" fg:x="1593"/></g><g><title>sonic_rs::reader::Reader::next (32 samples, 0.65%)</title><rect width=".646%" height="15" x="32.162%" y="357" fill="#E9C530" fg:w="32" fg:x="1593"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="32.748%" y="341" fill="#FCB533" fg:w="3" fg:x="1622"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (3 samples, 0.06%)</title><rect width=".061%" height="15" x="32.748%" y="325" fill="#FD5A13" fg:w="3" fg:x="1622"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (3 samples, 0.06%)</title><rect width=".061%" height="15" x="32.748%" y="309" fill="#D7AB1E" fg:w="3" fg:x="1622"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="32.808%" y="389" fill="#D6DE09" fg:w="2" fg:x="1625"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (8 samples, 0.16%)</title><rect width=".162%" height="15" x="32.849%" y="341" fill="#DF0316" fg:w="8" fg:x="1627"/></g><g><title>&lt;json_benchmark::empty::Array as serde::de::Deserialize&gt;::deserialize (63 samples, 1.27%)</title><rect width="1.272%" height="15" x="31.759%" y="421" fill="#E1C42E" fg:w="63" fg:x="1573"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_tuple (63 samples, 1.27%)</title><rect width="1.272%" height="15" x="31.759%" y="405" fill="#D16E25" fg:w="63" fg:x="1573"/></g><g><title>?? (9 samples, 0.18%)</title><rect width=".182%" height="15" x="32.849%" y="389" fill="#F9590C" fg:w="9" fg:x="1627"/></g><g><title>?? (9 samples, 0.18%)</title><rect width=".182%" height="15" x="32.849%" y="373" fill="#E21B21" fg:w="9" fg:x="1627"/></g><g><title>sonic_rs::reader::Reader::next (9 samples, 0.18%)</title><rect width=".182%" height="15" x="32.849%" y="357" fill="#D55216" fg:w="9" fg:x="1627"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="33.01%" y="341" fill="#F88C00" fg:w="1" fg:x="1635"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="33.01%" y="325" fill="#E46A03" fg:w="1" fg:x="1635"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="33.01%" y="309" fill="#D11725" fg:w="1" fg:x="1635"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u64 (5 samples, 0.10%)</title><rect width=".101%" height="15" x="34.08%" y="357" fill="#F15D32" fg:w="5" fg:x="1688"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::set_index (9 samples, 0.18%)</title><rect width=".182%" height="15" x="34.181%" y="357" fill="#FD2E2B" fg:w="9" fg:x="1693"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (20 samples, 0.40%)</title><rect width=".404%" height="15" x="34.363%" y="341" fill="#E2CE2B" fg:w="20" fg:x="1702"/></g><g><title>sonic_rs::reader::Reader::next (31 samples, 0.63%)</title><rect width=".626%" height="15" x="34.363%" y="357" fill="#D93607" fg:w="31" fg:x="1702"/></g><g><title>?? (11 samples, 0.22%)</title><rect width=".222%" height="15" x="34.767%" y="341" fill="#DF0534" fg:w="11" fg:x="1722"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (11 samples, 0.22%)</title><rect width=".222%" height="15" x="34.767%" y="325" fill="#CE342E" fg:w="11" fg:x="1722"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (11 samples, 0.22%)</title><rect width=".222%" height="15" x="34.767%" y="309" fill="#FD880B" fg:w="11" fg:x="1722"/></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (25 samples, 0.50%)</title><rect width=".505%" height="15" x="36.362%" y="341" fill="#D06A21" fg:w="25" fg:x="1801"/></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (25 samples, 0.50%)</title><rect width=".505%" height="15" x="36.362%" y="325" fill="#CE3604" fg:w="25" fg:x="1801"/></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (17 samples, 0.34%)</title><rect width=".343%" height="15" x="36.867%" y="341" fill="#D5030F" fg:w="17" fg:x="1826"/></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (48 samples, 0.97%)</title><rect width=".969%" height="15" x="37.21%" y="341" fill="#FCD327" fg:w="48" fg:x="1843"/></g><g><title>?? (241 samples, 4.87%)</title><rect width="4.866%" height="15" x="34.08%" y="373" fill="#DF0624" fg:w="241" fg:x="1688"/><text x="34.33%" y="383.5">??</text></g><g><title>sonic_rs::util::num::parse_number_unchecked (196 samples, 3.96%)</title><rect width="3.957%" height="15" x="34.989%" y="357" fill="#FCA92D" fg:w="196" fg:x="1733"/><text x="35.239%" y="367.5">soni..</text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (38 samples, 0.77%)</title><rect width=".767%" height="15" x="38.179%" y="341" fill="#D4301A" fg:w="38" fg:x="1891"/></g><g><title>?? (249 samples, 5.03%)</title><rect width="5.027%" height="15" x="34.08%" y="389" fill="#FB6630" fg:w="249" fg:x="1688"/><text x="34.33%" y="399.5">??</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (8 samples, 0.16%)</title><rect width=".162%" height="15" x="38.946%" y="373" fill="#F3D010" fg:w="8" fg:x="1929"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (434 samples, 8.76%)</title><rect width="8.762%" height="15" x="30.83%" y="437" fill="#DB6018" fg:w="434" fg:x="1527"/><text x="31.08%" y="447.5">&lt;core::marke..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (325 samples, 6.56%)</title><rect width="6.562%" height="15" x="33.031%" y="421" fill="#DB211D" fg:w="325" fg:x="1636"/><text x="33.281%" y="431.5">serde::de..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (273 samples, 5.51%)</title><rect width="5.512%" height="15" x="34.08%" y="405" fill="#DFB005" fg:w="273" fg:x="1688"/><text x="34.33%" y="415.5">&lt;&amp;mut s..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (24 samples, 0.48%)</title><rect width=".485%" height="15" x="39.108%" y="389" fill="#E48C0E" fg:w="24" fg:x="1937"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (19 samples, 0.38%)</title><rect width=".384%" height="15" x="39.592%" y="389" fill="#D9B31F" fg:w="19" fg:x="1961"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (487 samples, 9.83%)</title><rect width="9.832%" height="15" x="30.567%" y="469" fill="#E6091E" fg:w="487" fg:x="1514"/><text x="30.817%" y="479.5">&lt;sonic_rs::ser..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (487 samples, 9.83%)</title><rect width="9.832%" height="15" x="30.567%" y="453" fill="#E68814" fg:w="487" fg:x="1514"/><text x="30.817%" y="463.5">&lt;sonic_rs::ser..</text></g><g><title>?? (40 samples, 0.81%)</title><rect width=".808%" height="15" x="39.592%" y="437" fill="#D7D216" fg:w="40" fg:x="1961"/></g><g><title>?? (40 samples, 0.81%)</title><rect width=".808%" height="15" x="39.592%" y="421" fill="#DA2B05" fg:w="40" fg:x="1961"/></g><g><title>sonic_rs::reader::Reader::next (40 samples, 0.81%)</title><rect width=".808%" height="15" x="39.592%" y="405" fill="#D80B05" fg:w="40" fg:x="1961"/></g><g><title>?? (21 samples, 0.42%)</title><rect width=".424%" height="15" x="39.976%" y="389" fill="#D1521D" fg:w="21" fg:x="1980"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (21 samples, 0.42%)</title><rect width=".424%" height="15" x="39.976%" y="373" fill="#F4730C" fg:w="21" fg:x="1980"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (21 samples, 0.42%)</title><rect width=".424%" height="15" x="39.976%" y="357" fill="#DE5212" fg:w="21" fg:x="1980"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14 samples, 0.28%)</title><rect width=".283%" height="15" x="44.781%" y="373" fill="#F9E308" fg:w="14" fg:x="2218"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (65 samples, 1.31%)</title><rect width="1.312%" height="15" x="45.064%" y="341" fill="#FD8D2D" fg:w="65" fg:x="2232"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::slice_unchecked (19 samples, 0.38%)</title><rect width=".384%" height="15" x="46.376%" y="341" fill="#EAB804" fg:w="19" fg:x="2297"/></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (19 samples, 0.38%)</title><rect width=".384%" height="15" x="46.376%" y="325" fill="#DAC217" fg:w="19" fg:x="2297"/></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (19 samples, 0.38%)</title><rect width=".384%" height="15" x="46.376%" y="309" fill="#EB4229" fg:w="19" fg:x="2297"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (132 samples, 2.67%)</title><rect width="2.665%" height="15" x="46.76%" y="325" fill="#F5D901" fg:w="132" fg:x="2316"/><text x="47.01%" y="335.5">&lt;c..</text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (33 samples, 0.67%)</title><rect width=".666%" height="15" x="49.425%" y="325" fill="#E55B01" fg:w="33" fg:x="2448"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (9 samples, 0.18%)</title><rect width=".182%" height="15" x="50.091%" y="325" fill="#CF651E" fg:w="9" fg:x="2481"/></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.02%)</title><rect width=".02%" height="15" x="50.252%" y="309" fill="#DF5231" fg:w="1" fg:x="2489"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="50.252%" y="293" fill="#DAA711" fg:w="1" fg:x="2489"/></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="50.252%" y="277" fill="#D0670E" fg:w="1" fg:x="2489"/></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="50.252%" y="261" fill="#EE1408" fg:w="1" fg:x="2489"/></g><g><title>?? (9 samples, 0.18%)</title><rect width=".182%" height="15" x="50.273%" y="325" fill="#DA5036" fg:w="9" fg:x="2490"/></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.18%)</title><rect width=".182%" height="15" x="50.273%" y="309" fill="#F09011" fg:w="9" fg:x="2490"/></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (11 samples, 0.22%)</title><rect width=".222%" height="15" x="50.454%" y="325" fill="#F51B32" fg:w="11" fg:x="2499"/></g><g><title>?? (295 samples, 5.96%)</title><rect width="5.956%" height="15" x="45.064%" y="373" fill="#FB3307" fg:w="295" fg:x="2232"/><text x="45.314%" y="383.5">??</text></g><g><title>?? (295 samples, 5.96%)</title><rect width="5.956%" height="15" x="45.064%" y="357" fill="#F5D91D" fg:w="295" fg:x="2232"/><text x="45.314%" y="367.5">??</text></g><g><title>?? (211 samples, 4.26%)</title><rect width="4.26%" height="15" x="46.76%" y="341" fill="#DDB01D" fg:w="211" fg:x="2316"/><text x="47.01%" y="351.5">??</text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (17 samples, 0.34%)</title><rect width=".343%" height="15" x="50.676%" y="325" fill="#D4B418" fg:w="17" fg:x="2510"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (510 samples, 10.30%)</title><rect width="10.297%" height="15" x="41.106%" y="437" fill="#FE1802" fg:w="510" fg:x="2036"/><text x="41.356%" y="447.5">&lt;core::marker::..</text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (328 samples, 6.62%)</title><rect width="6.622%" height="15" x="44.781%" y="421" fill="#E66402" fg:w="328" fg:x="2218"/><text x="45.031%" y="431.5">&lt;json_ben..</text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (328 samples, 6.62%)</title><rect width="6.622%" height="15" x="44.781%" y="405" fill="#DB8E19" fg:w="328" fg:x="2218"/><text x="45.031%" y="415.5">&lt;sonic_rs..</text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (328 samples, 6.62%)</title><rect width="6.622%" height="15" x="44.781%" y="389" fill="#F0492B" fg:w="328" fg:x="2218"/><text x="45.031%" y="399.5">&lt;sonic_rs..</text></g><g><title>serde::de::Visitor::visit_borrowed_str (19 samples, 0.38%)</title><rect width=".384%" height="15" x="51.02%" y="373" fill="#D6720F" fg:w="19" fg:x="2527"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (19 samples, 0.38%)</title><rect width=".384%" height="15" x="51.02%" y="357" fill="#CF8204" fg:w="19" fg:x="2527"/></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (19 samples, 0.38%)</title><rect width=".384%" height="15" x="51.02%" y="341" fill="#DD1928" fg:w="19" fg:x="2527"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (19 samples, 0.38%)</title><rect width=".384%" height="15" x="51.02%" y="325" fill="#F1B807" fg:w="19" fg:x="2527"/></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (19 samples, 0.38%)</title><rect width=".384%" height="15" x="51.02%" y="309" fill="#EB9F04" fg:w="19" fg:x="2527"/></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (19 samples, 0.38%)</title><rect width=".384%" height="15" x="51.02%" y="293" fill="#D65730" fg:w="19" fg:x="2527"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (12 samples, 0.24%)</title><rect width=".242%" height="15" x="51.403%" y="421" fill="#F6C618" fg:w="12" fg:x="2546"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (10 samples, 0.20%)</title><rect width=".202%" height="15" x="51.645%" y="421" fill="#D14228" fg:w="10" fg:x="2558"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (8 samples, 0.16%)</title><rect width=".162%" height="15" x="51.847%" y="421" fill="#E99327" fg:w="8" fg:x="2568"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (51 samples, 1.03%)</title><rect width="1.03%" height="15" x="52.009%" y="405" fill="#E79134" fg:w="51" fg:x="2576"/></g><g><title>sonic_rs::reader::Reader::next (82 samples, 1.66%)</title><rect width="1.656%" height="15" x="52.009%" y="421" fill="#CE141A" fg:w="82" fg:x="2576"/></g><g><title>?? (31 samples, 0.63%)</title><rect width=".626%" height="15" x="53.039%" y="405" fill="#EEDC04" fg:w="31" fg:x="2627"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (31 samples, 0.63%)</title><rect width=".626%" height="15" x="53.039%" y="389" fill="#FCC32A" fg:w="31" fg:x="2627"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (31 samples, 0.63%)</title><rect width=".626%" height="15" x="53.039%" y="373" fill="#D10A06" fg:w="31" fg:x="2627"/></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (17 samples, 0.34%)</title><rect width=".343%" height="15" x="53.886%" y="405" fill="#E50334" fg:w="17" fg:x="2669"/></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (21 samples, 0.42%)</title><rect width=".424%" height="15" x="54.23%" y="405" fill="#FD3125" fg:w="21" fg:x="2686"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1,240 samples, 25.04%)</title><rect width="25.035%" height="15" x="29.74%" y="485" fill="#F06731" fg:w="1240" fg:x="1473"/><text x="29.99%" y="495.5">&lt;json_benchmark::copy::citm_catalog::_::..</text></g><g><title>serde::de::MapAccess::next_key (712 samples, 14.38%)</title><rect width="14.375%" height="15" x="40.4%" y="469" fill="#FAB61E" fg:w="712" fg:x="2001"/><text x="40.65%" y="479.5">serde::de::MapAccess::..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (712 samples, 14.38%)</title><rect width="14.375%" height="15" x="40.4%" y="453" fill="#F8081E" fg:w="712" fg:x="2001"/><text x="40.65%" y="463.5">&lt;sonic_rs::serde::de::..</text></g><g><title>?? (167 samples, 3.37%)</title><rect width="3.372%" height="15" x="51.403%" y="437" fill="#ED781E" fg:w="167" fg:x="2546"/><text x="51.653%" y="447.5">??</text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (55 samples, 1.11%)</title><rect width="1.11%" height="15" x="53.664%" y="421" fill="#DD9222" fg:w="55" fg:x="2658"/></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (6 samples, 0.12%)</title><rect width=".121%" height="15" x="54.654%" y="405" fill="#F2370D" fg:w="6" fg:x="2707"/></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (10 samples, 0.20%)</title><rect width=".202%" height="15" x="54.775%" y="469" fill="#F2701F" fg:w="10" fg:x="2713"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (29 samples, 0.59%)</title><rect width=".586%" height="15" x="54.977%" y="453" fill="#F9C01B" fg:w="29" fg:x="2723"/></g><g><title>sonic_rs::reader::Reader::next (32 samples, 0.65%)</title><rect width=".646%" height="15" x="54.977%" y="469" fill="#D0CC2C" fg:w="32" fg:x="2723"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="55.562%" y="453" fill="#D05D36" fg:w="3" fg:x="2752"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (3 samples, 0.06%)</title><rect width=".061%" height="15" x="55.562%" y="437" fill="#F2011F" fg:w="3" fg:x="2752"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (3 samples, 0.06%)</title><rect width=".061%" height="15" x="55.562%" y="421" fill="#F15319" fg:w="3" fg:x="2752"/></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="55.623%" y="453" fill="#CDA932" fg:w="1" fg:x="2755"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,426 samples, 28.79%)</title><rect width="28.791%" height="15" x="26.873%" y="533" fill="#EFBA25" fg:w="1426" fg:x="1331"/><text x="27.123%" y="543.5">&lt;core::marker::PhantomData&lt;T&gt; as serde::de::De..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize (1,361 samples, 27.48%)</title><rect width="27.478%" height="15" x="28.185%" y="517" fill="#CDDD0A" fg:w="1361" fg:x="1396"/><text x="28.435%" y="527.5">json_benchmark::copy::citm_catalog::_::&lt;impl..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1,361 samples, 27.48%)</title><rect width="27.478%" height="15" x="28.185%" y="501" fill="#DAC40F" fg:w="1361" fg:x="1396"/><text x="28.435%" y="511.5">&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; a..</text></g><g><title>?? (44 samples, 0.89%)</title><rect width=".888%" height="15" x="54.775%" y="485" fill="#DAC423" fg:w="44" fg:x="2713"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (2 samples, 0.04%)</title><rect width=".04%" height="15" x="55.623%" y="469" fill="#E93F18" fg:w="2" fg:x="2755"/></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="55.643%" y="453" fill="#E10804" fg:w="1" fg:x="2756"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect width=".02%" height="15" x="55.663%" y="517" fill="#EA6923" fg:w="1" fg:x="2757"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect width=".02%" height="15" x="55.683%" y="517" fill="#EC1520" fg:w="1" fg:x="2758"/></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (2 samples, 0.04%)</title><rect width=".04%" height="15" x="55.704%" y="517" fill="#E46D06" fg:w="2" fg:x="2759"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (22 samples, 0.44%)</title><rect width=".444%" height="15" x="55.744%" y="501" fill="#E5D71F" fg:w="22" fg:x="2761"/></g><g><title>sonic_rs::reader::Reader::next (25 samples, 0.50%)</title><rect width=".505%" height="15" x="55.744%" y="517" fill="#DD3436" fg:w="25" fg:x="2761"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="56.188%" y="501" fill="#FC812B" fg:w="3" fg:x="2783"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (3 samples, 0.06%)</title><rect width=".061%" height="15" x="56.188%" y="485" fill="#F8B71B" fg:w="3" fg:x="2783"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (3 samples, 0.06%)</title><rect width=".061%" height="15" x="56.188%" y="469" fill="#FA0016" fg:w="3" fg:x="2783"/></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="56.269%" y="501" fill="#D5A60A" fg:w="1" fg:x="2787"/></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="56.289%" y="501" fill="#CFA324" fg:w="1" fg:x="2788"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1,848 samples, 37.31%)</title><rect width="37.311%" height="15" x="19.019%" y="581" fill="#D07A16" fg:w="1848" fg:x="942"/><text x="19.269%" y="591.5">&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::ve..</text></g><g><title>serde::de::SeqAccess::next_element (1,496 samples, 30.20%)</title><rect width="30.204%" height="15" x="26.126%" y="565" fill="#CF6831" fg:w="1496" fg:x="1294"/><text x="26.376%" y="575.5">serde::de::SeqAccess::next_element</text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,496 samples, 30.20%)</title><rect width="30.204%" height="15" x="26.126%" y="549" fill="#F8D332" fg:w="1496" fg:x="1294"/><text x="26.376%" y="559.5">&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::..</text></g><g><title>?? (33 samples, 0.67%)</title><rect width=".666%" height="15" x="55.663%" y="533" fill="#D90D2D" fg:w="33" fg:x="2757"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (4 samples, 0.08%)</title><rect width=".081%" height="15" x="56.249%" y="517" fill="#D3D831" fg:w="4" fg:x="2786"/></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="56.309%" y="501" fill="#DD3A35" fg:w="1" fg:x="2789"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1,853 samples, 37.41%)</title><rect width="37.412%" height="15" x="18.938%" y="613" fill="#DC7029" fg:w="1853" fg:x="938"/><text x="19.188%" y="623.5">serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1,853 samples, 37.41%)</title><rect width="37.412%" height="15" x="18.938%" y="597" fill="#EC261C" fg:w="1853" fg:x="938"/><text x="19.188%" y="607.5">&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Dese..</text></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="56.33%" y="581" fill="#E3C316" fg:w="1" fg:x="2790"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="56.33%" y="565" fill="#D63721" fg:w="1" fg:x="2790"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="56.33%" y="549" fill="#F8500D" fg:w="1" fg:x="2790"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="56.33%" y="533" fill="#EE3406" fg:w="1" fg:x="2790"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="56.33%" y="517" fill="#E0C62F" fg:w="1" fg:x="2790"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u64 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="56.491%" y="549" fill="#E9AB14" fg:w="1" fg:x="2798"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect width=".04%" height="15" x="56.511%" y="533" fill="#F11E19" fg:w="2" fg:x="2799"/></g><g><title>sonic_rs::reader::Reader::next (4 samples, 0.08%)</title><rect width=".081%" height="15" x="56.511%" y="549" fill="#CFAB26" fg:w="4" fg:x="2799"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="56.552%" y="533" fill="#EA4601" fg:w="2" fg:x="2801"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="56.552%" y="517" fill="#E8B212" fg:w="2" fg:x="2801"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect width=".04%" height="15" x="56.552%" y="501" fill="#F14E28" fg:w="2" fg:x="2801"/></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (1 samples, 0.02%)</title><rect width=".02%" height="15" x="56.653%" y="533" fill="#DE2319" fg:w="1" fg:x="2806"/></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (1 samples, 0.02%)</title><rect width=".02%" height="15" x="56.653%" y="517" fill="#CF5C10" fg:w="1" fg:x="2806"/></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect width=".02%" height="15" x="56.673%" y="533" fill="#D83B33" fg:w="1" fg:x="2807"/></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (9 samples, 0.18%)</title><rect width=".182%" height="15" x="56.693%" y="533" fill="#D5501C" fg:w="9" fg:x="2808"/></g><g><title>?? (25 samples, 0.50%)</title><rect width=".505%" height="15" x="56.491%" y="581" fill="#DC5D07" fg:w="25" fg:x="2798"/></g><g><title>?? (25 samples, 0.50%)</title><rect width=".505%" height="15" x="56.491%" y="565" fill="#E1182C" fg:w="25" fg:x="2798"/></g><g><title>sonic_rs::util::num::parse_number_unchecked (20 samples, 0.40%)</title><rect width=".404%" height="15" x="56.592%" y="549" fill="#F34A28" fg:w="20" fg:x="2803"/></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (6 samples, 0.12%)</title><rect width=".121%" height="15" x="56.875%" y="533" fill="#E42707" fg:w="6" fg:x="2817"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,898 samples, 38.32%)</title><rect width="38.32%" height="15" x="18.756%" y="629" fill="#E34F08" fg:w="1898" fg:x="929"/><text x="19.006%" y="639.5">&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (36 samples, 0.73%)</title><rect width=".727%" height="15" x="56.35%" y="613" fill="#EC3A0B" fg:w="36" fg:x="2791"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (29 samples, 0.59%)</title><rect width=".586%" height="15" x="56.491%" y="597" fill="#F93F23" fg:w="29" fg:x="2798"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="56.996%" y="581" fill="#FC7210" fg:w="4" fg:x="2823"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (1,901 samples, 38.38%)</title><rect width="38.381%" height="15" x="18.716%" y="661" fill="#FE9718" fg:w="1901" fg:x="927"/><text x="18.966%" y="671.5">&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::ne..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,901 samples, 38.38%)</title><rect width="38.381%" height="15" x="18.716%" y="645" fill="#FD3627" fg:w="1901" fg:x="927"/><text x="18.966%" y="655.5">&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::ne..</text></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="57.077%" y="629" fill="#F3192D" fg:w="1" fg:x="2827"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="57.077%" y="613" fill="#EA8609" fg:w="1" fg:x="2827"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="57.077%" y="597" fill="#E3A61F" fg:w="1" fg:x="2827"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="57.077%" y="581" fill="#F58F29" fg:w="1" fg:x="2827"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="57.945%" y="565" fill="#EEB520" fg:w="1" fg:x="2870"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8 samples, 0.16%)</title><rect width=".162%" height="15" x="57.965%" y="533" fill="#E07112" fg:w="8" fg:x="2871"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::slice_unchecked (3 samples, 0.06%)</title><rect width=".061%" height="15" x="58.126%" y="533" fill="#F0E51C" fg:w="3" fg:x="2879"/></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.06%)</title><rect width=".061%" height="15" x="58.126%" y="517" fill="#FAB903" fg:w="3" fg:x="2879"/></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.06%)</title><rect width=".061%" height="15" x="58.126%" y="501" fill="#D43B19" fg:w="3" fg:x="2879"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (18 samples, 0.36%)</title><rect width=".363%" height="15" x="58.187%" y="517" fill="#DD5714" fg:w="18" fg:x="2882"/></g><g><title>?? (31 samples, 0.63%)</title><rect width=".626%" height="15" x="57.965%" y="565" fill="#D54A1C" fg:w="31" fg:x="2871"/></g><g><title>?? (31 samples, 0.63%)</title><rect width=".626%" height="15" x="57.965%" y="549" fill="#E08422" fg:w="31" fg:x="2871"/></g><g><title>?? (20 samples, 0.40%)</title><rect width=".404%" height="15" x="58.187%" y="533" fill="#DE6518" fg:w="20" fg:x="2882"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect width=".04%" height="15" x="58.55%" y="517" fill="#FE8E04" fg:w="2" fg:x="2900"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (71 samples, 1.43%)</title><rect width="1.433%" height="15" x="57.178%" y="629" fill="#E6E531" fg:w="71" fg:x="2832"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (33 samples, 0.67%)</title><rect width=".666%" height="15" x="57.945%" y="613" fill="#EE462F" fg:w="33" fg:x="2870"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (33 samples, 0.67%)</title><rect width=".666%" height="15" x="57.945%" y="597" fill="#E7A011" fg:w="33" fg:x="2870"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (33 samples, 0.67%)</title><rect width=".666%" height="15" x="57.945%" y="581" fill="#DA4435" fg:w="33" fg:x="2870"/></g><g><title>serde::de::Visitor::visit_borrowed_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="58.591%" y="565" fill="#EC6F0A" fg:w="1" fg:x="2902"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="58.591%" y="549" fill="#E02229" fg:w="1" fg:x="2902"/></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="58.591%" y="533" fill="#F17613" fg:w="1" fg:x="2902"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="58.591%" y="517" fill="#EE8119" fg:w="1" fg:x="2902"/></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="58.591%" y="501" fill="#EE161F" fg:w="1" fg:x="2902"/></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect width=".02%" height="15" x="58.591%" y="485" fill="#DEAE30" fg:w="1" fg:x="2902"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect width=".02%" height="15" x="58.611%" y="613" fill="#CE9828" fg:w="1" fg:x="2903"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (6 samples, 0.12%)</title><rect width=".121%" height="15" x="58.631%" y="597" fill="#DA6336" fg:w="6" fg:x="2904"/></g><g><title>sonic_rs::reader::Reader::next (11 samples, 0.22%)</title><rect width=".222%" height="15" x="58.631%" y="613" fill="#DCAE1A" fg:w="11" fg:x="2904"/></g><g><title>?? (5 samples, 0.10%)</title><rect width=".101%" height="15" x="58.752%" y="597" fill="#F57409" fg:w="5" fg:x="2910"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (5 samples, 0.10%)</title><rect width=".101%" height="15" x="58.752%" y="581" fill="#D14823" fg:w="5" fg:x="2910"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (5 samples, 0.10%)</title><rect width=".101%" height="15" x="58.752%" y="565" fill="#E27E15" fg:w="5" fg:x="2910"/></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (3 samples, 0.06%)</title><rect width=".061%" height="15" x="58.873%" y="597" fill="#E3C001" fg:w="3" fg:x="2916"/></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (3 samples, 0.06%)</title><rect width=".061%" height="15" x="58.934%" y="597" fill="#EDB41D" fg:w="3" fg:x="2919"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2,001 samples, 40.40%)</title><rect width="40.4%" height="15" x="18.615%" y="677" fill="#E6C523" fg:w="2001" fg:x="922"/><text x="18.865%" y="687.5">&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deseriali..</text></g><g><title>serde::de::MapAccess::next_key (95 samples, 1.92%)</title><rect width="1.918%" height="15" x="57.097%" y="661" fill="#F6C11F" fg:w="95" fg:x="2828"/><text x="57.347%" y="671.5">s..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (95 samples, 1.92%)</title><rect width="1.918%" height="15" x="57.097%" y="645" fill="#F12404" fg:w="95" fg:x="2828"/><text x="57.347%" y="655.5">&lt;..</text></g><g><title>?? (20 samples, 0.40%)</title><rect width=".404%" height="15" x="58.611%" y="629" fill="#F18211" fg:w="20" fg:x="2903"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (8 samples, 0.16%)</title><rect width=".162%" height="15" x="58.853%" y="613" fill="#CE8920" fg:w="8" fg:x="2915"/></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="58.995%" y="597" fill="#EDE433" fg:w="1" fg:x="2922"/></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.015%" y="661" fill="#F3062A" fg:w="1" fg:x="2923"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,283 samples, 46.09%)</title><rect width="46.093%" height="15" x="12.962%" y="725" fill="#FB4A1C" fg:w="2283" fg:x="642"/><text x="13.212%" y="735.5">&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize (2,018 samples, 40.74%)</title><rect width="40.743%" height="15" x="18.312%" y="709" fill="#DA1431" fg:w="2018" fg:x="907"/><text x="18.562%" y="719.5">json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2,018 samples, 40.74%)</title><rect width="40.743%" height="15" x="18.312%" y="693" fill="#EE1C0E" fg:w="2018" fg:x="907"/><text x="18.562%" y="703.5">&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializ..</text></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="59.015%" y="677" fill="#E5282E" fg:w="2" fg:x="2923"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.035%" y="661" fill="#F4C314" fg:w="1" fg:x="2924"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.035%" y="645" fill="#FD3823" fg:w="1" fg:x="2924"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.055%" y="709" fill="#D2952C" fg:w="1" fg:x="2925"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.075%" y="709" fill="#F0870C" fg:w="1" fg:x="2926"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.096%" y="709" fill="#FB1832" fg:w="1" fg:x="2927"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.096%" y="693" fill="#F3C82F" fg:w="1" fg:x="2927"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2,395 samples, 48.35%)</title><rect width="48.355%" height="15" x="10.781%" y="773" fill="#E0A61A" fg:w="2395" fg:x="534"/><text x="11.031%" y="783.5">&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deseri..</text></g><g><title>serde::de::SeqAccess::next_element (2,303 samples, 46.50%)</title><rect width="46.497%" height="15" x="12.639%" y="757" fill="#E9002F" fg:w="2303" fg:x="626"/><text x="12.889%" y="767.5">serde::de::SeqAccess::next_element</text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,303 samples, 46.50%)</title><rect width="46.497%" height="15" x="12.639%" y="741" fill="#FD5005" fg:w="2303" fg:x="626"/><text x="12.889%" y="751.5">&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_se..</text></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="59.055%" y="725" fill="#D68519" fg:w="4" fg:x="2925"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.116%" y="709" fill="#D11B0E" fg:w="1" fg:x="2928"/></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.116%" y="693" fill="#DB6633" fg:w="1" fg:x="2928"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (2,400 samples, 48.46%)</title><rect width="48.456%" height="15" x="10.701%" y="805" fill="#ED1210" fg:w="2400" fg:x="530"/><text x="10.951%" y="815.5">serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserial..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (2,400 samples, 48.46%)</title><rect width="48.456%" height="15" x="10.701%" y="789" fill="#F15511" fg:w="2400" fg:x="530"/><text x="10.951%" y="799.5">&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserial..</text></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.136%" y="773" fill="#EC5A2A" fg:w="1" fg:x="2929"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.136%" y="757" fill="#F93915" fg:w="1" fg:x="2929"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.136%" y="741" fill="#F30C24" fg:w="1" fg:x="2929"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.136%" y="725" fill="#FD802F" fg:w="1" fg:x="2929"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.136%" y="709" fill="#CF2114" fg:w="1" fg:x="2929"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="59.176%" y="757" fill="#E9D723" fg:w="2" fg:x="2931"/></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (7 samples, 0.14%)</title><rect width=".141%" height="15" x="59.156%" y="773" fill="#F9BC34" fg:w="7" fg:x="2930"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="59.217%" y="757" fill="#E10C20" fg:w="4" fg:x="2933"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (4 samples, 0.08%)</title><rect width=".081%" height="15" x="59.217%" y="741" fill="#F7620E" fg:w="4" fg:x="2933"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (4 samples, 0.08%)</title><rect width=".081%" height="15" x="59.217%" y="725" fill="#F7DB30" fg:w="4" fg:x="2933"/></g><g><title>serde::de::Visitor::visit_borrowed_str (4 samples, 0.08%)</title><rect width=".081%" height="15" x="59.217%" y="709" fill="#FD3C30" fg:w="4" fg:x="2933"/></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (4 samples, 0.08%)</title><rect width=".081%" height="15" x="59.217%" y="693" fill="#F50F34" fg:w="4" fg:x="2933"/></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (4 samples, 0.08%)</title><rect width=".081%" height="15" x="59.217%" y="677" fill="#DC851C" fg:w="4" fg:x="2933"/></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (4 samples, 0.08%)</title><rect width=".081%" height="15" x="59.217%" y="661" fill="#D9B404" fg:w="4" fg:x="2933"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.08%)</title><rect width=".081%" height="15" x="59.217%" y="645" fill="#FB1801" fg:w="4" fg:x="2933"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.08%)</title><rect width=".081%" height="15" x="59.217%" y="629" fill="#D4B931" fg:w="4" fg:x="2933"/></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.08%)</title><rect width=".081%" height="15" x="59.217%" y="613" fill="#D7AF16" fg:w="4" fg:x="2933"/></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.08%)</title><rect width=".081%" height="15" x="59.217%" y="597" fill="#FACD0E" fg:w="4" fg:x="2933"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="59.217%" y="581" fill="#E1D316" fg:w="4" fg:x="2933"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="59.217%" y="565" fill="#FBB32A" fg:w="4" fg:x="2933"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="59.217%" y="549" fill="#D0D833" fg:w="4" fg:x="2933"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.08%)</title><rect width=".081%" height="15" x="59.217%" y="533" fill="#EB240B" fg:w="4" fg:x="2933"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="59.217%" y="517" fill="#D5BD1C" fg:w="4" fg:x="2933"/></g><g><title>alloc::alloc::alloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="59.217%" y="501" fill="#E3CB2A" fg:w="4" fg:x="2933"/></g><g><title>__rust_alloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="59.217%" y="485" fill="#F44824" fg:w="4" fg:x="2933"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="59.217%" y="469" fill="#D53511" fg:w="4" fg:x="2933"/></g><g><title>_rjem_malloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="59.237%" y="453" fill="#CFA703" fg:w="3" fg:x="2934"/></g><g><title>imalloc_fastpath (2 samples, 0.04%)</title><rect width=".04%" height="15" x="59.257%" y="437" fill="#D8621E" fg:w="2" fg:x="2935"/></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.277%" y="421" fill="#EC7B0F" fg:w="1" fg:x="2936"/></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.277%" y="405" fill="#F85132" fg:w="1" fg:x="2936"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (8 samples, 0.16%)</title><rect width=".162%" height="15" x="59.156%" y="805" fill="#D67804" fg:w="8" fg:x="2930"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (8 samples, 0.16%)</title><rect width=".162%" height="15" x="59.156%" y="789" fill="#D0B322" fg:w="8" fg:x="2930"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.297%" y="773" fill="#E38C07" fg:w="1" fg:x="2937"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::backward (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.297%" y="757" fill="#D61606" fg:w="1" fg:x="2937"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.398%" y="741" fill="#CF891B" fg:w="1" fg:x="2942"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.398%" y="725" fill="#D2082E" fg:w="1" fg:x="2942"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.398%" y="709" fill="#F01036" fg:w="1" fg:x="2942"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.398%" y="693" fill="#D3D11D" fg:w="1" fg:x="2942"/></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (2 samples, 0.04%)</title><rect width=".04%" height="15" x="59.499%" y="725" fill="#E2E418" fg:w="2" fg:x="2947"/></g><g><title>?? (12 samples, 0.24%)</title><rect width=".242%" height="15" x="59.398%" y="773" fill="#DE5409" fg:w="12" fg:x="2942"/></g><g><title>?? (12 samples, 0.24%)</title><rect width=".242%" height="15" x="59.398%" y="757" fill="#EACB1E" fg:w="12" fg:x="2942"/></g><g><title>sonic_rs::util::num::parse_number_unchecked (11 samples, 0.22%)</title><rect width=".222%" height="15" x="59.419%" y="741" fill="#EE6D0E" fg:w="11" fg:x="2943"/></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (5 samples, 0.10%)</title><rect width=".101%" height="15" x="59.54%" y="725" fill="#E9CE22" fg:w="5" fg:x="2949"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (18 samples, 0.36%)</title><rect width=".363%" height="15" x="59.318%" y="805" fill="#DCA72F" fg:w="18" fg:x="2938"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (14 samples, 0.28%)</title><rect width=".283%" height="15" x="59.398%" y="789" fill="#EE690A" fg:w="14" fg:x="2942"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="59.641%" y="773" fill="#D5E311" fg:w="2" fg:x="2954"/></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.742%" y="725" fill="#D98426" fg:w="1" fg:x="2959"/></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.742%" y="709" fill="#F29204" fg:w="1" fg:x="2959"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,451 samples, 49.49%)</title><rect width="49.485%" height="15" x="10.357%" y="821" fill="#D43D09" fg:w="2451" fg:x="513"/><text x="10.607%" y="831.5">&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (8 samples, 0.16%)</title><rect width=".162%" height="15" x="59.681%" y="805" fill="#F77E16" fg:w="8" fg:x="2956"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u64 (6 samples, 0.12%)</title><rect width=".121%" height="15" x="59.721%" y="789" fill="#DCC402" fg:w="6" fg:x="2958"/></g><g><title>?? (6 samples, 0.12%)</title><rect width=".121%" height="15" x="59.721%" y="773" fill="#D02E04" fg:w="6" fg:x="2958"/></g><g><title>?? (6 samples, 0.12%)</title><rect width=".121%" height="15" x="59.721%" y="757" fill="#FC682E" fg:w="6" fg:x="2958"/></g><g><title>sonic_rs::util::num::parse_number_unchecked (6 samples, 0.12%)</title><rect width=".121%" height="15" x="59.721%" y="741" fill="#ED9830" fg:w="6" fg:x="2958"/></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (4 samples, 0.08%)</title><rect width=".081%" height="15" x="59.762%" y="725" fill="#DD3B25" fg:w="4" fg:x="2960"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (4 samples, 0.08%)</title><rect width=".081%" height="15" x="59.843%" y="773" fill="#D1CA33" fg:w="4" fg:x="2964"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (2,457 samples, 49.61%)</title><rect width="49.606%" height="15" x="10.337%" y="853" fill="#E4511E" fg:w="2457" fg:x="512"/><text x="10.587%" y="863.5">&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,457 samples, 49.61%)</title><rect width="49.606%" height="15" x="10.337%" y="837" fill="#E32A27" fg:w="2457" fg:x="512"/><text x="10.587%" y="847.5">&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed</text></g><g><title>?? (5 samples, 0.10%)</title><rect width=".101%" height="15" x="59.843%" y="821" fill="#DD1A02" fg:w="5" fg:x="2964"/></g><g><title>?? (5 samples, 0.10%)</title><rect width=".101%" height="15" x="59.843%" y="805" fill="#FE3D1F" fg:w="5" fg:x="2964"/></g><g><title>sonic_rs::reader::Reader::next (5 samples, 0.10%)</title><rect width=".101%" height="15" x="59.843%" y="789" fill="#DEAD26" fg:w="5" fg:x="2964"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.923%" y="773" fill="#DA320C" fg:w="1" fg:x="2968"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.923%" y="757" fill="#DF5828" fg:w="1" fg:x="2968"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="59.923%" y="741" fill="#ED3613" fg:w="1" fg:x="2968"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (25 samples, 0.50%)</title><rect width=".505%" height="15" x="60.004%" y="821" fill="#FB8119" fg:w="25" fg:x="2972"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.04%)</title><rect width=".04%" height="15" x="60.509%" y="757" fill="#EE6113" fg:w="2" fg:x="2997"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (11 samples, 0.22%)</title><rect width=".222%" height="15" x="60.549%" y="757" fill="#F0A912" fg:w="11" fg:x="2999"/></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="60.711%" y="741" fill="#E6BB31" fg:w="3" fg:x="3007"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="60.711%" y="725" fill="#D12C1A" fg:w="3" fg:x="3007"/></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="60.711%" y="709" fill="#F40006" fg:w="3" fg:x="3007"/></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.06%)</title><rect width=".061%" height="15" x="60.711%" y="693" fill="#F81215" fg:w="3" fg:x="3007"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::slice_unchecked (2 samples, 0.04%)</title><rect width=".04%" height="15" x="60.771%" y="725" fill="#F5B413" fg:w="2" fg:x="3010"/></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.04%)</title><rect width=".04%" height="15" x="60.771%" y="709" fill="#FC7624" fg:w="2" fg:x="3010"/></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.04%)</title><rect width=".04%" height="15" x="60.771%" y="693" fill="#D2E013" fg:w="2" fg:x="3010"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (22 samples, 0.44%)</title><rect width=".444%" height="15" x="60.812%" y="709" fill="#DA1E18" fg:w="22" fg:x="3012"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (6 samples, 0.12%)</title><rect width=".121%" height="15" x="61.256%" y="709" fill="#DB4B32" fg:w="6" fg:x="3034"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect width=".02%" height="15" x="61.377%" y="709" fill="#EA4832" fg:w="1" fg:x="3040"/></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (3 samples, 0.06%)</title><rect width=".061%" height="15" x="61.397%" y="709" fill="#DB6430" fg:w="3" fg:x="3041"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (48 samples, 0.97%)</title><rect width=".969%" height="15" x="60.509%" y="821" fill="#FD0529" fg:w="48" fg:x="2997"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (48 samples, 0.97%)</title><rect width=".969%" height="15" x="60.509%" y="805" fill="#F7B50B" fg:w="48" fg:x="2997"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (48 samples, 0.97%)</title><rect width=".969%" height="15" x="60.509%" y="789" fill="#DEDF19" fg:w="48" fg:x="2997"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (48 samples, 0.97%)</title><rect width=".969%" height="15" x="60.509%" y="773" fill="#D6C61C" fg:w="48" fg:x="2997"/></g><g><title>?? (35 samples, 0.71%)</title><rect width=".707%" height="15" x="60.771%" y="757" fill="#E62E2B" fg:w="35" fg:x="3010"/></g><g><title>?? (35 samples, 0.71%)</title><rect width=".707%" height="15" x="60.771%" y="741" fill="#E94135" fg:w="35" fg:x="3010"/></g><g><title>?? (33 samples, 0.67%)</title><rect width=".666%" height="15" x="60.812%" y="725" fill="#DD791B" fg:w="33" fg:x="3012"/></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (1 samples, 0.02%)</title><rect width=".02%" height="15" x="61.458%" y="709" fill="#F7462F" fg:w="1" fg:x="3044"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect width=".02%" height="15" x="61.478%" y="805" fill="#E45523" fg:w="1" fg:x="3045"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="61.498%" y="805" fill="#D13212" fg:w="1" fg:x="3046"/></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (3 samples, 0.06%)</title><rect width=".061%" height="15" x="61.518%" y="805" fill="#FA1323" fg:w="3" fg:x="3047"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (3 samples, 0.06%)</title><rect width=".061%" height="15" x="61.579%" y="789" fill="#FD6B1D" fg:w="3" fg:x="3050"/></g><g><title>sonic_rs::reader::Reader::next (10 samples, 0.20%)</title><rect width=".202%" height="15" x="61.579%" y="805" fill="#FCB31D" fg:w="10" fg:x="3050"/></g><g><title>?? (7 samples, 0.14%)</title><rect width=".141%" height="15" x="61.639%" y="789" fill="#EEC206" fg:w="7" fg:x="3053"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (7 samples, 0.14%)</title><rect width=".141%" height="15" x="61.639%" y="773" fill="#EEA41D" fg:w="7" fg:x="3053"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (7 samples, 0.14%)</title><rect width=".141%" height="15" x="61.639%" y="757" fill="#E01909" fg:w="7" fg:x="3053"/></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (2 samples, 0.04%)</title><rect width=".04%" height="15" x="61.781%" y="789" fill="#F49917" fg:w="2" fg:x="3060"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2,576 samples, 52.01%)</title><rect width="52.009%" height="15" x="9.853%" y="869" fill="#D4CB0E" fg:w="2576" fg:x="488"/><text x="10.103%" y="879.5">&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmar..</text></g><g><title>serde::de::MapAccess::next_key (95 samples, 1.92%)</title><rect width="1.918%" height="15" x="59.944%" y="853" fill="#DCA414" fg:w="95" fg:x="2969"/><text x="60.194%" y="863.5">s..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (95 samples, 1.92%)</title><rect width="1.918%" height="15" x="59.944%" y="837" fill="#DECB30" fg:w="95" fg:x="2969"/><text x="60.194%" y="847.5">&lt;..</text></g><g><title>?? (19 samples, 0.38%)</title><rect width=".384%" height="15" x="61.478%" y="821" fill="#D79F16" fg:w="19" fg:x="3045"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (4 samples, 0.08%)</title><rect width=".081%" height="15" x="61.781%" y="805" fill="#D8B72F" fg:w="4" fg:x="3060"/></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.04%)</title><rect width=".04%" height="15" x="61.821%" y="789" fill="#E5C319" fg:w="2" fg:x="3062"/></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (2 samples, 0.04%)</title><rect width=".04%" height="15" x="61.861%" y="853" fill="#E08433" fg:w="2" fg:x="3064"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,584 samples, 52.17%)</title><rect width="52.17%" height="15" x="9.772%" y="917" fill="#F03F07" fg:w="2584" fg:x="484"/><text x="10.022%" y="927.5">&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize (2,584 samples, 52.17%)</title><rect width="52.17%" height="15" x="9.772%" y="901" fill="#F9B629" fg:w="2584" fg:x="484"/><text x="10.022%" y="911.5">json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2,584 samples, 52.17%)</title><rect width="52.17%" height="15" x="9.772%" y="885" fill="#F32F1A" fg:w="2584" fg:x="484"/><text x="10.022%" y="895.5">&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_st..</text></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="61.861%" y="869" fill="#E93002" fg:w="4" fg:x="3064"/></g><g><title>sonic_rs::reader::Reader::next (2 samples, 0.04%)</title><rect width=".04%" height="15" x="61.902%" y="853" fill="#F4A522" fg:w="2" fg:x="3066"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect width=".04%" height="15" x="61.902%" y="837" fill="#CF5907" fg:w="2" fg:x="3066"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (2,963 samples, 59.82%)</title><rect width="59.822%" height="15" x="2.14%" y="1045" fill="#F47524" fg:w="2963" fg:x="106"/><text x="2.39%" y="1055.5">&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,963 samples, 59.82%)</title><rect width="59.822%" height="15" x="2.14%" y="1029" fill="#E29022" fg:w="2963" fg:x="106"/><text x="2.39%" y="1039.5">&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,963 samples, 59.82%)</title><rect width="59.822%" height="15" x="2.14%" y="1013" fill="#D51713" fg:w="2963" fg:x="106"/><text x="2.39%" y="1023.5">&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (2,613 samples, 52.76%)</title><rect width="52.756%" height="15" x="9.207%" y="997" fill="#D94B0C" fg:w="2613" fg:x="456"/><text x="9.457%" y="1007.5">serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (2,613 samples, 52.76%)</title><rect width="52.756%" height="15" x="9.207%" y="981" fill="#E09F11" fg:w="2613" fg:x="456"/><text x="9.457%" y="991.5">&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2,613 samples, 52.76%)</title><rect width="52.756%" height="15" x="9.207%" y="965" fill="#D97601" fg:w="2613" fg:x="456"/><text x="9.457%" y="975.5">&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::V..</text></g><g><title>serde::de::SeqAccess::next_element (2,592 samples, 52.33%)</title><rect width="52.332%" height="15" x="9.63%" y="949" fill="#E8B430" fg:w="2592" fg:x="477"/><text x="9.88%" y="959.5">serde::de::SeqAccess::next_element</text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,592 samples, 52.33%)</title><rect width="52.332%" height="15" x="9.63%" y="933" fill="#E61B21" fg:w="2592" fg:x="477"/><text x="9.88%" y="943.5">&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed</text></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="61.942%" y="917" fill="#CD1F15" fg:w="1" fg:x="3068"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="61.942%" y="901" fill="#FD3B04" fg:w="1" fg:x="3068"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="61.942%" y="885" fill="#E0C909" fg:w="1" fg:x="3068"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="61.962%" y="949" fill="#E5CE1E" fg:w="1" fg:x="3069"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="61.962%" y="1013" fill="#D4432F" fg:w="2" fg:x="3069"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="61.962%" y="997" fill="#D36032" fg:w="2" fg:x="3069"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (2 samples, 0.04%)</title><rect width=".04%" height="15" x="61.962%" y="981" fill="#FC7212" fg:w="2" fg:x="3069"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.04%)</title><rect width=".04%" height="15" x="61.962%" y="965" fill="#DF3A25" fg:w="2" fg:x="3069"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="61.983%" y="949" fill="#ED4604" fg:w="1" fg:x="3070"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="61.983%" y="933" fill="#F4552E" fg:w="1" fg:x="3070"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="61.983%" y="917" fill="#DF2734" fg:w="1" fg:x="3070"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="61.983%" y="901" fill="#DAC80E" fg:w="1" fg:x="3070"/></g><g><title>sonic_rs::serde::de::from_trait (2,972 samples, 60.00%)</title><rect width="60.004%" height="15" x="2.019%" y="1109" fill="#D0AB10" fg:w="2972" fg:x="100"/><text x="2.269%" y="1119.5">sonic_rs::serde::de::from_trait</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize (2,970 samples, 59.96%)</title><rect width="59.964%" height="15" x="2.059%" y="1093" fill="#EAC812" fg:w="2970" fg:x="102"/><text x="2.309%" y="1103.5">json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2,970 samples, 59.96%)</title><rect width="59.964%" height="15" x="2.059%" y="1077" fill="#E42D0B" fg:w="2970" fg:x="102"/><text x="2.309%" y="1087.5">&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct</text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2,970 samples, 59.96%)</title><rect width="59.964%" height="15" x="2.059%" y="1061" fill="#EDB60B" fg:w="2970" fg:x="102"/><text x="2.309%" y="1071.5">&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm..</text></g><g><title>serde::de::MapAccess::next_key (3 samples, 0.06%)</title><rect width=".061%" height="15" x="61.962%" y="1045" fill="#F1AF31" fg:w="3" fg:x="3069"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.06%)</title><rect width=".061%" height="15" x="61.962%" y="1029" fill="#F72623" fg:w="3" fg:x="3069"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="62.003%" y="1013" fill="#E42731" fg:w="1" fg:x="3071"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="62.003%" y="997" fill="#E2651A" fg:w="1" fg:x="3071"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="62.003%" y="981" fill="#CE8D13" fg:w="1" fg:x="3071"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="62.164%" y="949" fill="#D3C80D" fg:w="1" fg:x="3079"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="62.164%" y="933" fill="#F17906" fg:w="1" fg:x="3079"/></g><g><title>core::core_arch::x86::avx2::_mm256_cmpgt_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="62.164%" y="917" fill="#EADD1D" fg:w="1" fg:x="3079"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="62.164%" y="965" fill="#E58805" fg:w="2" fg:x="3079"/></g><g><title>core::core_arch::x86::avx2::_mm256_permute2x128_si256 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="62.184%" y="949" fill="#EE240B" fg:w="1" fg:x="3080"/></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (14 samples, 0.28%)</title><rect width=".283%" height="15" x="62.205%" y="965" fill="#FB3729" fg:w="14" fg:x="3081"/></g><g><title>?? (31 samples, 0.63%)</title><rect width=".626%" height="15" x="62.164%" y="981" fill="#F22228" fg:w="31" fg:x="3079"/></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (15 samples, 0.30%)</title><rect width=".303%" height="15" x="62.487%" y="965" fill="#D72A11" fg:w="15" fg:x="3095"/></g><g><title>?? (108 samples, 2.18%)</title><rect width="2.18%" height="15" x="62.164%" y="1013" fill="#CF2C2E" fg:w="108" fg:x="3079"/><text x="62.414%" y="1023.5">??</text></g><g><title>?? (108 samples, 2.18%)</title><rect width="2.18%" height="15" x="62.164%" y="997" fill="#D3CE1C" fg:w="108" fg:x="3079"/><text x="62.414%" y="1007.5">??</text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_si256 (77 samples, 1.55%)</title><rect width="1.555%" height="15" x="62.79%" y="981" fill="#EDA710" fg:w="77" fg:x="3110"/></g><g><title>core::intrinsics::copy_nonoverlapping (77 samples, 1.55%)</title><rect width="1.555%" height="15" x="62.79%" y="965" fill="#E94206" fg:w="77" fg:x="3110"/></g><g><title>simdutf8::implementation::x86::avx2::validate_utf8_basic (135 samples, 2.73%)</title><rect width="2.726%" height="15" x="62.023%" y="1029" fill="#F67B1D" fg:w="135" fg:x="3072"/><text x="62.273%" y="1039.5">si..</text></g><g><title>simdutf8::implementation::x86::validate_utf8_basic_avx2 (20 samples, 0.40%)</title><rect width=".404%" height="15" x="64.345%" y="1013" fill="#D13E28" fg:w="20" fg:x="3187"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3,127 samples, 63.13%)</title><rect width="63.133%" height="15" x="2.019%" y="1285" fill="#DA0419" fg:w="3127" fg:x="100"/><text x="2.269%" y="1295.5">&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,127 samples, 63.13%)</title><rect width="63.133%" height="15" x="2.019%" y="1269" fill="#FD5B31" fg:w="3127" fg:x="100"/><text x="2.269%" y="1279.5">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>?? (3,127 samples, 63.13%)</title><rect width="63.133%" height="15" x="2.019%" y="1253" fill="#E49B1D" fg:w="3127" fg:x="100"/><text x="2.269%" y="1263.5">??</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3,127 samples, 63.13%)</title><rect width="63.133%" height="15" x="2.019%" y="1237" fill="#F33925" fg:w="3127" fg:x="100"/><text x="2.269%" y="1247.5">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,127 samples, 63.13%)</title><rect width="63.133%" height="15" x="2.019%" y="1221" fill="#F4A711" fg:w="3127" fg:x="100"/><text x="2.269%" y="1231.5">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (3,127 samples, 63.13%)</title><rect width="63.133%" height="15" x="2.019%" y="1205" fill="#CFB526" fg:w="3127" fg:x="100"/><text x="2.269%" y="1215.5">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,127 samples, 63.13%)</title><rect width="63.133%" height="15" x="2.019%" y="1189" fill="#D30817" fg:w="3127" fg:x="100"/><text x="2.269%" y="1199.5">core::iter::adapters::map::map_fold::_{{closure}}</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3,127 samples, 63.13%)</title><rect width="63.133%" height="15" x="2.019%" y="1173" fill="#EB0B2C" fg:w="3127" fg:x="100"/><text x="2.269%" y="1183.5">core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut</text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}}::_{{closure}} (3,127 samples, 63.13%)</title><rect width="63.133%" height="15" x="2.019%" y="1157" fill="#F81234" fg:w="3127" fg:x="100"/><text x="2.269%" y="1167.5">deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}}::_{{closure}}</text></g><g><title>deserialize_struct::sonic_rs_parse_struct (3,127 samples, 63.13%)</title><rect width="63.133%" height="15" x="2.019%" y="1141" fill="#D00407" fg:w="3127" fg:x="100"/><text x="2.269%" y="1151.5">deserialize_struct::sonic_rs_parse_struct</text></g><g><title>sonic_rs::serde::de::from_slice (3,127 samples, 63.13%)</title><rect width="63.133%" height="15" x="2.019%" y="1125" fill="#F01127" fg:w="3127" fg:x="100"/><text x="2.269%" y="1135.5">sonic_rs::serde::de::from_slice</text></g><g><title>sonic_rs::util::utf8::from_utf8 (155 samples, 3.13%)</title><rect width="3.129%" height="15" x="62.023%" y="1109" fill="#CFAA03" fg:w="155" fg:x="3072"/><text x="62.273%" y="1119.5">son..</text></g><g><title>simdutf8::basic::from_utf8 (155 samples, 3.13%)</title><rect width="3.129%" height="15" x="62.023%" y="1093" fill="#EC6434" fg:w="155" fg:x="3072"/><text x="62.273%" y="1103.5">sim..</text></g><g><title>simdutf8::implementation::validate_utf8_basic (155 samples, 3.13%)</title><rect width="3.129%" height="15" x="62.023%" y="1077" fill="#F64E33" fg:w="155" fg:x="3072"/><text x="62.273%" y="1087.5">sim..</text></g><g><title>simdutf8::implementation::x86::validate_utf8_basic (155 samples, 3.13%)</title><rect width="3.129%" height="15" x="62.023%" y="1061" fill="#D3110F" fg:w="155" fg:x="3072"/><text x="62.273%" y="1071.5">sim..</text></g><g><title>simdutf8::implementation::x86::validate_utf8_basic_avx2 (155 samples, 3.13%)</title><rect width="3.129%" height="15" x="62.023%" y="1045" fill="#D13B2E" fg:w="155" fg:x="3072"/><text x="62.273%" y="1055.5">sim..</text></g><g><title>simdutf8::implementation::x86::validate_utf8_basic_avx2 (20 samples, 0.40%)</title><rect width=".404%" height="15" x="64.749%" y="1029" fill="#D25C19" fg:w="20" fg:x="3207"/></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.152%" y="1285" fill="#EEAE34" fg:w="1" fg:x="3227"/></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.152%" y="1269" fill="#E64907" fg:w="1" fg:x="3227"/></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.152%" y="1253" fill="#F37C28" fg:w="1" fg:x="3227"/></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.152%" y="1237" fill="#F4AA0B" fg:w="1" fg:x="3227"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.152%" y="1221" fill="#CF7236" fg:w="1" fg:x="3227"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.152%" y="1205" fill="#CD2A14" fg:w="1" fg:x="3227"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.152%" y="1189" fill="#E61E1C" fg:w="1" fg:x="3227"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.152%" y="1173" fill="#CD4936" fg:w="1" fg:x="3227"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.152%" y="1157" fill="#FEE317" fg:w="1" fg:x="3227"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.152%" y="1141" fill="#E4CA22" fg:w="1" fg:x="3227"/></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.152%" y="1125" fill="#DEE125" fg:w="1" fg:x="3227"/></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.152%" y="1109" fill="#DD0E36" fg:w="1" fg:x="3227"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.152%" y="1093" fill="#FE6602" fg:w="1" fg:x="3227"/></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.152%" y="1077" fill="#E86811" fg:w="1" fg:x="3227"/></g><g><title>imalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.152%" y="1061" fill="#FADC0E" fg:w="1" fg:x="3227"/></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.152%" y="1045" fill="#F19E09" fg:w="1" fg:x="3227"/></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.152%" y="1029" fill="#F6092B" fg:w="1" fg:x="3227"/></g><g><title>iallocztm (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.152%" y="1013" fill="#CE4921" fg:w="1" fg:x="3227"/></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.152%" y="997" fill="#DE4F08" fg:w="1" fg:x="3227"/></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.152%" y="981" fill="#EA0836" fg:w="1" fg:x="3227"/></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.152%" y="965" fill="#D18626" fg:w="1" fg:x="3227"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.152%" y="949" fill="#E67F1D" fg:w="1" fg:x="3227"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,alloc::string::String&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.173%" y="1221" fill="#F22C29" fg:w="2" fg:x="3228"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.173%" y="1205" fill="#DE382B" fg:w="2" fg:x="3228"/></g><g><title>core::mem::drop (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.173%" y="1189" fill="#EE272F" fg:w="2" fg:x="3228"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,alloc::string::String&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.173%" y="1173" fill="#E24F2B" fg:w="2" fg:x="3228"/></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.173%" y="1157" fill="#F26935" fg:w="2" fg:x="3228"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.173%" y="1141" fill="#FB842E" fg:w="2" fg:x="3228"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.173%" y="1125" fill="#E74D0E" fg:w="2" fg:x="3228"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.173%" y="1109" fill="#F08709" fg:w="2" fg:x="3228"/></g><g><title>alloc::collections::btree::mem::replace (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.173%" y="1093" fill="#F86D0E" fg:w="2" fg:x="3228"/></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.173%" y="1077" fill="#E39234" fg:w="2" fg:x="3228"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.173%" y="1061" fill="#E83603" fg:w="2" fg:x="3228"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,alloc::string::String&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.173%" y="1045" fill="#E5C92B" fg:w="2" fg:x="3228"/></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.213%" y="837" fill="#FCA121" fg:w="1" fg:x="3230"/></g><g><title>arena_bin_lower_slab (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.233%" y="821" fill="#E29228" fg:w="1" fg:x="3231"/></g><g><title>arena_bin_slabs_nonfull_insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.233%" y="805" fill="#DB2F19" fg:w="1" fg:x="3231"/></g><g><title>_rjem_je_edata_heap_insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.233%" y="789" fill="#FA870D" fg:w="1" fg:x="3231"/></g><g><title>arena_dalloc_bin_locked_step (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.233%" y="837" fill="#DBE512" fg:w="2" fg:x="3231"/></g><g><title>edata_nfree_inc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.253%" y="821" fill="#D9981B" fg:w="1" fg:x="3232"/></g><g><title>_rjem_je_sdallocx_default (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.213%" y="965" fill="#E1472F" fg:w="4" fg:x="3230"/></g><g><title>isfree (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.213%" y="949" fill="#DC8B0E" fg:w="4" fg:x="3230"/></g><g><title>isdalloct (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.213%" y="933" fill="#F73620" fg:w="4" fg:x="3230"/></g><g><title>arena_sdalloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.213%" y="917" fill="#FC8327" fg:w="4" fg:x="3230"/></g><g><title>tcache_dalloc_small (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.213%" y="901" fill="#D26C27" fg:w="4" fg:x="3230"/></g><g><title>_rjem_je_tcache_bin_flush_small (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.213%" y="885" fill="#CD171D" fg:w="4" fg:x="3230"/></g><g><title>tcache_bin_flush_bottom (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.213%" y="869" fill="#F68B2E" fg:w="4" fg:x="3230"/></g><g><title>tcache_bin_flush_impl (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.213%" y="853" fill="#FA511A" fg:w="4" fg:x="3230"/></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.274%" y="837" fill="#D66807" fg:w="1" fg:x="3233"/></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.274%" y="821" fill="#E9BD08" fg:w="1" fg:x="3233"/></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.274%" y="805" fill="#E48D11" fg:w="1" fg:x="3233"/></g><g><title>rtree_cache_direct_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.274%" y="789" fill="#F79D01" fg:w="1" fg:x="3233"/></g><g><title>?? (5 samples, 0.10%)</title><rect width=".101%" height="15" x="65.213%" y="1125" fill="#F9E105" fg:w="5" fg:x="3230"/></g><g><title>?? (5 samples, 0.10%)</title><rect width=".101%" height="15" x="65.213%" y="1109" fill="#F2370D" fg:w="5" fg:x="3230"/></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.10%)</title><rect width=".101%" height="15" x="65.213%" y="1093" fill="#E63132" fg:w="5" fg:x="3230"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.10%)</title><rect width=".101%" height="15" x="65.213%" y="1077" fill="#F16F26" fg:w="5" fg:x="3230"/></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.10%)</title><rect width=".101%" height="15" x="65.213%" y="1061" fill="#FC9B04" fg:w="5" fg:x="3230"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect width=".101%" height="15" x="65.213%" y="1045" fill="#D44520" fg:w="5" fg:x="3230"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.10%)</title><rect width=".101%" height="15" x="65.213%" y="1029" fill="#F36B2F" fg:w="5" fg:x="3230"/></g><g><title>alloc::alloc::dealloc (5 samples, 0.10%)</title><rect width=".101%" height="15" x="65.213%" y="1013" fill="#F7820C" fg:w="5" fg:x="3230"/></g><g><title>__rust_dealloc (5 samples, 0.10%)</title><rect width=".101%" height="15" x="65.213%" y="997" fill="#E94A10" fg:w="5" fg:x="3230"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (5 samples, 0.10%)</title><rect width=".101%" height="15" x="65.213%" y="981" fill="#D03A12" fg:w="5" fg:x="3230"/></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.294%" y="965" fill="#F2E101" fg:w="1" fg:x="3234"/></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.294%" y="949" fill="#F92728" fg:w="1" fg:x="3234"/></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.294%" y="933" fill="#CF482C" fg:w="1" fg:x="3234"/></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.334%" y="789" fill="#D7C10C" fg:w="1" fg:x="3236"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.334%" y="1077" fill="#F82927" fg:w="2" fg:x="3236"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.334%" y="1061" fill="#FD5504" fg:w="2" fg:x="3236"/></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.334%" y="1045" fill="#F3461F" fg:w="2" fg:x="3236"/></g><g><title>__rust_dealloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.334%" y="1029" fill="#FDC31A" fg:w="2" fg:x="3236"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.334%" y="1013" fill="#F32A0B" fg:w="2" fg:x="3236"/></g><g><title>_rjem_je_sdallocx_default (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.334%" y="997" fill="#EF4211" fg:w="2" fg:x="3236"/></g><g><title>isfree (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.334%" y="981" fill="#D98415" fg:w="2" fg:x="3236"/></g><g><title>isdalloct (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.334%" y="965" fill="#FCCA15" fg:w="2" fg:x="3236"/></g><g><title>arena_sdalloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.334%" y="949" fill="#E96224" fg:w="2" fg:x="3236"/></g><g><title>tcache_dalloc_small (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.334%" y="933" fill="#D89936" fg:w="2" fg:x="3236"/></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.334%" y="917" fill="#FA6307" fg:w="2" fg:x="3236"/></g><g><title>tcache_bin_flush_bottom (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.334%" y="901" fill="#CF3832" fg:w="2" fg:x="3236"/></g><g><title>tcache_bin_flush_impl (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.334%" y="885" fill="#F43D22" fg:w="2" fg:x="3236"/></g><g><title>_rjem_je_arena_slab_dalloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.334%" y="869" fill="#F13226" fg:w="2" fg:x="3236"/></g><g><title>pac_dalloc_impl (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.334%" y="853" fill="#D4A61E" fg:w="2" fg:x="3236"/></g><g><title>_rjem_je_extent_record (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.334%" y="837" fill="#F97F20" fg:w="2" fg:x="3236"/></g><g><title>extent_try_coalesce_large (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.334%" y="821" fill="#D16700" fg:w="2" fg:x="3236"/></g><g><title>extent_try_coalesce_impl (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.334%" y="805" fill="#EED133" fg:w="2" fg:x="3236"/></g><g><title>extent_coalesce (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.354%" y="789" fill="#ED3817" fg:w="1" fg:x="3237"/></g><g><title>extent_merge_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.354%" y="773" fill="#D7992E" fg:w="1" fg:x="3237"/></g><g><title>_rjem_je_edata_cache_put (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.354%" y="757" fill="#E0311F" fg:w="1" fg:x="3237"/></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.354%" y="741" fill="#FA122A" fg:w="1" fg:x="3237"/></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.354%" y="725" fill="#D7B027" fg:w="1" fg:x="3237"/></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.354%" y="709" fill="#DF4D1D" fg:w="1" fg:x="3237"/></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.374%" y="1077" fill="#EA5E34" fg:w="2" fg:x="3238"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,alloc::string::String&gt;&gt; (11 samples, 0.22%)</title><rect width=".222%" height="15" x="65.213%" y="1205" fill="#DC9A32" fg:w="11" fg:x="3230"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.22%)</title><rect width=".222%" height="15" x="65.213%" y="1189" fill="#D40B0A" fg:w="11" fg:x="3230"/></g><g><title>core::mem::drop (11 samples, 0.22%)</title><rect width=".222%" height="15" x="65.213%" y="1173" fill="#CDA613" fg:w="11" fg:x="3230"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,alloc::string::String&gt;&gt; (11 samples, 0.22%)</title><rect width=".222%" height="15" x="65.213%" y="1157" fill="#F4C610" fg:w="11" fg:x="3230"/></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.22%)</title><rect width=".222%" height="15" x="65.213%" y="1141" fill="#DB450C" fg:w="11" fg:x="3230"/></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (6 samples, 0.12%)</title><rect width=".121%" height="15" x="65.314%" y="1125" fill="#F51E07" fg:w="6" fg:x="3235"/></g><g><title>?? (5 samples, 0.10%)</title><rect width=".101%" height="15" x="65.334%" y="1109" fill="#DADD30" fg:w="5" fg:x="3236"/></g><g><title>?? (5 samples, 0.10%)</title><rect width=".101%" height="15" x="65.334%" y="1093" fill="#D8420F" fg:w="5" fg:x="3236"/></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.415%" y="1077" fill="#E27A32" fg:w="1" fg:x="3240"/></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.415%" y="1061" fill="#EF9C10" fg:w="1" fg:x="3240"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.415%" y="1045" fill="#E01B26" fg:w="1" fg:x="3240"/></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.415%" y="1029" fill="#E0271B" fg:w="1" fg:x="3240"/></g><g><title>cache_bin_finish_flush (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.435%" y="981" fill="#D75C1D" fg:w="1" fg:x="3241"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.435%" y="965" fill="#CF9F10" fg:w="1" fg:x="3241"/></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.455%" y="965" fill="#EEA32F" fg:w="1" fg:x="3242"/></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.455%" y="949" fill="#DB5B31" fg:w="1" fg:x="3242"/></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.455%" y="933" fill="#E3A71F" fg:w="1" fg:x="3242"/></g><g><title>_rjem_je_sdallocx_default (3 samples, 0.06%)</title><rect width=".061%" height="15" x="65.435%" y="1093" fill="#EA5036" fg:w="3" fg:x="3241"/></g><g><title>isfree (3 samples, 0.06%)</title><rect width=".061%" height="15" x="65.435%" y="1077" fill="#D47202" fg:w="3" fg:x="3241"/></g><g><title>isdalloct (3 samples, 0.06%)</title><rect width=".061%" height="15" x="65.435%" y="1061" fill="#EA3218" fg:w="3" fg:x="3241"/></g><g><title>arena_sdalloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="65.435%" y="1045" fill="#DD4408" fg:w="3" fg:x="3241"/></g><g><title>tcache_dalloc_small (3 samples, 0.06%)</title><rect width=".061%" height="15" x="65.435%" y="1029" fill="#FEB41F" fg:w="3" fg:x="3241"/></g><g><title>_rjem_je_tcache_bin_flush_small (3 samples, 0.06%)</title><rect width=".061%" height="15" x="65.435%" y="1013" fill="#F78232" fg:w="3" fg:x="3241"/></g><g><title>tcache_bin_flush_bottom (3 samples, 0.06%)</title><rect width=".061%" height="15" x="65.435%" y="997" fill="#D36D04" fg:w="3" fg:x="3241"/></g><g><title>tcache_bin_flush_impl (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.455%" y="981" fill="#EE3215" fg:w="2" fg:x="3242"/></g><g><title>arena_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.475%" y="965" fill="#E1392D" fg:w="1" fg:x="3243"/></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.496%" y="1093" fill="#D1C432" fg:w="1" fg:x="3244"/></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.496%" y="1077" fill="#F28C0D" fg:w="1" fg:x="3244"/></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.496%" y="1061" fill="#D96F07" fg:w="1" fg:x="3244"/></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.536%" y="821" fill="#FDC133" fg:w="1" fg:x="3246"/></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.536%" y="805" fill="#FC461D" fg:w="1" fg:x="3246"/></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.536%" y="789" fill="#E87F0C" fg:w="1" fg:x="3246"/></g><g><title>extent_deactivate_locked (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.536%" y="773" fill="#D3B415" fg:w="1" fg:x="3246"/></g><g><title>extent_deactivate_locked_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.536%" y="757" fill="#E5480D" fg:w="1" fg:x="3246"/></g><g><title>_rjem_je_eset_insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.536%" y="741" fill="#F0D331" fg:w="1" fg:x="3246"/></g><g><title>_rjem_je_edata_heap_insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.536%" y="725" fill="#DB9528" fg:w="1" fg:x="3246"/></g><g><title>rtree_leaf_elm_lookup (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.576%" y="789" fill="#D27F2E" fg:w="2" fg:x="3248"/></g><g><title>rtree_leafkey (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.597%" y="773" fill="#DC6A07" fg:w="1" fg:x="3249"/></g><g><title>_rjem_je_sdallocx_default (5 samples, 0.10%)</title><rect width=".101%" height="15" x="65.536%" y="949" fill="#F91F16" fg:w="5" fg:x="3246"/></g><g><title>isfree (5 samples, 0.10%)</title><rect width=".101%" height="15" x="65.536%" y="933" fill="#FD0131" fg:w="5" fg:x="3246"/></g><g><title>isdalloct (5 samples, 0.10%)</title><rect width=".101%" height="15" x="65.536%" y="917" fill="#E39021" fg:w="5" fg:x="3246"/></g><g><title>arena_sdalloc (5 samples, 0.10%)</title><rect width=".101%" height="15" x="65.536%" y="901" fill="#F9A32C" fg:w="5" fg:x="3246"/></g><g><title>tcache_dalloc_small (5 samples, 0.10%)</title><rect width=".101%" height="15" x="65.536%" y="885" fill="#EA0F27" fg:w="5" fg:x="3246"/></g><g><title>_rjem_je_tcache_bin_flush_small (5 samples, 0.10%)</title><rect width=".101%" height="15" x="65.536%" y="869" fill="#CF4210" fg:w="5" fg:x="3246"/></g><g><title>tcache_bin_flush_bottom (5 samples, 0.10%)</title><rect width=".101%" height="15" x="65.536%" y="853" fill="#E97018" fg:w="5" fg:x="3246"/></g><g><title>tcache_bin_flush_impl (5 samples, 0.10%)</title><rect width=".101%" height="15" x="65.536%" y="837" fill="#E65A16" fg:w="5" fg:x="3246"/></g><g><title>tcache_bin_flush_edatas_lookup (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.556%" y="821" fill="#E53D0D" fg:w="4" fg:x="3247"/></g><g><title>emap_edata_lookup_batch (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.556%" y="805" fill="#E13918" fg:w="4" fg:x="3247"/></g><g><title>tcache_bin_flush_metadata_visitor (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.617%" y="789" fill="#D0A930" fg:w="1" fg:x="3250"/></g><g><title>util_prefetch_write_range (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.617%" y="773" fill="#F4DA33" fg:w="1" fg:x="3250"/></g><g><title>util_prefetch_write (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.617%" y="757" fill="#D6940A" fg:w="1" fg:x="3250"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.14%)</title><rect width=".141%" height="15" x="65.536%" y="1013" fill="#E1AE1B" fg:w="7" fg:x="3246"/></g><g><title>alloc::alloc::dealloc (7 samples, 0.14%)</title><rect width=".141%" height="15" x="65.536%" y="997" fill="#E6601A" fg:w="7" fg:x="3246"/></g><g><title>__rust_dealloc (7 samples, 0.14%)</title><rect width=".141%" height="15" x="65.536%" y="981" fill="#E80A1E" fg:w="7" fg:x="3246"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (7 samples, 0.14%)</title><rect width=".141%" height="15" x="65.536%" y="965" fill="#DE0832" fg:w="7" fg:x="3246"/></g><g><title>_rjem_sdallocx (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.637%" y="949" fill="#D5511B" fg:w="2" fg:x="3251"/></g><g><title>free_fastpath (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.637%" y="933" fill="#F5320A" fg:w="2" fg:x="3251"/></g><g><title>cache_bin_dalloc_easy (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.657%" y="917" fill="#D86412" fg:w="1" fg:x="3252"/></g><g><title>cache_bin_full (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.657%" y="901" fill="#EC9336" fg:w="1" fg:x="3252"/></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (8 samples, 0.16%)</title><rect width=".162%" height="15" x="65.536%" y="1077" fill="#CD8F1A" fg:w="8" fg:x="3246"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8 samples, 0.16%)</title><rect width=".162%" height="15" x="65.536%" y="1061" fill="#EC1A09" fg:w="8" fg:x="3246"/></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8 samples, 0.16%)</title><rect width=".162%" height="15" x="65.536%" y="1045" fill="#DDA535" fg:w="8" fg:x="3246"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.16%)</title><rect width=".162%" height="15" x="65.536%" y="1029" fill="#D66E11" fg:w="8" fg:x="3246"/></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Event&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.677%" y="1013" fill="#EDC50C" fg:w="1" fg:x="3253"/></g><g><title>_rjem_je_arena_dalloc_bin_locked_handle_newly_empty (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.698%" y="821" fill="#CD5411" fg:w="1" fg:x="3254"/></g><g><title>arena_dissociate_bin_slab (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.698%" y="805" fill="#ED122D" fg:w="1" fg:x="3254"/></g><g><title>arena_bin_slabs_nonfull_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.698%" y="789" fill="#DD570E" fg:w="1" fg:x="3254"/></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.698%" y="773" fill="#EEBA0F" fg:w="1" fg:x="3254"/></g><g><title>ph_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.698%" y="757" fill="#D0730B" fg:w="1" fg:x="3254"/></g><g><title>phn_prev_set (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.698%" y="741" fill="#FEAF00" fg:w="1" fg:x="3254"/></g><g><title>phn_link_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.698%" y="725" fill="#E3182A" fg:w="1" fg:x="3254"/></g><g><title>arena_dalloc_bin_locked_step (2 samples, 0.04%)</title><rect width=".04%" height="15" x="65.698%" y="837" fill="#DFD325" fg:w="2" fg:x="3254"/></g><g><title>edata_nfree_inc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.718%" y="821" fill="#EB311B" fg:w="1" fg:x="3255"/></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.738%" y="837" fill="#FE6133" fg:w="1" fg:x="3256"/></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.738%" y="821" fill="#F93328" fg:w="1" fg:x="3256"/></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.738%" y="805" fill="#D2802D" fg:w="1" fg:x="3256"/></g><g><title>rtree_leaf_elm_bits_read (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.738%" y="789" fill="#E08932" fg:w="1" fg:x="3256"/></g><g><title>atomic_load_p (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.738%" y="773" fill="#F20F09" fg:w="1" fg:x="3256"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.698%" y="1077" fill="#E9BB29" fg:w="4" fg:x="3254"/></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.698%" y="1061" fill="#E3021D" fg:w="4" fg:x="3254"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.698%" y="1045" fill="#DE4603" fg:w="4" fg:x="3254"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.698%" y="1029" fill="#D50B2A" fg:w="4" fg:x="3254"/></g><g><title>alloc::alloc::dealloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.698%" y="1013" fill="#E19609" fg:w="4" fg:x="3254"/></g><g><title>__rust_dealloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.698%" y="997" fill="#E6A22D" fg:w="4" fg:x="3254"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.698%" y="981" fill="#DE0E34" fg:w="4" fg:x="3254"/></g><g><title>_rjem_je_sdallocx_default (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.698%" y="965" fill="#FEC60E" fg:w="4" fg:x="3254"/></g><g><title>isfree (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.698%" y="949" fill="#DCD91E" fg:w="4" fg:x="3254"/></g><g><title>isdalloct (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.698%" y="933" fill="#D79229" fg:w="4" fg:x="3254"/></g><g><title>arena_sdalloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.698%" y="917" fill="#D91B24" fg:w="4" fg:x="3254"/></g><g><title>tcache_dalloc_small (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.698%" y="901" fill="#DBDA27" fg:w="4" fg:x="3254"/></g><g><title>_rjem_je_tcache_bin_flush_small (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.698%" y="885" fill="#DB042A" fg:w="4" fg:x="3254"/></g><g><title>tcache_bin_flush_bottom (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.698%" y="869" fill="#F97724" fg:w="4" fg:x="3254"/></g><g><title>tcache_bin_flush_impl (4 samples, 0.08%)</title><rect width=".081%" height="15" x="65.698%" y="853" fill="#D11721" fg:w="4" fg:x="3254"/></g><g><title>tcache_bin_flush_match (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.758%" y="837" fill="#D30A00" fg:w="1" fg:x="3257"/></g><g><title>edata_binshard_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="65.758%" y="821" fill="#D06325" fg:w="1" fg:x="3257"/></g><g><title>arena_dalloc_bin_locked_step (3 samples, 0.06%)</title><rect width=".061%" height="15" x="66.121%" y="805" fill="#D5841F" fg:w="3" fg:x="3275"/></g><g><title>edata_nfree_inc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="66.121%" y="789" fill="#F38128" fg:w="3" fg:x="3275"/></g><g><title>_rjem_je_sdallocx_default (4 samples, 0.08%)</title><rect width=".081%" height="15" x="66.121%" y="933" fill="#D24221" fg:w="4" fg:x="3275"/></g><g><title>isfree (4 samples, 0.08%)</title><rect width=".081%" height="15" x="66.121%" y="917" fill="#D1BD04" fg:w="4" fg:x="3275"/></g><g><title>isdalloct (4 samples, 0.08%)</title><rect width=".081%" height="15" x="66.121%" y="901" fill="#D66B25" fg:w="4" fg:x="3275"/></g><g><title>arena_sdalloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="66.121%" y="885" fill="#F55836" fg:w="4" fg:x="3275"/></g><g><title>tcache_dalloc_small (4 samples, 0.08%)</title><rect width=".081%" height="15" x="66.121%" y="869" fill="#CD9214" fg:w="4" fg:x="3275"/></g><g><title>_rjem_je_tcache_bin_flush_small (4 samples, 0.08%)</title><rect width=".081%" height="15" x="66.121%" y="853" fill="#DCA119" fg:w="4" fg:x="3275"/></g><g><title>tcache_bin_flush_bottom (4 samples, 0.08%)</title><rect width=".081%" height="15" x="66.121%" y="837" fill="#D7980F" fg:w="4" fg:x="3275"/></g><g><title>tcache_bin_flush_impl (4 samples, 0.08%)</title><rect width=".081%" height="15" x="66.121%" y="821" fill="#E9C02C" fg:w="4" fg:x="3275"/></g><g><title>arena_decay_ticks (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.182%" y="805" fill="#F0AA2E" fg:w="1" fg:x="3278"/></g><g><title>_rjem_je_arena_decay (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.182%" y="789" fill="#CF6821" fg:w="1" fg:x="3278"/></g><g><title>arena_decay_dirty (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.182%" y="773" fill="#DB1527" fg:w="1" fg:x="3278"/></g><g><title>arena_decay_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.182%" y="757" fill="#D6851D" fg:w="1" fg:x="3278"/></g><g><title>malloc_mutex_trylock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.182%" y="741" fill="#E25D06" fg:w="1" fg:x="3278"/></g><g><title>mutex_owner_stats_update (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.182%" y="725" fill="#FCDE22" fg:w="1" fg:x="3278"/></g><g><title>?? (39 samples, 0.79%)</title><rect width=".787%" height="15" x="65.435%" y="1125" fill="#FC5C30" fg:w="39" fg:x="3241"/></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::CitmCatalog&gt; (39 samples, 0.79%)</title><rect width=".787%" height="15" x="65.435%" y="1109" fill="#F5DF18" fg:w="39" fg:x="3241"/></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Event&gt; (35 samples, 0.71%)</title><rect width=".707%" height="15" x="65.516%" y="1093" fill="#CDB003" fg:w="35" fg:x="3245"/></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (22 samples, 0.44%)</title><rect width=".444%" height="15" x="65.778%" y="1077" fill="#EB970F" fg:w="22" fg:x="3258"/></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.10%)</title><rect width=".101%" height="15" x="66.121%" y="1061" fill="#EDD10B" fg:w="5" fg:x="3275"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.10%)</title><rect width=".101%" height="15" x="66.121%" y="1045" fill="#F3E318" fg:w="5" fg:x="3275"/></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.10%)</title><rect width=".101%" height="15" x="66.121%" y="1029" fill="#EFC110" fg:w="5" fg:x="3275"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect width=".101%" height="15" x="66.121%" y="1013" fill="#E71B09" fg:w="5" fg:x="3275"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.10%)</title><rect width=".101%" height="15" x="66.121%" y="997" fill="#DBA90A" fg:w="5" fg:x="3275"/></g><g><title>alloc::alloc::dealloc (5 samples, 0.10%)</title><rect width=".101%" height="15" x="66.121%" y="981" fill="#F4E52B" fg:w="5" fg:x="3275"/></g><g><title>__rust_dealloc (5 samples, 0.10%)</title><rect width=".101%" height="15" x="66.121%" y="965" fill="#FE2614" fg:w="5" fg:x="3275"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (5 samples, 0.10%)</title><rect width=".101%" height="15" x="66.121%" y="949" fill="#FA2F1E" fg:w="5" fg:x="3275"/></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.202%" y="933" fill="#E07C24" fg:w="1" fg:x="3279"/></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.202%" y="917" fill="#F64433" fg:w="1" fg:x="3279"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.243%" y="1077" fill="#FD2B31" fg:w="1" fg:x="3281"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.243%" y="1061" fill="#DB3624" fg:w="1" fg:x="3281"/></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.243%" y="1045" fill="#E38522" fg:w="1" fg:x="3281"/></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.243%" y="1029" fill="#F7E30F" fg:w="1" fg:x="3281"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.243%" y="1013" fill="#E5600E" fg:w="1" fg:x="3281"/></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.243%" y="997" fill="#DC4F11" fg:w="1" fg:x="3281"/></g><g><title>isfree (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.243%" y="981" fill="#CD8335" fg:w="1" fg:x="3281"/></g><g><title>isdalloct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.243%" y="965" fill="#D1321D" fg:w="1" fg:x="3281"/></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.243%" y="949" fill="#F5562E" fg:w="1" fg:x="3281"/></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.243%" y="933" fill="#EB422E" fg:w="1" fg:x="3281"/></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.243%" y="917" fill="#E8941F" fg:w="1" fg:x="3281"/></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.243%" y="901" fill="#D99508" fg:w="1" fg:x="3281"/></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.243%" y="885" fill="#D1B70B" fg:w="1" fg:x="3281"/></g><g><title>arena_dalloc_bin_locked_step (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.243%" y="869" fill="#D03714" fg:w="1" fg:x="3281"/></g><g><title>edata_nfree_inc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.243%" y="853" fill="#DA270E" fg:w="1" fg:x="3281"/></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.263%" y="1077" fill="#D8A921" fg:w="1" fg:x="3282"/></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.303%" y="693" fill="#E95018" fg:w="1" fg:x="3284"/></g><g><title>_rjem_je_eset_remove (2 samples, 0.04%)</title><rect width=".04%" height="15" x="66.303%" y="725" fill="#D5B31F" fg:w="2" fg:x="3284"/></g><g><title>_rjem_je_edata_heap_remove (2 samples, 0.04%)</title><rect width=".04%" height="15" x="66.303%" y="709" fill="#D11305" fg:w="2" fg:x="3284"/></g><g><title>ph_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.323%" y="693" fill="#DB1223" fg:w="1" fg:x="3285"/></g><g><title>phn_prev_set (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.323%" y="677" fill="#D1A910" fg:w="1" fg:x="3285"/></g><g><title>phn_link_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.323%" y="661" fill="#F55A33" fg:w="1" fg:x="3285"/></g><g><title>_rjem_je_edata_cache_put (2 samples, 0.04%)</title><rect width=".04%" height="15" x="66.364%" y="709" fill="#DC632D" fg:w="2" fg:x="3287"/></g><g><title>_rjem_je_edata_avail_insert (2 samples, 0.04%)</title><rect width=".04%" height="15" x="66.364%" y="693" fill="#F95919" fg:w="2" fg:x="3287"/></g><g><title>ph_insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.384%" y="677" fill="#EFC100" fg:w="1" fg:x="3288"/></g><g><title>_rjem_je_emap_merge_commit (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.404%" y="709" fill="#E77E01" fg:w="1" fg:x="3289"/></g><g><title>emap_rtree_write_acquired (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.404%" y="693" fill="#F3A603" fg:w="1" fg:x="3289"/></g><g><title>?? (8 samples, 0.16%)</title><rect width=".162%" height="15" x="66.283%" y="1029" fill="#DF1622" fg:w="8" fg:x="3283"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.16%)</title><rect width=".162%" height="15" x="66.283%" y="1013" fill="#FB3433" fg:w="8" fg:x="3283"/></g><g><title>alloc::alloc::dealloc (8 samples, 0.16%)</title><rect width=".162%" height="15" x="66.283%" y="997" fill="#DDA51C" fg:w="8" fg:x="3283"/></g><g><title>__rust_dealloc (8 samples, 0.16%)</title><rect width=".162%" height="15" x="66.283%" y="981" fill="#DA792F" fg:w="8" fg:x="3283"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (8 samples, 0.16%)</title><rect width=".162%" height="15" x="66.283%" y="965" fill="#D17809" fg:w="8" fg:x="3283"/></g><g><title>_rjem_je_sdallocx_default (8 samples, 0.16%)</title><rect width=".162%" height="15" x="66.283%" y="949" fill="#EC440C" fg:w="8" fg:x="3283"/></g><g><title>isfree (8 samples, 0.16%)</title><rect width=".162%" height="15" x="66.283%" y="933" fill="#E1C21A" fg:w="8" fg:x="3283"/></g><g><title>isdalloct (8 samples, 0.16%)</title><rect width=".162%" height="15" x="66.283%" y="917" fill="#E75427" fg:w="8" fg:x="3283"/></g><g><title>arena_sdalloc (8 samples, 0.16%)</title><rect width=".162%" height="15" x="66.283%" y="901" fill="#D20B2D" fg:w="8" fg:x="3283"/></g><g><title>tcache_dalloc_small (8 samples, 0.16%)</title><rect width=".162%" height="15" x="66.283%" y="885" fill="#E03634" fg:w="8" fg:x="3283"/></g><g><title>_rjem_je_tcache_bin_flush_small (8 samples, 0.16%)</title><rect width=".162%" height="15" x="66.283%" y="869" fill="#EE660E" fg:w="8" fg:x="3283"/></g><g><title>tcache_bin_flush_bottom (8 samples, 0.16%)</title><rect width=".162%" height="15" x="66.283%" y="853" fill="#F3A034" fg:w="8" fg:x="3283"/></g><g><title>tcache_bin_flush_impl (8 samples, 0.16%)</title><rect width=".162%" height="15" x="66.283%" y="837" fill="#D87213" fg:w="8" fg:x="3283"/></g><g><title>_rjem_je_arena_slab_dalloc (8 samples, 0.16%)</title><rect width=".162%" height="15" x="66.283%" y="821" fill="#F4A625" fg:w="8" fg:x="3283"/></g><g><title>pac_dalloc_impl (8 samples, 0.16%)</title><rect width=".162%" height="15" x="66.283%" y="805" fill="#F61D2C" fg:w="8" fg:x="3283"/></g><g><title>_rjem_je_extent_record (8 samples, 0.16%)</title><rect width=".162%" height="15" x="66.283%" y="789" fill="#D73835" fg:w="8" fg:x="3283"/></g><g><title>extent_try_coalesce_large (8 samples, 0.16%)</title><rect width=".162%" height="15" x="66.283%" y="773" fill="#D93C02" fg:w="8" fg:x="3283"/></g><g><title>extent_try_coalesce_impl (7 samples, 0.14%)</title><rect width=".141%" height="15" x="66.303%" y="757" fill="#CF1A18" fg:w="7" fg:x="3284"/></g><g><title>extent_coalesce (7 samples, 0.14%)</title><rect width=".141%" height="15" x="66.303%" y="741" fill="#FCD20F" fg:w="7" fg:x="3284"/></g><g><title>extent_merge_impl (5 samples, 0.10%)</title><rect width=".101%" height="15" x="66.344%" y="725" fill="#FDD11A" fg:w="5" fg:x="3286"/></g><g><title>_rjem_je_emap_merge_prepare (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.424%" y="709" fill="#EEAA0E" fg:w="1" fg:x="3290"/></g><g><title>emap_rtree_leaf_elms_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.424%" y="693" fill="#D8B20F" fg:w="1" fg:x="3290"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,json_benchmark::copy::citm_catalog::Event&gt;&gt; (51 samples, 1.03%)</title><rect width="1.03%" height="15" x="65.435%" y="1205" fill="#FAC502" fg:w="51" fg:x="3241"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 1.03%)</title><rect width="1.03%" height="15" x="65.435%" y="1189" fill="#D4462A" fg:w="51" fg:x="3241"/></g><g><title>core::mem::drop (51 samples, 1.03%)</title><rect width="1.03%" height="15" x="65.435%" y="1173" fill="#E3D509" fg:w="51" fg:x="3241"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,json_benchmark::copy::citm_catalog::Event&gt;&gt; (51 samples, 1.03%)</title><rect width="1.03%" height="15" x="65.435%" y="1157" fill="#F56319" fg:w="51" fg:x="3241"/></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 1.03%)</title><rect width="1.03%" height="15" x="65.435%" y="1141" fill="#FA521D" fg:w="51" fg:x="3241"/></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (12 samples, 0.24%)</title><rect width=".242%" height="15" x="66.222%" y="1125" fill="#F1E236" fg:w="12" fg:x="3280"/></g><g><title>?? (11 samples, 0.22%)</title><rect width=".222%" height="15" x="66.243%" y="1109" fill="#DD6329" fg:w="11" fg:x="3281"/></g><g><title>?? (11 samples, 0.22%)</title><rect width=".222%" height="15" x="66.243%" y="1093" fill="#D55A15" fg:w="11" fg:x="3281"/></g><g><title>alloc::collections::btree::mem::replace (9 samples, 0.18%)</title><rect width=".182%" height="15" x="66.283%" y="1077" fill="#CDD018" fg:w="9" fg:x="3283"/></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (9 samples, 0.18%)</title><rect width=".182%" height="15" x="66.283%" y="1061" fill="#F61F0C" fg:w="9" fg:x="3283"/></g><g><title>?? (9 samples, 0.18%)</title><rect width=".182%" height="15" x="66.283%" y="1045" fill="#D59A06" fg:w="9" fg:x="3283"/></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.445%" y="1029" fill="#DEA31D" fg:w="1" fg:x="3291"/></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.485%" y="1029" fill="#E3C908" fg:w="1" fg:x="3293"/></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.485%" y="1013" fill="#E90920" fg:w="1" fg:x="3293"/></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.485%" y="997" fill="#D93618" fg:w="1" fg:x="3293"/></g><g><title>extent_deactivate_locked (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.485%" y="981" fill="#EBC000" fg:w="1" fg:x="3293"/></g><g><title>extent_deactivate_locked_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.485%" y="965" fill="#EB2D09" fg:w="1" fg:x="3293"/></g><g><title>_rjem_je_eset_insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.485%" y="949" fill="#F62A28" fg:w="1" fg:x="3293"/></g><g><title>edata_list_inactive_append (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.485%" y="933" fill="#F86F18" fg:w="1" fg:x="3293"/></g><g><title>bitmap_unset (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.505%" y="1013" fill="#F94116" fg:w="1" fg:x="3294"/></g><g><title>arena_dalloc_bin_locked_step (2 samples, 0.04%)</title><rect width=".04%" height="15" x="66.505%" y="1029" fill="#EE6F33" fg:w="2" fg:x="3294"/></g><g><title>edata_nfree_inc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.525%" y="1013" fill="#FA7616" fg:w="1" fg:x="3295"/></g><g><title>_rjem_je_sdallocx_default (5 samples, 0.10%)</title><rect width=".101%" height="15" x="66.485%" y="1157" fill="#EA541A" fg:w="5" fg:x="3293"/></g><g><title>isfree (5 samples, 0.10%)</title><rect width=".101%" height="15" x="66.485%" y="1141" fill="#F3AC0C" fg:w="5" fg:x="3293"/></g><g><title>isdalloct (5 samples, 0.10%)</title><rect width=".101%" height="15" x="66.485%" y="1125" fill="#EC9631" fg:w="5" fg:x="3293"/></g><g><title>arena_sdalloc (5 samples, 0.10%)</title><rect width=".101%" height="15" x="66.485%" y="1109" fill="#E1C51A" fg:w="5" fg:x="3293"/></g><g><title>tcache_dalloc_small (5 samples, 0.10%)</title><rect width=".101%" height="15" x="66.485%" y="1093" fill="#D6112A" fg:w="5" fg:x="3293"/></g><g><title>_rjem_je_tcache_bin_flush_small (5 samples, 0.10%)</title><rect width=".101%" height="15" x="66.485%" y="1077" fill="#E0A528" fg:w="5" fg:x="3293"/></g><g><title>tcache_bin_flush_bottom (5 samples, 0.10%)</title><rect width=".101%" height="15" x="66.485%" y="1061" fill="#F66404" fg:w="5" fg:x="3293"/></g><g><title>tcache_bin_flush_impl (5 samples, 0.10%)</title><rect width=".101%" height="15" x="66.485%" y="1045" fill="#DE6700" fg:w="5" fg:x="3293"/></g><g><title>tcache_bin_flush_match (2 samples, 0.04%)</title><rect width=".04%" height="15" x="66.546%" y="1029" fill="#E3BD1A" fg:w="2" fg:x="3296"/></g><g><title>edata_binshard_get (2 samples, 0.04%)</title><rect width=".04%" height="15" x="66.546%" y="1013" fill="#D6CA11" fg:w="2" fg:x="3296"/></g><g><title>_rjem_sdallocx (2 samples, 0.04%)</title><rect width=".04%" height="15" x="66.586%" y="1157" fill="#E56F03" fg:w="2" fg:x="3298"/></g><g><title>free_fastpath (2 samples, 0.04%)</title><rect width=".04%" height="15" x="66.586%" y="1141" fill="#E5AC0F" fg:w="2" fg:x="3298"/></g><g><title>cache_bin_dalloc_easy (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.606%" y="1125" fill="#E6E023" fg:w="1" fg:x="3299"/></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.647%" y="901" fill="#FB8D06" fg:w="1" fg:x="3301"/></g><g><title>_rjem_je_pa_dalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.647%" y="885" fill="#E1D006" fg:w="1" fg:x="3301"/></g><g><title>_rjem_je_emap_deregister_interior (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.647%" y="869" fill="#F6B510" fg:w="1" fg:x="3301"/></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.667%" y="901" fill="#E38124" fg:w="1" fg:x="3302"/></g><g><title>arena_dalloc_bin_locked_step (3 samples, 0.06%)</title><rect width=".061%" height="15" x="66.687%" y="901" fill="#F87518" fg:w="3" fg:x="3303"/></g><g><title>edata_nfree_inc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="66.687%" y="885" fill="#D6B923" fg:w="3" fg:x="3303"/></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.747%" y="869" fill="#EC9622" fg:w="1" fg:x="3306"/></g><g><title>_rjem_je_sdallocx_default (7 samples, 0.14%)</title><rect width=".141%" height="15" x="66.647%" y="1029" fill="#F3E41B" fg:w="7" fg:x="3301"/></g><g><title>isfree (7 samples, 0.14%)</title><rect width=".141%" height="15" x="66.647%" y="1013" fill="#F54D2C" fg:w="7" fg:x="3301"/></g><g><title>isdalloct (7 samples, 0.14%)</title><rect width=".141%" height="15" x="66.647%" y="997" fill="#EBD62A" fg:w="7" fg:x="3301"/></g><g><title>arena_sdalloc (7 samples, 0.14%)</title><rect width=".141%" height="15" x="66.647%" y="981" fill="#DD4A03" fg:w="7" fg:x="3301"/></g><g><title>tcache_dalloc_small (7 samples, 0.14%)</title><rect width=".141%" height="15" x="66.647%" y="965" fill="#CE791D" fg:w="7" fg:x="3301"/></g><g><title>_rjem_je_tcache_bin_flush_small (7 samples, 0.14%)</title><rect width=".141%" height="15" x="66.647%" y="949" fill="#F98335" fg:w="7" fg:x="3301"/></g><g><title>tcache_bin_flush_bottom (7 samples, 0.14%)</title><rect width=".141%" height="15" x="66.647%" y="933" fill="#ECAA1D" fg:w="7" fg:x="3301"/></g><g><title>tcache_bin_flush_impl (7 samples, 0.14%)</title><rect width=".141%" height="15" x="66.647%" y="917" fill="#F7600F" fg:w="7" fg:x="3301"/></g><g><title>tcache_bin_flush_edatas_lookup (2 samples, 0.04%)</title><rect width=".04%" height="15" x="66.747%" y="901" fill="#D3D207" fg:w="2" fg:x="3306"/></g><g><title>emap_edata_lookup_batch (2 samples, 0.04%)</title><rect width=".04%" height="15" x="66.747%" y="885" fill="#F05832" fg:w="2" fg:x="3306"/></g><g><title>tcache_bin_flush_metadata_visitor (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.768%" y="869" fill="#D1E51A" fg:w="1" fg:x="3307"/></g><g><title>util_prefetch_write_range (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.768%" y="853" fill="#D24417" fg:w="1" fg:x="3307"/></g><g><title>util_prefetch_write (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.768%" y="837" fill="#E5B40D" fg:w="1" fg:x="3307"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.24%)</title><rect width=".242%" height="15" x="66.647%" y="1093" fill="#EC352C" fg:w="12" fg:x="3301"/></g><g><title>alloc::alloc::dealloc (12 samples, 0.24%)</title><rect width=".242%" height="15" x="66.647%" y="1077" fill="#F4D61D" fg:w="12" fg:x="3301"/></g><g><title>__rust_dealloc (12 samples, 0.24%)</title><rect width=".242%" height="15" x="66.647%" y="1061" fill="#DC4B1D" fg:w="12" fg:x="3301"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.24%)</title><rect width=".242%" height="15" x="66.647%" y="1045" fill="#D6B725" fg:w="12" fg:x="3301"/></g><g><title>_rjem_sdallocx (5 samples, 0.10%)</title><rect width=".101%" height="15" x="66.788%" y="1029" fill="#EF751D" fg:w="5" fg:x="3308"/></g><g><title>free_fastpath (3 samples, 0.06%)</title><rect width=".061%" height="15" x="66.828%" y="1013" fill="#EDAB23" fg:w="3" fg:x="3310"/></g><g><title>cache_bin_dalloc_easy (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.869%" y="997" fill="#E5B235" fg:w="1" fg:x="3312"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.889%" y="1093" fill="#D26613" fg:w="1" fg:x="3313"/></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.889%" y="1077" fill="#EB7F16" fg:w="1" fg:x="3313"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::Price&gt;&gt; (14 samples, 0.28%)</title><rect width=".283%" height="15" x="66.647%" y="1141" fill="#F41F1F" fg:w="14" fg:x="3301"/></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::Price&gt;&gt; (14 samples, 0.28%)</title><rect width=".283%" height="15" x="66.647%" y="1125" fill="#E72B15" fg:w="14" fg:x="3301"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.28%)</title><rect width=".283%" height="15" x="66.647%" y="1109" fill="#D98323" fg:w="14" fg:x="3301"/></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Performance&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="66.909%" y="1093" fill="#DD9504" fg:w="1" fg:x="3314"/></g><g><title>cache_bin_finish_flush (2 samples, 0.04%)</title><rect width=".04%" height="15" x="67.01%" y="853" fill="#E8AA1C" fg:w="2" fg:x="3319"/></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect width=".04%" height="15" x="67.01%" y="837" fill="#EE380A" fg:w="2" fg:x="3319"/></g><g><title>_rjem_je_pa_dalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.07%" y="821" fill="#EBC40E" fg:w="1" fg:x="3322"/></g><g><title>pa_get_pai (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.07%" y="805" fill="#D82D30" fg:w="1" fg:x="3322"/></g><g><title>_rjem_je_edata_heap_insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.111%" y="741" fill="#EED511" fg:w="1" fg:x="3324"/></g><g><title>ph_insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.111%" y="725" fill="#D40D02" fg:w="1" fg:x="3324"/></g><g><title>ph_try_aux_merge_pair (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.111%" y="709" fill="#F07214" fg:w="1" fg:x="3324"/></g><g><title>phn_merge (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.111%" y="693" fill="#E42928" fg:w="1" fg:x="3324"/></g><g><title>phn_merge_ordered (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.111%" y="677" fill="#F48423" fg:w="1" fg:x="3324"/></g><g><title>phn_lchild_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.111%" y="661" fill="#FDBD04" fg:w="1" fg:x="3324"/></g><g><title>_rjem_je_arena_slab_dalloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="67.07%" y="837" fill="#E02513" fg:w="4" fg:x="3322"/></g><g><title>pac_dalloc_impl (3 samples, 0.06%)</title><rect width=".061%" height="15" x="67.091%" y="821" fill="#EBDF12" fg:w="3" fg:x="3323"/></g><g><title>_rjem_je_extent_record (3 samples, 0.06%)</title><rect width=".061%" height="15" x="67.091%" y="805" fill="#EBA319" fg:w="3" fg:x="3323"/></g><g><title>extent_deactivate_locked (2 samples, 0.04%)</title><rect width=".04%" height="15" x="67.111%" y="789" fill="#D9911C" fg:w="2" fg:x="3324"/></g><g><title>extent_deactivate_locked_impl (2 samples, 0.04%)</title><rect width=".04%" height="15" x="67.111%" y="773" fill="#DFDF20" fg:w="2" fg:x="3324"/></g><g><title>_rjem_je_eset_insert (2 samples, 0.04%)</title><rect width=".04%" height="15" x="67.111%" y="757" fill="#E3BD27" fg:w="2" fg:x="3324"/></g><g><title>edata_list_inactive_append (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.131%" y="741" fill="#F80A16" fg:w="1" fg:x="3325"/></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.151%" y="837" fill="#F82E27" fg:w="1" fg:x="3326"/></g><g><title>arena_bin_lower_slab (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.171%" y="821" fill="#F87130" fg:w="1" fg:x="3327"/></g><g><title>arena_bin_lower_slab (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.171%" y="805" fill="#F51019" fg:w="1" fg:x="3327"/></g><g><title>bitmap_unset (5 samples, 0.10%)</title><rect width=".101%" height="15" x="67.192%" y="821" fill="#F99810" fg:w="5" fg:x="3328"/></g><g><title>arena_dalloc_bin_locked_step (7 samples, 0.14%)</title><rect width=".141%" height="15" x="67.171%" y="837" fill="#FA1001" fg:w="7" fg:x="3327"/></g><g><title>edata_nfree_inc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.293%" y="821" fill="#F98A03" fg:w="1" fg:x="3333"/></g><g><title>arena_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.313%" y="837" fill="#E34729" fg:w="1" fg:x="3334"/></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.333%" y="837" fill="#D1B817" fg:w="1" fg:x="3335"/></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.333%" y="821" fill="#DFD71F" fg:w="1" fg:x="3335"/></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.333%" y="805" fill="#D2921C" fg:w="1" fg:x="3335"/></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.353%" y="837" fill="#D1B729" fg:w="1" fg:x="3336"/></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.353%" y="821" fill="#D1E02D" fg:w="1" fg:x="3336"/></g><g><title>rtree_leaf_elm_lookup (2 samples, 0.04%)</title><rect width=".04%" height="15" x="67.394%" y="805" fill="#E0D133" fg:w="2" fg:x="3338"/></g><g><title>rtree_cache_direct_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.414%" y="789" fill="#DF1127" fg:w="1" fg:x="3339"/></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.434%" y="805" fill="#EACC25" fg:w="1" fg:x="3340"/></g><g><title>rtree_leaf_elm_bits_decode (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.434%" y="789" fill="#EC7805" fg:w="1" fg:x="3340"/></g><g><title>tcache_bin_flush_edatas_lookup (6 samples, 0.12%)</title><rect width=".121%" height="15" x="67.373%" y="837" fill="#F8611B" fg:w="6" fg:x="3337"/></g><g><title>emap_edata_lookup_batch (6 samples, 0.12%)</title><rect width=".121%" height="15" x="67.373%" y="821" fill="#F04211" fg:w="6" fg:x="3337"/></g><g><title>tcache_bin_flush_metadata_visitor (2 samples, 0.04%)</title><rect width=".04%" height="15" x="67.454%" y="805" fill="#D24F03" fg:w="2" fg:x="3341"/></g><g><title>util_prefetch_write_range (2 samples, 0.04%)</title><rect width=".04%" height="15" x="67.454%" y="789" fill="#D6B01B" fg:w="2" fg:x="3341"/></g><g><title>util_prefetch_write (2 samples, 0.04%)</title><rect width=".04%" height="15" x="67.454%" y="773" fill="#EBB903" fg:w="2" fg:x="3341"/></g><g><title>_rjem_je_sdallocx_default (25 samples, 0.50%)</title><rect width=".505%" height="15" x="67.01%" y="965" fill="#E3180C" fg:w="25" fg:x="3319"/></g><g><title>isfree (25 samples, 0.50%)</title><rect width=".505%" height="15" x="67.01%" y="949" fill="#FCA930" fg:w="25" fg:x="3319"/></g><g><title>isdalloct (25 samples, 0.50%)</title><rect width=".505%" height="15" x="67.01%" y="933" fill="#D44101" fg:w="25" fg:x="3319"/></g><g><title>arena_sdalloc (25 samples, 0.50%)</title><rect width=".505%" height="15" x="67.01%" y="917" fill="#F22718" fg:w="25" fg:x="3319"/></g><g><title>tcache_dalloc_small (25 samples, 0.50%)</title><rect width=".505%" height="15" x="67.01%" y="901" fill="#F92017" fg:w="25" fg:x="3319"/></g><g><title>_rjem_je_tcache_bin_flush_small (25 samples, 0.50%)</title><rect width=".505%" height="15" x="67.01%" y="885" fill="#FBC317" fg:w="25" fg:x="3319"/></g><g><title>tcache_bin_flush_bottom (25 samples, 0.50%)</title><rect width=".505%" height="15" x="67.01%" y="869" fill="#ECAE08" fg:w="25" fg:x="3319"/></g><g><title>tcache_bin_flush_impl (23 samples, 0.46%)</title><rect width=".464%" height="15" x="67.05%" y="853" fill="#DCC508" fg:w="23" fg:x="3321"/></g><g><title>tcache_bin_flush_match (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.494%" y="837" fill="#F06C25" fg:w="1" fg:x="3343"/></g><g><title>edata_binshard_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="67.494%" y="821" fill="#E8B018" fg:w="1" fg:x="3343"/></g><g><title>_rjem_sdallocx (2 samples, 0.04%)</title><rect width=".04%" height="15" x="67.595%" y="933" fill="#F3231D" fg:w="2" fg:x="3348"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (36 samples, 0.73%)</title><rect width=".727%" height="15" x="66.99%" y="1029" fill="#D22512" fg:w="36" fg:x="3318"/></g><g><title>alloc::alloc::dealloc (36 samples, 0.73%)</title><rect width=".727%" height="15" x="66.99%" y="1013" fill="#E0B828" fg:w="36" fg:x="3318"/></g><g><title>__rust_dealloc (36 samples, 0.73%)</title><rect width=".727%" height="15" x="66.99%" y="997" fill="#EC271D" fg:w="36" fg:x="3318"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (36 samples, 0.73%)</title><rect width=".727%" height="15" x="66.99%" y="981" fill="#E83027" fg:w="36" fg:x="3318"/></g><g><title>_rjem_sdallocx (10 samples, 0.20%)</title><rect width=".202%" height="15" x="67.515%" y="965" fill="#EC222A" fg:w="10" fg:x="3344"/></g><g><title>free_fastpath (8 samples, 0.16%)</title><rect width=".162%" height="15" x="67.555%" y="949" fill="#F36A25" fg:w="8" fg:x="3346"/></g><g><title>cache_bin_dalloc_easy (4 samples, 0.08%)</title><rect width=".081%" height="15" x="67.636%" y="933" fill="#DA6006" fg:w="4" fg:x="3350"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="67.716%" y="1029" fill="#EB820C" fg:w="2" fg:x="3354"/></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (2 samples, 0.04%)</title><rect width=".04%" height="15" x="67.716%" y="1013" fill="#E75F00" fg:w="2" fg:x="3354"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 1.05%)</title><rect width="1.05%" height="15" x="66.949%" y="1125" fill="#E40C17" fg:w="52" fg:x="3316"/></g><g><title>core::ptr::drop_in_place&lt;[json_benchmark::copy::citm_catalog::SeatCategory]&gt; (52 samples, 1.05%)</title><rect width="1.05%" height="15" x="66.949%" y="1109" fill="#D80C01" fg:w="52" fg:x="3316"/></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt; (50 samples, 1.01%)</title><rect width="1.01%" height="15" x="66.99%" y="1093" fill="#DB3B03" fg:w="50" fg:x="3318"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::Area&gt;&gt; (50 samples, 1.01%)</title><rect width="1.01%" height="15" x="66.99%" y="1077" fill="#D7D02E" fg:w="50" fg:x="3318"/></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::Area&gt;&gt; (50 samples, 1.01%)</title><rect width="1.01%" height="15" x="66.99%" y="1061" fill="#FEE01D" fg:w="50" fg:x="3318"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 1.01%)</title><rect width="1.01%" height="15" x="66.99%" y="1045" fill="#E80E1D" fg:w="50" fg:x="3318"/></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Performance&gt; (12 samples, 0.24%)</title><rect width=".242%" height="15" x="67.757%" y="1029" fill="#D02D34" fg:w="12" fg:x="3356"/></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.019%" y="901" fill="#EABF1C" fg:w="1" fg:x="3369"/></g><g><title>arena_dalloc_bin_locked_step (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.04%" y="901" fill="#F4432B" fg:w="1" fg:x="3370"/></g><g><title>arena_bin_lower_slab (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.04%" y="885" fill="#ECBD18" fg:w="1" fg:x="3370"/></g><g><title>arena_bin_slabs_nonfull_insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.04%" y="869" fill="#EFD621" fg:w="1" fg:x="3370"/></g><g><title>_rjem_je_edata_heap_insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.04%" y="853" fill="#E2B029" fg:w="1" fg:x="3370"/></g><g><title>ph_insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.04%" y="837" fill="#F82F08" fg:w="1" fg:x="3370"/></g><g><title>phn_link_init (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.04%" y="821" fill="#DA512C" fg:w="1" fg:x="3370"/></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.06%" y="901" fill="#D56206" fg:w="1" fg:x="3371"/></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.06%" y="885" fill="#DE5516" fg:w="1" fg:x="3371"/></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.06%" y="869" fill="#EF2E27" fg:w="1" fg:x="3371"/></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.08%" y="901" fill="#ED0C1D" fg:w="1" fg:x="3372"/></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.08%" y="885" fill="#D64D08" fg:w="1" fg:x="3372"/></g><g><title>rtree_leaf_elm_lookup (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.1%" y="869" fill="#D9A825" fg:w="2" fg:x="3373"/></g><g><title>_rjem_je_sdallocx_default (8 samples, 0.16%)</title><rect width=".162%" height="15" x="67.999%" y="1029" fill="#DDD917" fg:w="8" fg:x="3368"/></g><g><title>isfree (8 samples, 0.16%)</title><rect width=".162%" height="15" x="67.999%" y="1013" fill="#F3E524" fg:w="8" fg:x="3368"/></g><g><title>isdalloct (8 samples, 0.16%)</title><rect width=".162%" height="15" x="67.999%" y="997" fill="#FBA328" fg:w="8" fg:x="3368"/></g><g><title>arena_sdalloc (8 samples, 0.16%)</title><rect width=".162%" height="15" x="67.999%" y="981" fill="#EDDE0C" fg:w="8" fg:x="3368"/></g><g><title>tcache_dalloc_small (8 samples, 0.16%)</title><rect width=".162%" height="15" x="67.999%" y="965" fill="#F88406" fg:w="8" fg:x="3368"/></g><g><title>_rjem_je_tcache_bin_flush_small (8 samples, 0.16%)</title><rect width=".162%" height="15" x="67.999%" y="949" fill="#E3A732" fg:w="8" fg:x="3368"/></g><g><title>tcache_bin_flush_bottom (8 samples, 0.16%)</title><rect width=".162%" height="15" x="67.999%" y="933" fill="#F25425" fg:w="8" fg:x="3368"/></g><g><title>tcache_bin_flush_impl (8 samples, 0.16%)</title><rect width=".162%" height="15" x="67.999%" y="917" fill="#D40432" fg:w="8" fg:x="3368"/></g><g><title>tcache_bin_flush_edatas_lookup (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.1%" y="901" fill="#E6E420" fg:w="3" fg:x="3373"/></g><g><title>emap_edata_lookup_batch (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.1%" y="885" fill="#F8D917" fg:w="3" fg:x="3373"/></g><g><title>tcache_bin_flush_metadata_visitor (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.141%" y="869" fill="#EEC520" fg:w="1" fg:x="3375"/></g><g><title>util_prefetch_write_range (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.141%" y="853" fill="#EC6A01" fg:w="1" fg:x="3375"/></g><g><title>util_prefetch_write (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.141%" y="837" fill="#DBE40D" fg:w="1" fg:x="3375"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.20%)</title><rect width=".202%" height="15" x="67.999%" y="1093" fill="#EE1E23" fg:w="10" fg:x="3368"/></g><g><title>alloc::alloc::dealloc (10 samples, 0.20%)</title><rect width=".202%" height="15" x="67.999%" y="1077" fill="#EC4617" fg:w="10" fg:x="3368"/></g><g><title>__rust_dealloc (10 samples, 0.20%)</title><rect width=".202%" height="15" x="67.999%" y="1061" fill="#F96830" fg:w="10" fg:x="3368"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (10 samples, 0.20%)</title><rect width=".202%" height="15" x="67.999%" y="1045" fill="#FE7532" fg:w="10" fg:x="3368"/></g><g><title>_rjem_sdallocx (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.161%" y="1029" fill="#DF9804" fg:w="2" fg:x="3376"/></g><g><title>free_fastpath (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.161%" y="1013" fill="#F50602" fg:w="2" fg:x="3376"/></g><g><title>cache_bin_dalloc_easy (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.181%" y="997" fill="#F99618" fg:w="1" fg:x="3377"/></g><g><title>cache_bin_full (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.181%" y="981" fill="#E4B92A" fg:w="1" fg:x="3377"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt;&gt; (64 samples, 1.29%)</title><rect width="1.292%" height="15" x="66.929%" y="1141" fill="#E22721" fg:w="64" fg:x="3315"/></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt;&gt; (11 samples, 0.22%)</title><rect width=".222%" height="15" x="67.999%" y="1125" fill="#DDA613" fg:w="11" fg:x="3368"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.22%)</title><rect width=".222%" height="15" x="67.999%" y="1109" fill="#D16D02" fg:w="11" fg:x="3368"/></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Performance&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.201%" y="1093" fill="#FCD81A" fg:w="1" fg:x="3378"/></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.242%" y="837" fill="#E3AD24" fg:w="1" fg:x="3380"/></g><g><title>rtree_cache_direct_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.242%" y="821" fill="#D15A07" fg:w="1" fg:x="3380"/></g><g><title>_rjem_je_sdallocx_default (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.242%" y="997" fill="#FAC20B" fg:w="2" fg:x="3380"/></g><g><title>isfree (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.242%" y="981" fill="#DC4832" fg:w="2" fg:x="3380"/></g><g><title>isdalloct (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.242%" y="965" fill="#DE6A30" fg:w="2" fg:x="3380"/></g><g><title>arena_sdalloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.242%" y="949" fill="#D8DC2D" fg:w="2" fg:x="3380"/></g><g><title>tcache_dalloc_small (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.242%" y="933" fill="#EA7012" fg:w="2" fg:x="3380"/></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.242%" y="917" fill="#CEB309" fg:w="2" fg:x="3380"/></g><g><title>tcache_bin_flush_bottom (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.242%" y="901" fill="#D77328" fg:w="2" fg:x="3380"/></g><g><title>tcache_bin_flush_impl (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.242%" y="885" fill="#DE4522" fg:w="2" fg:x="3380"/></g><g><title>tcache_bin_flush_edatas_lookup (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.242%" y="869" fill="#D1A10A" fg:w="2" fg:x="3380"/></g><g><title>emap_edata_lookup_batch (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.242%" y="853" fill="#D90626" fg:w="2" fg:x="3380"/></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.262%" y="837" fill="#E5E530" fg:w="1" fg:x="3381"/></g><g><title>rtree_leaf_elm_bits_decode (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.262%" y="821" fill="#E1151C" fg:w="1" fg:x="3381"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (91 samples, 1.84%)</title><rect width="1.837%" height="15" x="66.465%" y="1189" fill="#CE210D" fg:w="91" fg:x="3292"/><text x="66.715%" y="1199.5">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[json_benchmark::copy::citm_catalog::Performance]&gt; (91 samples, 1.84%)</title><rect width="1.837%" height="15" x="66.465%" y="1173" fill="#F2B211" fg:w="91" fg:x="3292"/><text x="66.715%" y="1183.5">c..</text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Performance&gt; (83 samples, 1.68%)</title><rect width="1.676%" height="15" x="66.626%" y="1157" fill="#DCA205" fg:w="83" fg:x="3300"/></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (4 samples, 0.08%)</title><rect width=".081%" height="15" x="68.221%" y="1141" fill="#D2212B" fg:w="4" fg:x="3379"/></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.242%" y="1125" fill="#D87436" fg:w="3" fg:x="3380"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.242%" y="1109" fill="#F95C18" fg:w="3" fg:x="3380"/></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.242%" y="1093" fill="#E7BD0E" fg:w="3" fg:x="3380"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.242%" y="1077" fill="#E60829" fg:w="3" fg:x="3380"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.242%" y="1061" fill="#F9071B" fg:w="3" fg:x="3380"/></g><g><title>alloc::alloc::dealloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.242%" y="1045" fill="#E85605" fg:w="3" fg:x="3380"/></g><g><title>__rust_dealloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.242%" y="1029" fill="#E0AF12" fg:w="3" fg:x="3380"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.242%" y="1013" fill="#DC810C" fg:w="3" fg:x="3380"/></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.282%" y="997" fill="#D21324" fg:w="1" fg:x="3382"/></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.282%" y="981" fill="#DB600E" fg:w="1" fg:x="3382"/></g><g><title>cache_bin_dalloc_easy (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.282%" y="965" fill="#F96A01" fg:w="1" fg:x="3382"/></g><g><title>tcache_gc_large (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.302%" y="1045" fill="#F99B14" fg:w="1" fg:x="3383"/></g><g><title>_rjem_je_tcache_bin_flush_large (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.302%" y="1029" fill="#F4A809" fg:w="1" fg:x="3383"/></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.302%" y="1013" fill="#D81732" fg:w="1" fg:x="3383"/></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.302%" y="997" fill="#E0DB14" fg:w="1" fg:x="3383"/></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.302%" y="981" fill="#DE9C0F" fg:w="1" fg:x="3383"/></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.302%" y="965" fill="#E76111" fg:w="1" fg:x="3383"/></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.302%" y="949" fill="#DA4630" fg:w="1" fg:x="3383"/></g><g><title>rtree_leaf_elm_bits_decode (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.302%" y="933" fill="#D4C434" fg:w="1" fg:x="3383"/></g><g><title>_rjem_je_te_event_trigger (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.302%" y="1077" fill="#F3CB12" fg:w="2" fg:x="3383"/></g><g><title>tcache_event (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.302%" y="1061" fill="#FC7D29" fg:w="2" fg:x="3383"/></g><g><title>tcache_gc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.322%" y="1045" fill="#DFB421" fg:w="1" fg:x="3384"/></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.322%" y="1029" fill="#FE9F2E" fg:w="1" fg:x="3384"/></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.322%" y="1013" fill="#FE260A" fg:w="1" fg:x="3384"/></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.322%" y="997" fill="#D0D920" fg:w="1" fg:x="3384"/></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.322%" y="981" fill="#DD780D" fg:w="1" fg:x="3384"/></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.322%" y="965" fill="#F63634" fg:w="1" fg:x="3384"/></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.322%" y="949" fill="#F22219" fg:w="1" fg:x="3384"/></g><g><title>extent_try_coalesce_large (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.322%" y="933" fill="#F7D109" fg:w="1" fg:x="3384"/></g><g><title>extent_try_coalesce_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.322%" y="917" fill="#E4471A" fg:w="1" fg:x="3384"/></g><g><title>extent_coalesce (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.322%" y="901" fill="#DE9131" fg:w="1" fg:x="3384"/></g><g><title>extent_merge_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.322%" y="885" fill="#DA7911" fg:w="1" fg:x="3384"/></g><g><title>_rjem_je_emap_merge_prepare (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.322%" y="869" fill="#F43207" fg:w="1" fg:x="3384"/></g><g><title>_rjem_je_emap_merge_commit (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.342%" y="821" fill="#F6E525" fg:w="1" fg:x="3385"/></g><g><title>emap_rtree_write_acquired (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.342%" y="805" fill="#E11205" fg:w="1" fg:x="3385"/></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench (3,288 samples, 66.38%)</title><rect width="66.384%" height="15" x="2.019%" y="1509" fill="#D5CC08" fg:w="3288" fg:x="100"/><text x="2.269%" y="1519.5">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench</text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,288 samples, 66.38%)</title><rect width="66.384%" height="15" x="2.019%" y="1493" fill="#EE6706" fg:w="3288" fg:x="100"/><text x="2.269%" y="1503.5">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,288 samples, 66.38%)</title><rect width="66.384%" height="15" x="2.019%" y="1477" fill="#DE1923" fg:w="3288" fg:x="100"/><text x="2.269%" y="1487.5">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,288 samples, 66.38%)</title><rect width="66.384%" height="15" x="2.019%" y="1461" fill="#D5CB23" fg:w="3288" fg:x="100"/><text x="2.269%" y="1471.5">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3,288 samples, 66.38%)</title><rect width="66.384%" height="15" x="2.019%" y="1445" fill="#DD4F35" fg:w="3288" fg:x="100"/><text x="2.269%" y="1455.5">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,288 samples, 66.38%)</title><rect width="66.384%" height="15" x="2.019%" y="1429" fill="#F3C823" fg:w="3288" fg:x="100"/><text x="2.269%" y="1439.5">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>?? (3,288 samples, 66.38%)</title><rect width="66.384%" height="15" x="2.019%" y="1413" fill="#F83C19" fg:w="3288" fg:x="100"/><text x="2.269%" y="1423.5">??</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3,288 samples, 66.38%)</title><rect width="66.384%" height="15" x="2.019%" y="1397" fill="#E3352E" fg:w="3288" fg:x="100"/><text x="2.269%" y="1407.5">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,288 samples, 66.38%)</title><rect width="66.384%" height="15" x="2.019%" y="1381" fill="#D87820" fg:w="3288" fg:x="100"/><text x="2.269%" y="1391.5">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,288 samples, 66.38%)</title><rect width="66.384%" height="15" x="2.019%" y="1365" fill="#DC8601" fg:w="3288" fg:x="100"/><text x="2.269%" y="1375.5">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,288 samples, 66.38%)</title><rect width="66.384%" height="15" x="2.019%" y="1349" fill="#EDA805" fg:w="3288" fg:x="100"/><text x="2.269%" y="1359.5">core::iter::adapters::map::map_fold::_{{closure}}</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::_{{closure}} (3,288 samples, 66.38%)</title><rect width="66.384%" height="15" x="2.019%" y="1333" fill="#E76421" fg:w="3288" fg:x="100"/><text x="2.269%" y="1343.5">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::_{{closure}}</text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}} (3,288 samples, 66.38%)</title><rect width="66.384%" height="15" x="2.019%" y="1317" fill="#ECB12F" fg:w="3288" fg:x="100"/><text x="2.269%" y="1327.5">deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}}</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter_batched (3,288 samples, 66.38%)</title><rect width="66.384%" height="15" x="2.019%" y="1301" fill="#EB0731" fg:w="3288" fg:x="100"/><text x="2.269%" y="1311.5">criterion::bencher::Bencher&lt;M&gt;::iter_batched</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,sonic_rs::error::Error&gt;&gt;&gt; (160 samples, 3.23%)</title><rect width="3.23%" height="15" x="65.173%" y="1285" fill="#E87716" fg:w="160" fg:x="3228"/><text x="65.423%" y="1295.5">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 samples, 3.23%)</title><rect width="3.23%" height="15" x="65.173%" y="1269" fill="#FE4935" fg:w="160" fg:x="3228"/><text x="65.423%" y="1279.5">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,sonic_rs::error::Error&gt;]&gt; (160 samples, 3.23%)</title><rect width="3.23%" height="15" x="65.173%" y="1253" fill="#FB2314" fg:w="160" fg:x="3228"/><text x="65.423%" y="1263.5">cor..</text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,sonic_rs::error::Error&gt;&gt; (160 samples, 3.23%)</title><rect width="3.23%" height="15" x="65.173%" y="1237" fill="#F17714" fg:w="160" fg:x="3228"/><text x="65.423%" y="1247.5">cor..</text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::CitmCatalog&gt; (158 samples, 3.19%)</title><rect width="3.19%" height="15" x="65.213%" y="1221" fill="#CF660E" fg:w="158" fg:x="3230"/><text x="65.463%" y="1231.5">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::Performance&gt;&gt; (96 samples, 1.94%)</title><rect width="1.938%" height="15" x="66.465%" y="1205" fill="#F8C932" fg:w="96" fg:x="3292"/><text x="66.715%" y="1215.5">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::Performance&gt;&gt; (5 samples, 0.10%)</title><rect width=".101%" height="15" x="68.302%" y="1189" fill="#DEB92C" fg:w="5" fg:x="3383"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect width=".101%" height="15" x="68.302%" y="1173" fill="#DA6B12" fg:w="5" fg:x="3383"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.10%)</title><rect width=".101%" height="15" x="68.302%" y="1157" fill="#EDB127" fg:w="5" fg:x="3383"/></g><g><title>alloc::alloc::dealloc (5 samples, 0.10%)</title><rect width=".101%" height="15" x="68.302%" y="1141" fill="#F64506" fg:w="5" fg:x="3383"/></g><g><title>__rust_dealloc (5 samples, 0.10%)</title><rect width=".101%" height="15" x="68.302%" y="1125" fill="#EAD025" fg:w="5" fg:x="3383"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (5 samples, 0.10%)</title><rect width=".101%" height="15" x="68.302%" y="1109" fill="#E10406" fg:w="5" fg:x="3383"/></g><g><title>_rjem_je_sdallocx_default (5 samples, 0.10%)</title><rect width=".101%" height="15" x="68.302%" y="1093" fill="#E92D00" fg:w="5" fg:x="3383"/></g><g><title>isfree (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.342%" y="1077" fill="#E28805" fg:w="3" fg:x="3385"/></g><g><title>isdalloct (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.342%" y="1061" fill="#D35B2F" fg:w="3" fg:x="3385"/></g><g><title>arena_sdalloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.342%" y="1045" fill="#F25833" fg:w="3" fg:x="3385"/></g><g><title>arena_dalloc_large (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.342%" y="1029" fill="#E65B1C" fg:w="3" fg:x="3385"/></g><g><title>tcache_dalloc_large (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.342%" y="1013" fill="#FEBA1D" fg:w="3" fg:x="3385"/></g><g><title>_rjem_je_tcache_bin_flush_large (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.342%" y="997" fill="#EE0604" fg:w="3" fg:x="3385"/></g><g><title>tcache_bin_flush_bottom (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.342%" y="981" fill="#DD9710" fg:w="3" fg:x="3385"/></g><g><title>tcache_bin_flush_impl (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.342%" y="965" fill="#FB8F34" fg:w="3" fg:x="3385"/></g><g><title>_rjem_je_large_dalloc_finish (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.342%" y="949" fill="#CE5A0F" fg:w="3" fg:x="3385"/></g><g><title>large_dalloc_finish_impl (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.342%" y="933" fill="#DA2308" fg:w="3" fg:x="3385"/></g><g><title>pac_dalloc_impl (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.342%" y="917" fill="#EFD706" fg:w="3" fg:x="3385"/></g><g><title>_rjem_je_extent_record (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.342%" y="901" fill="#F57427" fg:w="3" fg:x="3385"/></g><g><title>extent_try_coalesce_large (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.342%" y="885" fill="#F2411C" fg:w="3" fg:x="3385"/></g><g><title>extent_try_coalesce_impl (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.342%" y="869" fill="#FC8435" fg:w="3" fg:x="3385"/></g><g><title>extent_coalesce (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.342%" y="853" fill="#E09F32" fg:w="3" fg:x="3385"/></g><g><title>extent_merge_impl (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.342%" y="837" fill="#E05D04" fg:w="3" fg:x="3385"/></g><g><title>_rjem_je_emap_merge_prepare (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.363%" y="821" fill="#D05122" fg:w="2" fg:x="3386"/></g><g><title>emap_rtree_leaf_elms_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.383%" y="805" fill="#E95C36" fg:w="1" fg:x="3387"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.443%" y="1141" fill="#ED150E" fg:w="1" fg:x="3390"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.524%" y="1013" fill="#F98033" fg:w="1" fg:x="3394"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.524%" y="997" fill="#DF8118" fg:w="1" fg:x="3394"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.524%" y="981" fill="#E7A819" fg:w="1" fg:x="3394"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.524%" y="965" fill="#E02714" fg:w="1" fg:x="3394"/></g><g><title>&lt;u32 as core::num::FromStrRadixHelper&gt;::checked_mul (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.544%" y="949" fill="#E19835" fg:w="2" fg:x="3395"/></g><g><title>core::num::&lt;impl u32&gt;::checked_mul (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.544%" y="933" fill="#FC1118" fg:w="2" fg:x="3395"/></g><g><title>core::num::&lt;impl u32&gt;::overflowing_mul (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.544%" y="917" fill="#FA721E" fg:w="2" fg:x="3395"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (6 samples, 0.12%)</title><rect width=".121%" height="15" x="68.484%" y="1093" fill="#E50504" fg:w="6" fg:x="3392"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.10%)</title><rect width=".101%" height="15" x="68.504%" y="1077" fill="#E1B031" fg:w="5" fg:x="3393"/></g><g><title>&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as serde::de::Deserialize&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="68.524%" y="1061" fill="#E0DD31" fg:w="4" fg:x="3394"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (4 samples, 0.08%)</title><rect width=".081%" height="15" x="68.524%" y="1045" fill="#FDA91B" fg:w="4" fg:x="3394"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.08%)</title><rect width=".081%" height="15" x="68.524%" y="1029" fill="#D3CE10" fg:w="4" fg:x="3394"/></g><g><title>serde::de::Visitor::visit_borrowed_str (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.544%" y="1013" fill="#F45723" fg:w="3" fg:x="3395"/></g><g><title>&lt;&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as serde::de::Deserialize&gt;::deserialize::Visitor&lt;T&gt; as serde::de::Visitor&gt;::visit_str (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.544%" y="997" fill="#F61C0A" fg:w="3" fg:x="3395"/></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u32&gt;::from_str (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.544%" y="981" fill="#E50C2C" fg:w="3" fg:x="3395"/></g><g><title>core::num::from_str_radix (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.544%" y="965" fill="#D29125" fg:w="3" fg:x="3395"/></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.585%" y="949" fill="#E37034" fg:w="1" fg:x="3397"/></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.585%" y="933" fill="#EE9B22" fg:w="1" fg:x="3397"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.605%" y="1013" fill="#EFE224" fg:w="1" fg:x="3398"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for ()&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.625%" y="965" fill="#E61017" fg:w="2" fg:x="3399"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_unit (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.625%" y="949" fill="#ECAB24" fg:w="2" fg:x="3399"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.645%" y="933" fill="#DD160E" fg:w="1" fg:x="3400"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.665%" y="885" fill="#F22B0B" fg:w="1" fg:x="3401"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.665%" y="869" fill="#E84517" fg:w="1" fg:x="3401"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.686%" y="885" fill="#D8B436" fg:w="1" fg:x="3402"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.665%" y="965" fill="#D80518" fg:w="3" fg:x="3401"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.665%" y="949" fill="#E15909" fg:w="3" fg:x="3401"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.665%" y="933" fill="#F34B21" fg:w="3" fg:x="3401"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.665%" y="917" fill="#F78D2D" fg:w="3" fg:x="3401"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.665%" y="901" fill="#E8B124" fg:w="3" fg:x="3401"/></g><g><title>sonic_rs::util::string::parse_valid_escaped_string (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.706%" y="885" fill="#DB7D24" fg:w="1" fg:x="3403"/></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.766%" y="853" fill="#E35E09" fg:w="1" fg:x="3406"/></g><g><title>imalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.766%" y="837" fill="#F02234" fg:w="1" fg:x="3406"/></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.766%" y="821" fill="#D82D0C" fg:w="1" fg:x="3406"/></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.766%" y="805" fill="#F61513" fg:w="1" fg:x="3406"/></g><g><title>iallocztm (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.766%" y="789" fill="#D5622A" fg:w="1" fg:x="3406"/></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.766%" y="773" fill="#FA882F" fg:w="1" fg:x="3406"/></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.766%" y="757" fill="#FB7C1B" fg:w="1" fg:x="3406"/></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.766%" y="741" fill="#E5B40E" fg:w="1" fg:x="3406"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.766%" y="725" fill="#F5D819" fg:w="1" fg:x="3406"/></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.766%" y="709" fill="#FB2B05" fg:w="1" fg:x="3406"/></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.766%" y="693" fill="#FA8018" fg:w="1" fg:x="3406"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.746%" y="917" fill="#D9751B" fg:w="3" fg:x="3405"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.766%" y="901" fill="#F59304" fg:w="2" fg:x="3406"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.766%" y="885" fill="#F2C923" fg:w="2" fg:x="3406"/></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.766%" y="869" fill="#DAB501" fg:w="2" fg:x="3406"/></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.787%" y="853" fill="#DE061D" fg:w="1" fg:x="3407"/></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.787%" y="837" fill="#D0BA03" fg:w="1" fg:x="3407"/></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.787%" y="821" fill="#D8241A" fg:w="1" fg:x="3407"/></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.787%" y="805" fill="#F8C917" fg:w="1" fg:x="3407"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.807%" y="917" fill="#FBAA1F" fg:w="1" fg:x="3408"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.807%" y="901" fill="#CF6E19" fg:w="1" fg:x="3408"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.807%" y="885" fill="#FA360F" fg:w="1" fg:x="3408"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.827%" y="869" fill="#E34421" fg:w="1" fg:x="3409"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.827%" y="853" fill="#EE2229" fg:w="1" fg:x="3409"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="68.827%" y="885" fill="#DC0B0F" fg:w="3" fg:x="3409"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.847%" y="869" fill="#F66F23" fg:w="2" fg:x="3410"/></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.847%" y="853" fill="#D15835" fg:w="2" fg:x="3410"/></g><g><title>sonic_rs::reader::Reader::next (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.948%" y="821" fill="#E7B92F" fg:w="2" fg:x="3415"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.948%" y="805" fill="#E99A01" fg:w="2" fg:x="3415"/></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="68.989%" y="805" fill="#E10F2E" fg:w="1" fg:x="3417"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (2 samples, 0.04%)</title><rect width=".04%" height="15" x="68.989%" y="821" fill="#D38729" fg:w="2" fg:x="3417"/></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.009%" y="805" fill="#D03600" fg:w="1" fg:x="3418"/></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.069%" y="805" fill="#F4880E" fg:w="1" fg:x="3421"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (21 samples, 0.42%)</title><rect width=".424%" height="15" x="68.726%" y="965" fill="#F1380E" fg:w="21" fg:x="3404"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (21 samples, 0.42%)</title><rect width=".424%" height="15" x="68.726%" y="949" fill="#CD5018" fg:w="21" fg:x="3404"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (21 samples, 0.42%)</title><rect width=".424%" height="15" x="68.726%" y="933" fill="#DC3904" fg:w="21" fg:x="3404"/></g><g><title>serde::de::SeqAccess::next_element (16 samples, 0.32%)</title><rect width=".323%" height="15" x="68.827%" y="917" fill="#E2C132" fg:w="16" fg:x="3409"/></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (16 samples, 0.32%)</title><rect width=".323%" height="15" x="68.827%" y="901" fill="#E7A816" fg:w="16" fg:x="3409"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (13 samples, 0.26%)</title><rect width=".263%" height="15" x="68.888%" y="885" fill="#FED70E" fg:w="13" fg:x="3412"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (10 samples, 0.20%)</title><rect width=".202%" height="15" x="68.948%" y="869" fill="#D37310" fg:w="10" fg:x="3415"/></g><g><title>?? (10 samples, 0.20%)</title><rect width=".202%" height="15" x="68.948%" y="853" fill="#ECD210" fg:w="10" fg:x="3415"/></g><g><title>?? (10 samples, 0.20%)</title><rect width=".202%" height="15" x="68.948%" y="837" fill="#DD5E0C" fg:w="10" fg:x="3415"/></g><g><title>sonic_rs::util::num::parse_number_unchecked (6 samples, 0.12%)</title><rect width=".121%" height="15" x="69.029%" y="821" fill="#EBDA31" fg:w="6" fg:x="3419"/></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (3 samples, 0.06%)</title><rect width=".061%" height="15" x="69.089%" y="805" fill="#D9720E" fg:w="3" fg:x="3422"/></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_none (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.15%" y="933" fill="#D89116" fg:w="1" fg:x="3425"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="69.15%" y="965" fill="#D97027" fg:w="2" fg:x="3425"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (2 samples, 0.04%)</title><rect width=".04%" height="15" x="69.15%" y="949" fill="#E15520" fg:w="2" fg:x="3425"/></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.17%" y="933" fill="#F5D12F" fg:w="1" fg:x="3426"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.17%" y="917" fill="#DADC0F" fg:w="1" fg:x="3426"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.17%" y="901" fill="#DECA1F" fg:w="1" fg:x="3426"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.17%" y="885" fill="#F3CB04" fg:w="1" fg:x="3426"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.17%" y="869" fill="#ED5C11" fg:w="1" fg:x="3426"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (29 samples, 0.59%)</title><rect width=".586%" height="15" x="68.625%" y="1013" fill="#E77707" fg:w="29" fg:x="3399"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (29 samples, 0.59%)</title><rect width=".586%" height="15" x="68.625%" y="997" fill="#ED5229" fg:w="29" fg:x="3399"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (29 samples, 0.59%)</title><rect width=".586%" height="15" x="68.625%" y="981" fill="#E25130" fg:w="29" fg:x="3399"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.19%" y="965" fill="#EA4633" fg:w="1" fg:x="3427"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.311%" y="885" fill="#FB5604" fg:w="1" fg:x="3433"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.332%" y="869" fill="#F4901C" fg:w="1" fg:x="3434"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.352%" y="869" fill="#E8A127" fg:w="1" fg:x="3435"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.18%)</title><rect width=".182%" height="15" x="69.211%" y="981" fill="#F72233" fg:w="9" fg:x="3428"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="69.311%" y="965" fill="#E18402" fg:w="4" fg:x="3433"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (4 samples, 0.08%)</title><rect width=".081%" height="15" x="69.311%" y="949" fill="#D19F2C" fg:w="4" fg:x="3433"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.08%)</title><rect width=".081%" height="15" x="69.311%" y="933" fill="#FBD601" fg:w="4" fg:x="3433"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="69.311%" y="917" fill="#F7542F" fg:w="4" fg:x="3433"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="69.311%" y="901" fill="#F06F2B" fg:w="4" fg:x="3433"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="69.332%" y="885" fill="#D7D623" fg:w="3" fg:x="3434"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.372%" y="869" fill="#F8CF17" fg:w="1" fg:x="3436"/></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.372%" y="853" fill="#D6BA04" fg:w="1" fg:x="3436"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.392%" y="965" fill="#DC8516" fg:w="1" fg:x="3437"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (4 samples, 0.08%)</title><rect width=".081%" height="15" x="69.412%" y="949" fill="#EF8613" fg:w="4" fg:x="3438"/></g><g><title>sonic_rs::reader::Reader::next (6 samples, 0.12%)</title><rect width=".121%" height="15" x="69.412%" y="965" fill="#FA8C09" fg:w="6" fg:x="3438"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="69.493%" y="949" fill="#E13B0E" fg:w="2" fg:x="3442"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="69.493%" y="933" fill="#D69833" fg:w="2" fg:x="3442"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect width=".04%" height="15" x="69.493%" y="917" fill="#FBE32B" fg:w="2" fg:x="3442"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize (47 samples, 0.95%)</title><rect width=".949%" height="15" x="68.605%" y="1061" fill="#F16011" fg:w="47" fg:x="3398"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (47 samples, 0.95%)</title><rect width=".949%" height="15" x="68.605%" y="1045" fill="#EAC62B" fg:w="47" fg:x="3398"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (47 samples, 0.95%)</title><rect width=".949%" height="15" x="68.605%" y="1029" fill="#DC6C1D" fg:w="47" fg:x="3398"/></g><g><title>serde::de::MapAccess::next_key (17 samples, 0.34%)</title><rect width=".343%" height="15" x="69.211%" y="1013" fill="#E2A321" fg:w="17" fg:x="3428"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (17 samples, 0.34%)</title><rect width=".343%" height="15" x="69.211%" y="997" fill="#CDC22D" fg:w="17" fg:x="3428"/></g><g><title>?? (8 samples, 0.16%)</title><rect width=".162%" height="15" x="69.392%" y="981" fill="#CE8F2C" fg:w="8" fg:x="3437"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.534%" y="965" fill="#EC8824" fg:w="1" fg:x="3444"/></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.534%" y="949" fill="#F9AC2A" fg:w="1" fg:x="3444"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.574%" y="1013" fill="#D88B17" fg:w="1" fg:x="3446"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.574%" y="997" fill="#CFA614" fg:w="1" fg:x="3446"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.574%" y="981" fill="#D2D116" fg:w="1" fg:x="3446"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.574%" y="965" fill="#E87614" fg:w="1" fg:x="3446"/></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.574%" y="949" fill="#EE712A" fg:w="1" fg:x="3446"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.574%" y="933" fill="#E72A05" fg:w="1" fg:x="3446"/></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.574%" y="917" fill="#F3A618" fg:w="1" fg:x="3446"/></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.574%" y="901" fill="#EDE20C" fg:w="1" fg:x="3446"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_entry (56 samples, 1.13%)</title><rect width="1.131%" height="15" x="68.484%" y="1125" fill="#E58518" fg:w="56" fg:x="3392"/></g><g><title>serde::de::MapAccess::next_entry_seed (56 samples, 1.13%)</title><rect width="1.131%" height="15" x="68.484%" y="1109" fill="#EE212B" fg:w="56" fg:x="3392"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (50 samples, 1.01%)</title><rect width="1.01%" height="15" x="68.605%" y="1093" fill="#E33B26" fg:w="50" fg:x="3398"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (50 samples, 1.01%)</title><rect width="1.01%" height="15" x="68.605%" y="1077" fill="#E66100" fg:w="50" fg:x="3398"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="69.554%" y="1061" fill="#FAAD32" fg:w="3" fg:x="3445"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (2 samples, 0.04%)</title><rect width=".04%" height="15" x="69.574%" y="1045" fill="#F00F32" fg:w="2" fg:x="3446"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (2 samples, 0.04%)</title><rect width=".04%" height="15" x="69.574%" y="1029" fill="#DD5D16" fg:w="2" fg:x="3446"/></g><g><title>serde::de::Visitor::visit_borrowed_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.594%" y="1013" fill="#F5B435" fg:w="1" fg:x="3447"/></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.594%" y="997" fill="#E75833" fg:w="1" fg:x="3447"/></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.594%" y="981" fill="#F03A15" fg:w="1" fg:x="3447"/></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.594%" y="965" fill="#ED150A" fg:w="1" fg:x="3447"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.594%" y="949" fill="#DA2B0B" fg:w="1" fg:x="3447"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.594%" y="933" fill="#DADD1D" fg:w="1" fg:x="3447"/></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.594%" y="917" fill="#D6762A" fg:w="1" fg:x="3447"/></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.594%" y="901" fill="#FBC81A" fg:w="1" fg:x="3447"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.594%" y="885" fill="#ED6527" fg:w="1" fg:x="3447"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.594%" y="869" fill="#FB750B" fg:w="1" fg:x="3447"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.594%" y="853" fill="#D8DF17" fg:w="1" fg:x="3447"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.594%" y="837" fill="#FB360C" fg:w="1" fg:x="3447"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.594%" y="821" fill="#FEB036" fg:w="1" fg:x="3447"/></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.594%" y="805" fill="#D22008" fg:w="1" fg:x="3447"/></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.594%" y="789" fill="#EB3426" fg:w="1" fg:x="3447"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.594%" y="773" fill="#E7042C" fg:w="1" fg:x="3447"/></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.594%" y="757" fill="#F90220" fg:w="1" fg:x="3447"/></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.594%" y="741" fill="#E0411A" fg:w="1" fg:x="3447"/></g><g><title>sz_size2index_usize_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.594%" y="725" fill="#FA4928" fg:w="1" fg:x="3447"/></g><g><title>sz_size2index_lookup_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.594%" y="709" fill="#FDB110" fg:w="1" fg:x="3447"/></g><g><title>&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.614%" y="1045" fill="#D92022" fg:w="1" fg:x="3448"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.614%" y="1029" fill="#D4070A" fg:w="1" fg:x="3448"/></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.635%" y="1029" fill="#F55908" fg:w="1" fg:x="3449"/></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.635%" y="1013" fill="#ED1035" fg:w="1" fg:x="3449"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.635%" y="997" fill="#FACC1E" fg:w="1" fg:x="3449"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.635%" y="981" fill="#D04D1B" fg:w="1" fg:x="3449"/></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.635%" y="965" fill="#FACC1C" fg:w="1" fg:x="3449"/></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.635%" y="949" fill="#F43F15" fg:w="1" fg:x="3449"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.635%" y="933" fill="#EC552C" fg:w="1" fg:x="3449"/></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.635%" y="917" fill="#D76204" fg:w="1" fg:x="3449"/></g><g><title>imalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.635%" y="901" fill="#EB260B" fg:w="1" fg:x="3449"/></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.635%" y="885" fill="#FEBA19" fg:w="1" fg:x="3449"/></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.635%" y="869" fill="#E1371F" fg:w="1" fg:x="3449"/></g><g><title>iallocztm (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.635%" y="853" fill="#D30F15" fg:w="1" fg:x="3449"/></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.635%" y="837" fill="#D7BB29" fg:w="1" fg:x="3449"/></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.635%" y="821" fill="#F84520" fg:w="1" fg:x="3449"/></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.635%" y="805" fill="#FC6634" fg:w="1" fg:x="3449"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.635%" y="789" fill="#FD8C20" fg:w="1" fg:x="3449"/></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.635%" y="773" fill="#D8382A" fg:w="1" fg:x="3449"/></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.635%" y="757" fill="#D8B80E" fg:w="1" fg:x="3449"/></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.635%" y="741" fill="#EDBB1B" fg:w="1" fg:x="3449"/></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.635%" y="725" fill="#DB4103" fg:w="1" fg:x="3449"/></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.635%" y="709" fill="#F55319" fg:w="1" fg:x="3449"/></g><g><title>pac_may_have_muzzy (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.635%" y="693" fill="#D6CD2D" fg:w="1" fg:x="3449"/></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.655%" y="1029" fill="#F11412" fg:w="1" fg:x="3450"/></g><g><title>?? (6 samples, 0.12%)</title><rect width=".121%" height="15" x="69.614%" y="1061" fill="#E8A317" fg:w="6" fg:x="3448"/></g><g><title>?? (5 samples, 0.10%)</title><rect width=".101%" height="15" x="69.635%" y="1045" fill="#D6052E" fg:w="5" fg:x="3449"/></g><g><title>alloc::collections::btree::node::move_to_slice (3 samples, 0.06%)</title><rect width=".061%" height="15" x="69.675%" y="1029" fill="#E54E11" fg:w="3" fg:x="3451"/></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect width=".04%" height="15" x="69.695%" y="1013" fill="#F8590A" fg:w="2" fg:x="3452"/></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect width=".04%" height="15" x="69.695%" y="997" fill="#F8360F" fg:w="2" fg:x="3452"/></g><g><title>?? (7 samples, 0.14%)</title><rect width=".141%" height="15" x="69.614%" y="1077" fill="#DF7406" fg:w="7" fg:x="3448"/></g><g><title>alloc::collections::btree::node::splitpoint (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.736%" y="1061" fill="#CD7D26" fg:w="1" fg:x="3454"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.756%" y="1061" fill="#FB4E26" fg:w="1" fg:x="3455"/></g><g><title>alloc::collections::btree::mem::take_mut (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.756%" y="1045" fill="#FD4E1C" fg:w="1" fg:x="3455"/></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.756%" y="1029" fill="#D17803" fg:w="1" fg:x="3455"/></g><g><title>alloc::collections::btree::mem::take_mut::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.756%" y="1013" fill="#EEE509" fg:w="1" fg:x="3455"/></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.756%" y="997" fill="#FD9F12" fg:w="1" fg:x="3455"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.756%" y="981" fill="#F42A22" fg:w="1" fg:x="3455"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.756%" y="965" fill="#E00807" fg:w="1" fg:x="3455"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.756%" y="949" fill="#D2C92D" fg:w="1" fg:x="3455"/></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.756%" y="933" fill="#FCB915" fg:w="1" fg:x="3455"/></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.756%" y="917" fill="#DF8301" fg:w="1" fg:x="3455"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (67 samples, 1.35%)</title><rect width="1.353%" height="15" x="68.443%" y="1173" fill="#F58D10" fg:w="67" fg:x="3390"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (67 samples, 1.35%)</title><rect width="1.353%" height="15" x="68.443%" y="1157" fill="#E5372D" fg:w="67" fg:x="3390"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (66 samples, 1.33%)</title><rect width="1.333%" height="15" x="68.464%" y="1141" fill="#D05C0F" fg:w="66" fg:x="3391"/></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.18%)</title><rect width=".182%" height="15" x="69.614%" y="1125" fill="#EAB92F" fg:w="9" fg:x="3448"/></g><g><title>?? (9 samples, 0.18%)</title><rect width=".182%" height="15" x="69.614%" y="1109" fill="#FD6832" fg:w="9" fg:x="3448"/></g><g><title>?? (9 samples, 0.18%)</title><rect width=".182%" height="15" x="69.614%" y="1093" fill="#CD4607" fg:w="9" fg:x="3448"/></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="69.756%" y="1077" fill="#F0B22B" fg:w="2" fg:x="3455"/></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.776%" y="1061" fill="#D67002" fg:w="1" fg:x="3456"/></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect width=".04%" height="15" x="69.796%" y="933" fill="#CE2E11" fg:w="2" fg:x="3457"/></g><g><title>_rjem_je_large_palloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.837%" y="885" fill="#E1DC10" fg:w="1" fg:x="3459"/></g><g><title>_rjem_je_arena_extent_alloc_large (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.837%" y="869" fill="#EE4128" fg:w="1" fg:x="3459"/></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.837%" y="853" fill="#E69715" fg:w="1" fg:x="3459"/></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.837%" y="837" fill="#DA3A31" fg:w="1" fg:x="3459"/></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.837%" y="821" fill="#DBB30E" fg:w="1" fg:x="3459"/></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.837%" y="805" fill="#DF4801" fg:w="1" fg:x="3459"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="69.796%" y="1125" fill="#EE7E0A" fg:w="4" fg:x="3457"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.08%)</title><rect width=".081%" height="15" x="69.796%" y="1109" fill="#E0CE26" fg:w="4" fg:x="3457"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.08%)</title><rect width=".081%" height="15" x="69.796%" y="1093" fill="#D4C936" fg:w="4" fg:x="3457"/></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.08%)</title><rect width=".081%" height="15" x="69.796%" y="1077" fill="#DA9A30" fg:w="4" fg:x="3457"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.08%)</title><rect width=".081%" height="15" x="69.796%" y="1061" fill="#E85D18" fg:w="4" fg:x="3457"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="69.796%" y="1045" fill="#F51E15" fg:w="4" fg:x="3457"/></g><g><title>alloc::alloc::realloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="69.796%" y="1029" fill="#F2941D" fg:w="4" fg:x="3457"/></g><g><title>__rust_realloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="69.796%" y="1013" fill="#F49936" fg:w="4" fg:x="3457"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="69.796%" y="997" fill="#FC5716" fg:w="4" fg:x="3457"/></g><g><title>do_rallocx (4 samples, 0.08%)</title><rect width=".081%" height="15" x="69.796%" y="981" fill="#D2331D" fg:w="4" fg:x="3457"/></g><g><title>iralloct (4 samples, 0.08%)</title><rect width=".081%" height="15" x="69.796%" y="965" fill="#F2882F" fg:w="4" fg:x="3457"/></g><g><title>_rjem_je_arena_ralloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="69.796%" y="949" fill="#EE4404" fg:w="4" fg:x="3457"/></g><g><title>arena_ralloc_move_helper (2 samples, 0.04%)</title><rect width=".04%" height="15" x="69.837%" y="933" fill="#F2A11E" fg:w="2" fg:x="3459"/></g><g><title>arena_malloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="69.837%" y="917" fill="#DA3A2C" fg:w="2" fg:x="3459"/></g><g><title>tcache_alloc_large (2 samples, 0.04%)</title><rect width=".04%" height="15" x="69.837%" y="901" fill="#FC7D20" fg:w="2" fg:x="3459"/></g><g><title>cache_bin_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.857%" y="885" fill="#DBB200" fg:w="1" fg:x="3460"/></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.857%" y="869" fill="#D59807" fg:w="1" fg:x="3460"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.917%" y="1029" fill="#F96D22" fg:w="1" fg:x="3463"/></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.937%" y="1029" fill="#E86015" fg:w="1" fg:x="3464"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for ()&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.998%" y="981" fill="#E41B27" fg:w="1" fg:x="3467"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_unit (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.998%" y="965" fill="#D3B634" fg:w="1" fg:x="3467"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.998%" y="949" fill="#EAB226" fg:w="1" fg:x="3467"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::next_n (1 samples, 0.02%)</title><rect width=".02%" height="15" x="69.998%" y="933" fill="#DD6F03" fg:w="1" fg:x="3467"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.018%" y="933" fill="#E4AF15" fg:w="1" fg:x="3468"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.018%" y="917" fill="#E4AE2B" fg:w="1" fg:x="3468"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.018%" y="901" fill="#D3BF00" fg:w="1" fg:x="3468"/></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.018%" y="885" fill="#FD7503" fg:w="1" fg:x="3468"/></g><g><title>serde::de::Visitor::visit_borrowed_str (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.038%" y="933" fill="#F17F13" fg:w="2" fg:x="3469"/></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.038%" y="917" fill="#DA670C" fg:w="2" fg:x="3469"/></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.038%" y="901" fill="#ECD62B" fg:w="2" fg:x="3469"/></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.038%" y="885" fill="#F49013" fg:w="2" fg:x="3469"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.038%" y="869" fill="#F6BC0A" fg:w="2" fg:x="3469"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.038%" y="853" fill="#D4C121" fg:w="2" fg:x="3469"/></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.038%" y="837" fill="#F1331D" fg:w="2" fg:x="3469"/></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.038%" y="821" fill="#D33A13" fg:w="2" fg:x="3469"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.038%" y="805" fill="#E56F1A" fg:w="2" fg:x="3469"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.038%" y="789" fill="#D57328" fg:w="2" fg:x="3469"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.038%" y="773" fill="#D1382C" fg:w="2" fg:x="3469"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.038%" y="757" fill="#E66C20" fg:w="2" fg:x="3469"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.038%" y="741" fill="#D8A51F" fg:w="2" fg:x="3469"/></g><g><title>alloc::alloc::alloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.038%" y="725" fill="#DA7A15" fg:w="2" fg:x="3469"/></g><g><title>__rust_alloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.038%" y="709" fill="#DFE02F" fg:w="2" fg:x="3469"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.038%" y="693" fill="#EE662C" fg:w="2" fg:x="3469"/></g><g><title>_rjem_malloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.038%" y="677" fill="#EC2E28" fg:w="2" fg:x="3469"/></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.059%" y="661" fill="#F7CA32" fg:w="1" fg:x="3470"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="70.018%" y="981" fill="#D16314" fg:w="4" fg:x="3468"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (4 samples, 0.08%)</title><rect width=".081%" height="15" x="70.018%" y="965" fill="#FC1B22" fg:w="4" fg:x="3468"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (4 samples, 0.08%)</title><rect width=".081%" height="15" x="70.018%" y="949" fill="#D7CE17" fg:w="4" fg:x="3468"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.079%" y="933" fill="#D48724" fg:w="1" fg:x="3471"/></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.18%" y="885" fill="#F0BD01" fg:w="1" fg:x="3476"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.18%" y="901" fill="#F23814" fg:w="2" fg:x="3476"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.2%" y="885" fill="#F78421" fg:w="1" fg:x="3477"/></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.2%" y="869" fill="#D0950B" fg:w="1" fg:x="3477"/></g><g><title>emap_alloc_ctx_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.24%" y="773" fill="#D3210B" fg:w="1" fg:x="3479"/></g><g><title>rtree_metadata_read (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.24%" y="757" fill="#DD1D26" fg:w="1" fg:x="3479"/></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.24%" y="741" fill="#CEB631" fg:w="1" fg:x="3479"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.26%" y="741" fill="#D88C01" fg:w="1" fg:x="3480"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.14%)</title><rect width=".141%" height="15" x="70.159%" y="933" fill="#E83928" fg:w="7" fg:x="3475"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.12%)</title><rect width=".121%" height="15" x="70.18%" y="917" fill="#E0BA12" fg:w="6" fg:x="3476"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.08%)</title><rect width=".081%" height="15" x="70.22%" y="901" fill="#D7790B" fg:w="4" fg:x="3478"/></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.06%)</title><rect width=".061%" height="15" x="70.24%" y="885" fill="#F5930A" fg:w="3" fg:x="3479"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.06%)</title><rect width=".061%" height="15" x="70.24%" y="869" fill="#EE990D" fg:w="3" fg:x="3479"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="70.24%" y="853" fill="#E96C00" fg:w="3" fg:x="3479"/></g><g><title>alloc::alloc::realloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="70.24%" y="837" fill="#D49D11" fg:w="3" fg:x="3479"/></g><g><title>__rust_realloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="70.24%" y="821" fill="#E1D526" fg:w="3" fg:x="3479"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="70.24%" y="805" fill="#F8100B" fg:w="3" fg:x="3479"/></g><g><title>do_rallocx (3 samples, 0.06%)</title><rect width=".061%" height="15" x="70.24%" y="789" fill="#F12104" fg:w="3" fg:x="3479"/></g><g><title>iralloct (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.26%" y="773" fill="#DE1A2B" fg:w="2" fg:x="3480"/></g><g><title>_rjem_je_arena_ralloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.26%" y="757" fill="#F31D24" fg:w="2" fg:x="3480"/></g><g><title>arena_ralloc_move_helper (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.281%" y="741" fill="#F1091B" fg:w="1" fg:x="3481"/></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.281%" y="725" fill="#CD751A" fg:w="1" fg:x="3481"/></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.281%" y="709" fill="#D15027" fg:w="1" fg:x="3481"/></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.281%" y="693" fill="#EF9B06" fg:w="1" fg:x="3481"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.281%" y="677" fill="#D4680C" fg:w="1" fg:x="3481"/></g><g><title>arena_slab_reg_alloc_batch (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.281%" y="661" fill="#EACC03" fg:w="1" fg:x="3481"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.301%" y="917" fill="#FBDA07" fg:w="1" fg:x="3482"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="70.301%" y="933" fill="#DD5120" fg:w="3" fg:x="3482"/></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.321%" y="917" fill="#D6981A" fg:w="2" fg:x="3483"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.543%" y="853" fill="#DF1603" fg:w="1" fg:x="3494"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.684%" y="725" fill="#CFAE07" fg:w="1" fg:x="3501"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.684%" y="709" fill="#E01334" fg:w="1" fg:x="3501"/></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.765%" y="709" fill="#E4180E" fg:w="1" fg:x="3505"/></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.765%" y="693" fill="#E6992B" fg:w="1" fg:x="3505"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (11 samples, 0.22%)</title><rect width=".222%" height="15" x="70.604%" y="837" fill="#E76A0C" fg:w="11" fg:x="3497"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11 samples, 0.22%)</title><rect width=".222%" height="15" x="70.604%" y="821" fill="#D75C02" fg:w="11" fg:x="3497"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11 samples, 0.22%)</title><rect width=".222%" height="15" x="70.604%" y="805" fill="#F98F19" fg:w="11" fg:x="3497"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (11 samples, 0.22%)</title><rect width=".222%" height="15" x="70.604%" y="789" fill="#FC0723" fg:w="11" fg:x="3497"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (7 samples, 0.14%)</title><rect width=".141%" height="15" x="70.684%" y="773" fill="#D84528" fg:w="7" fg:x="3501"/></g><g><title>?? (7 samples, 0.14%)</title><rect width=".141%" height="15" x="70.684%" y="757" fill="#F02421" fg:w="7" fg:x="3501"/></g><g><title>?? (7 samples, 0.14%)</title><rect width=".141%" height="15" x="70.684%" y="741" fill="#E7800E" fg:w="7" fg:x="3501"/></g><g><title>sonic_rs::util::num::parse_number_unchecked (6 samples, 0.12%)</title><rect width=".121%" height="15" x="70.705%" y="725" fill="#F58F0E" fg:w="6" fg:x="3502"/></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.785%" y="709" fill="#DE821C" fg:w="2" fg:x="3506"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.886%" y="709" fill="#D40A30" fg:w="1" fg:x="3511"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="70.906%" y="693" fill="#FE762D" fg:w="3" fg:x="3512"/></g><g><title>?? (5 samples, 0.10%)</title><rect width=".101%" height="15" x="70.886%" y="741" fill="#E4062D" fg:w="5" fg:x="3511"/></g><g><title>?? (5 samples, 0.10%)</title><rect width=".101%" height="15" x="70.886%" y="725" fill="#F11223" fg:w="5" fg:x="3511"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="70.906%" y="709" fill="#E3D635" fg:w="4" fg:x="3512"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="70.967%" y="693" fill="#E06B33" fg:w="1" fg:x="3515"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.18%)</title><rect width=".182%" height="15" x="70.846%" y="805" fill="#F83C1C" fg:w="9" fg:x="3509"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (7 samples, 0.14%)</title><rect width=".141%" height="15" x="70.886%" y="789" fill="#F96517" fg:w="7" fg:x="3511"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (7 samples, 0.14%)</title><rect width=".141%" height="15" x="70.886%" y="773" fill="#E43313" fg:w="7" fg:x="3511"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.14%)</title><rect width=".141%" height="15" x="70.886%" y="757" fill="#D51406" fg:w="7" fg:x="3511"/></g><g><title>serde::de::Visitor::visit_borrowed_str (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.987%" y="741" fill="#D47C0A" fg:w="2" fg:x="3516"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.987%" y="725" fill="#F80328" fg:w="2" fg:x="3516"/></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.987%" y="709" fill="#DFB217" fg:w="2" fg:x="3516"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.987%" y="693" fill="#F0842D" fg:w="2" fg:x="3516"/></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.987%" y="677" fill="#F5A424" fg:w="2" fg:x="3516"/></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.04%)</title><rect width=".04%" height="15" x="70.987%" y="661" fill="#E7BC35" fg:w="2" fg:x="3516"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect width=".02%" height="15" x="71.028%" y="789" fill="#EDC627" fg:w="1" fg:x="3518"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect width=".04%" height="15" x="71.048%" y="773" fill="#DF7823" fg:w="2" fg:x="3519"/></g><g><title>sonic_rs::reader::Reader::next (3 samples, 0.06%)</title><rect width=".061%" height="15" x="71.048%" y="789" fill="#FD6B31" fg:w="3" fg:x="3519"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="71.088%" y="773" fill="#D82C1F" fg:w="1" fg:x="3521"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="71.088%" y="757" fill="#FD5715" fg:w="1" fg:x="3521"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="71.088%" y="741" fill="#E21202" fg:w="1" fg:x="3521"/></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="71.108%" y="773" fill="#D8082E" fg:w="1" fg:x="3522"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize (31 samples, 0.63%)</title><rect width=".626%" height="15" x="70.523%" y="885" fill="#E28C27" fg:w="31" fg:x="3493"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (31 samples, 0.63%)</title><rect width=".626%" height="15" x="70.523%" y="869" fill="#DDC236" fg:w="31" fg:x="3493"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (29 samples, 0.59%)</title><rect width=".586%" height="15" x="70.563%" y="853" fill="#D55C0B" fg:w="29" fg:x="3495"/></g><g><title>serde::de::MapAccess::next_key (16 samples, 0.32%)</title><rect width=".323%" height="15" x="70.826%" y="837" fill="#E5A22E" fg:w="16" fg:x="3508"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (16 samples, 0.32%)</title><rect width=".323%" height="15" x="70.826%" y="821" fill="#D66F24" fg:w="16" fg:x="3508"/></g><g><title>?? (6 samples, 0.12%)</title><rect width=".121%" height="15" x="71.028%" y="805" fill="#CF0615" fg:w="6" fg:x="3518"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (2 samples, 0.04%)</title><rect width=".04%" height="15" x="71.108%" y="789" fill="#D57F26" fg:w="2" fg:x="3522"/></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="71.129%" y="773" fill="#EE7620" fg:w="1" fg:x="3523"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="71.189%" y="853" fill="#F08B27" fg:w="1" fg:x="3526"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="71.27%" y="757" fill="#EB0A25" fg:w="2" fg:x="3530"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="71.472%" y="709" fill="#F9AB26" fg:w="4" fg:x="3540"/></g><g><title>core::num::&lt;impl usize&gt;::checked_add (4 samples, 0.08%)</title><rect width=".081%" height="15" x="71.472%" y="693" fill="#F29020" fg:w="4" fg:x="3540"/></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (4 samples, 0.08%)</title><rect width=".081%" height="15" x="71.472%" y="677" fill="#D97515" fg:w="4" fg:x="3540"/></g><g><title>_rjem_realloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="71.653%" y="597" fill="#F95701" fg:w="2" fg:x="3549"/></g><g><title>aligned_usize_get (2 samples, 0.04%)</title><rect width=".04%" height="15" x="71.775%" y="581" fill="#F8C430" fg:w="2" fg:x="3555"/></g><g><title>sz_s2u (1 samples, 0.02%)</title><rect width=".02%" height="15" x="71.795%" y="565" fill="#FBCE21" fg:w="1" fg:x="3556"/></g><g><title>sz_s2u_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="71.795%" y="549" fill="#E88D1C" fg:w="1" fg:x="3556"/></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="71.795%" y="533" fill="#D1A70E" fg:w="1" fg:x="3556"/></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="71.795%" y="517" fill="#E10B32" fg:w="1" fg:x="3556"/></g><g><title>rtree_leaf_elm_lookup (3 samples, 0.06%)</title><rect width=".061%" height="15" x="71.815%" y="549" fill="#D13214" fg:w="3" fg:x="3557"/></g><g><title>rtree_cache_direct_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="71.855%" y="533" fill="#D4112E" fg:w="1" fg:x="3559"/></g><g><title>rtree_metadata_read (4 samples, 0.08%)</title><rect width=".081%" height="15" x="71.815%" y="565" fill="#D86527" fg:w="4" fg:x="3557"/></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect width=".02%" height="15" x="71.876%" y="549" fill="#D4E430" fg:w="1" fg:x="3560"/></g><g><title>rtree_leaf_elm_bits_decode (1 samples, 0.02%)</title><rect width=".02%" height="15" x="71.876%" y="533" fill="#FA0632" fg:w="1" fg:x="3560"/></g><g><title>emap_alloc_ctx_lookup (5 samples, 0.10%)</title><rect width=".101%" height="15" x="71.815%" y="581" fill="#FAA030" fg:w="5" fg:x="3557"/></g><g><title>tsdn_rtree_ctx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="71.896%" y="565" fill="#F4D821" fg:w="1" fg:x="3561"/></g><g><title>tsdn_null (1 samples, 0.02%)</title><rect width=".02%" height="15" x="71.896%" y="549" fill="#CF9D05" fg:w="1" fg:x="3561"/></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.10%)</title><rect width=".101%" height="15" x="71.977%" y="549" fill="#E4C708" fg:w="5" fg:x="3565"/></g><g><title>_rjem_je_arena_ralloc_no_move (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.138%" y="517" fill="#E35014" fg:w="1" fg:x="3573"/></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.158%" y="501" fill="#DE0921" fg:w="1" fg:x="3574"/></g><g><title>rtree_cache_direct_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.158%" y="485" fill="#EF2C1C" fg:w="1" fg:x="3574"/></g><g><title>emap_edata_lookup (4 samples, 0.08%)</title><rect width=".081%" height="15" x="72.138%" y="533" fill="#F9BB2B" fg:w="4" fg:x="3573"/></g><g><title>rtree_read (3 samples, 0.06%)</title><rect width=".061%" height="15" x="72.158%" y="517" fill="#D88D1C" fg:w="3" fg:x="3574"/></g><g><title>rtree_leaf_elm_read (2 samples, 0.04%)</title><rect width=".04%" height="15" x="72.178%" y="501" fill="#E69A35" fg:w="2" fg:x="3575"/></g><g><title>rtree_leaf_elm_bits_decode (2 samples, 0.04%)</title><rect width=".04%" height="15" x="72.178%" y="485" fill="#E35204" fg:w="2" fg:x="3575"/></g><g><title>_rjem_je_arena_ralloc_no_move (8 samples, 0.16%)</title><rect width=".162%" height="15" x="72.078%" y="549" fill="#DC6B10" fg:w="8" fg:x="3570"/></g><g><title>sz_s2u (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.219%" y="533" fill="#CFBB02" fg:w="1" fg:x="3577"/></g><g><title>sz_s2u_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.219%" y="517" fill="#D2A234" fg:w="1" fg:x="3577"/></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.219%" y="501" fill="#D9D831" fg:w="1" fg:x="3577"/></g><g><title>sz_index2size_lookup_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.219%" y="485" fill="#DA9231" fg:w="1" fg:x="3577"/></g><g><title>_rjem_je_hook_invoke_dalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.239%" y="549" fill="#D83728" fg:w="1" fg:x="3578"/></g><g><title>_rjem_je_arena_get_ehooks (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.259%" y="453" fill="#D0C415" fg:w="1" fg:x="3579"/></g><g><title>_rjem_je_base_ehooks_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.259%" y="437" fill="#F2752A" fg:w="1" fg:x="3579"/></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.04%)</title><rect width=".04%" height="15" x="72.259%" y="501" fill="#D20B17" fg:w="2" fg:x="3579"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (2 samples, 0.04%)</title><rect width=".04%" height="15" x="72.259%" y="485" fill="#D96E02" fg:w="2" fg:x="3579"/></g><g><title>arena_slab_alloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="72.259%" y="469" fill="#E54D36" fg:w="2" fg:x="3579"/></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.279%" y="453" fill="#DA3510" fg:w="1" fg:x="3580"/></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.279%" y="437" fill="#D7260D" fg:w="1" fg:x="3580"/></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.279%" y="421" fill="#EB2A12" fg:w="1" fg:x="3580"/></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.279%" y="405" fill="#DB4236" fg:w="1" fg:x="3580"/></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.279%" y="389" fill="#DECD04" fg:w="1" fg:x="3580"/></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.279%" y="373" fill="#E3D52E" fg:w="1" fg:x="3580"/></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.279%" y="357" fill="#FA912A" fg:w="1" fg:x="3580"/></g><g><title>extent_activate_locked (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.279%" y="341" fill="#DB0F02" fg:w="1" fg:x="3580"/></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.279%" y="325" fill="#E7B534" fg:w="1" fg:x="3580"/></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.279%" y="309" fill="#EB012A" fg:w="1" fg:x="3580"/></g><g><title>ph_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.279%" y="293" fill="#F9581B" fg:w="1" fg:x="3580"/></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.279%" y="277" fill="#EB9110" fg:w="1" fg:x="3580"/></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.279%" y="261" fill="#ED7213" fg:w="1" fg:x="3580"/></g><g><title>phn_merge (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.279%" y="245" fill="#EE3332" fg:w="1" fg:x="3580"/></g><g><title>phn_merge_ordered (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.279%" y="229" fill="#CDC219" fg:w="1" fg:x="3580"/></g><g><title>phn_lchild_set (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.279%" y="213" fill="#D7CB11" fg:w="1" fg:x="3580"/></g><g><title>arena_ralloc_move_helper (4 samples, 0.08%)</title><rect width=".081%" height="15" x="72.259%" y="549" fill="#E97031" fg:w="4" fg:x="3579"/></g><g><title>arena_malloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="72.259%" y="533" fill="#F1821A" fg:w="4" fg:x="3579"/></g><g><title>tcache_alloc_small (4 samples, 0.08%)</title><rect width=".081%" height="15" x="72.259%" y="517" fill="#FCDF13" fg:w="4" fg:x="3579"/></g><g><title>cache_bin_alloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="72.3%" y="501" fill="#D35F19" fg:w="2" fg:x="3581"/></g><g><title>cache_bin_alloc_impl (2 samples, 0.04%)</title><rect width=".04%" height="15" x="72.3%" y="485" fill="#FBB61B" fg:w="2" fg:x="3581"/></g><g><title>iralloct (26 samples, 0.52%)</title><rect width=".525%" height="15" x="71.916%" y="581" fill="#EE1804" fg:w="26" fg:x="3562"/></g><g><title>_rjem_je_arena_ralloc (25 samples, 0.50%)</title><rect width=".505%" height="15" x="71.936%" y="565" fill="#E0DC19" fg:w="25" fg:x="3563"/></g><g><title>isdalloct (5 samples, 0.10%)</title><rect width=".101%" height="15" x="72.34%" y="549" fill="#EF851A" fg:w="5" fg:x="3583"/></g><g><title>arena_sdalloc (5 samples, 0.10%)</title><rect width=".101%" height="15" x="72.34%" y="533" fill="#D35E30" fg:w="5" fg:x="3583"/></g><g><title>tcache_dalloc_small (5 samples, 0.10%)</title><rect width=".101%" height="15" x="72.34%" y="517" fill="#EF5706" fg:w="5" fg:x="3583"/></g><g><title>cache_bin_dalloc_easy (4 samples, 0.08%)</title><rect width=".081%" height="15" x="72.36%" y="501" fill="#E33E00" fg:w="4" fg:x="3584"/></g><g><title>cache_bin_full (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.421%" y="485" fill="#D3E204" fg:w="1" fg:x="3587"/></g><g><title>sz_index2size (2 samples, 0.04%)</title><rect width=".04%" height="15" x="72.441%" y="581" fill="#FD2634" fg:w="2" fg:x="3588"/></g><g><title>sz_index2size_lookup (2 samples, 0.04%)</title><rect width=".04%" height="15" x="72.441%" y="565" fill="#E57E28" fg:w="2" fg:x="3588"/></g><g><title>do_rallocx (2 samples, 0.04%)</title><rect width=".04%" height="15" x="72.441%" y="549" fill="#E5A52C" fg:w="2" fg:x="3588"/></g><g><title>tcache_get_from_ind (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.481%" y="581" fill="#F75F2F" fg:w="1" fg:x="3590"/></g><g><title>tcache_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.481%" y="565" fill="#D88C1E" fg:w="1" fg:x="3590"/></g><g><title>tcache_available (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.481%" y="549" fill="#F6D608" fg:w="1" fg:x="3590"/></g><g><title>tsd_tcache_enabled_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.481%" y="533" fill="#E3E00F" fg:w="1" fg:x="3590"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (43 samples, 0.87%)</title><rect width=".868%" height="15" x="71.653%" y="677" fill="#E9AF04" fg:w="43" fg:x="3549"/></g><g><title>?? (43 samples, 0.87%)</title><rect width=".868%" height="15" x="71.653%" y="661" fill="#DD422D" fg:w="43" fg:x="3549"/></g><g><title>alloc::alloc::realloc (43 samples, 0.87%)</title><rect width=".868%" height="15" x="71.653%" y="645" fill="#DDB212" fg:w="43" fg:x="3549"/></g><g><title>__rust_realloc (43 samples, 0.87%)</title><rect width=".868%" height="15" x="71.653%" y="629" fill="#D5511D" fg:w="43" fg:x="3549"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (43 samples, 0.87%)</title><rect width=".868%" height="15" x="71.653%" y="613" fill="#DC5931" fg:w="43" fg:x="3549"/></g><g><title>do_rallocx (41 samples, 0.83%)</title><rect width=".828%" height="15" x="71.694%" y="597" fill="#E33C21" fg:w="41" fg:x="3551"/></g><g><title>thread_dalloc_event (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.501%" y="581" fill="#CD710C" fg:w="1" fg:x="3591"/></g><g><title>te_event_advance (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.501%" y="565" fill="#D32001" fg:w="1" fg:x="3591"/></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="677" fill="#F6020C" fg:w="1" fg:x="3592"/></g><g><title>imalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="661" fill="#F3251B" fg:w="1" fg:x="3592"/></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="645" fill="#F8D31F" fg:w="1" fg:x="3592"/></g><g><title>thread_alloc_event (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="629" fill="#F2922F" fg:w="1" fg:x="3592"/></g><g><title>te_event_advance (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="613" fill="#CE4614" fg:w="1" fg:x="3592"/></g><g><title>_rjem_je_te_event_trigger (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="597" fill="#D70A33" fg:w="1" fg:x="3592"/></g><g><title>tcache_event (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="581" fill="#F3B235" fg:w="1" fg:x="3592"/></g><g><title>tcache_gc_large (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="565" fill="#E9DD14" fg:w="1" fg:x="3592"/></g><g><title>_rjem_je_tcache_bin_flush_large (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="549" fill="#DA5F23" fg:w="1" fg:x="3592"/></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="533" fill="#E50D05" fg:w="1" fg:x="3592"/></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="517" fill="#FCA41E" fg:w="1" fg:x="3592"/></g><g><title>_rjem_je_large_dalloc_finish (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="501" fill="#E84424" fg:w="1" fg:x="3592"/></g><g><title>large_dalloc_finish_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="485" fill="#DB3B36" fg:w="1" fg:x="3592"/></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="469" fill="#FA5C21" fg:w="1" fg:x="3592"/></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="453" fill="#E5A236" fg:w="1" fg:x="3592"/></g><g><title>extent_try_coalesce_large (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="437" fill="#F47234" fg:w="1" fg:x="3592"/></g><g><title>extent_try_coalesce_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="421" fill="#D4D32B" fg:w="1" fg:x="3592"/></g><g><title>extent_coalesce (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="405" fill="#E29308" fg:w="1" fg:x="3592"/></g><g><title>extent_merge_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="389" fill="#E2170D" fg:w="1" fg:x="3592"/></g><g><title>_rjem_je_emap_merge_commit (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="373" fill="#F03F04" fg:w="1" fg:x="3592"/></g><g><title>emap_rtree_write_acquired (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="357" fill="#DD0120" fg:w="1" fg:x="3592"/></g><g><title>rtree_leaf_elm_write (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="341" fill="#F2750A" fg:w="1" fg:x="3592"/></g><g><title>rtree_leaf_elm_write_commit (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="325" fill="#F9AC2C" fg:w="1" fg:x="3592"/></g><g><title>atomic_store_p (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.522%" y="309" fill="#F42E2D" fg:w="1" fg:x="3592"/></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.542%" y="677" fill="#CE2B11" fg:w="1" fg:x="3593"/></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.542%" y="661" fill="#EFDA27" fg:w="1" fg:x="3593"/></g><g><title>sz_size2index_usize_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.542%" y="645" fill="#D0A936" fg:w="1" fg:x="3593"/></g><g><title>sz_index2size_lookup_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.542%" y="629" fill="#F7192A" fg:w="1" fg:x="3593"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (60 samples, 1.21%)</title><rect width="1.211%" height="15" x="71.371%" y="741" fill="#E2171F" fg:w="60" fg:x="3535"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (56 samples, 1.13%)</title><rect width="1.131%" height="15" x="71.452%" y="725" fill="#F7101C" fg:w="56" fg:x="3539"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (51 samples, 1.03%)</title><rect width="1.03%" height="15" x="71.553%" y="709" fill="#E79326" fg:w="51" fg:x="3544"/></g><g><title>alloc::raw_vec::finish_grow (50 samples, 1.01%)</title><rect width="1.01%" height="15" x="71.573%" y="693" fill="#FD5130" fg:w="50" fg:x="3545"/></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect width=".02%" height="15" x="72.562%" y="677" fill="#F9DE2B" fg:w="1" fg:x="3594"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="72.582%" y="741" fill="#DD031B" fg:w="2" fg:x="3595"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="72.582%" y="725" fill="#E4B405" fg:w="2" fg:x="3595"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.18%)</title><rect width=".182%" height="15" x="73.067%" y="661" fill="#E3832A" fg:w="9" fg:x="3619"/></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect width=".02%" height="15" x="73.289%" y="645" fill="#D40327" fg:w="1" fg:x="3630"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="73.713%" y="549" fill="#E22D05" fg:w="4" fg:x="3651"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (8 samples, 0.16%)</title><rect width=".162%" height="15" x="73.794%" y="517" fill="#D7A72D" fg:w="8" fg:x="3655"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (14 samples, 0.28%)</title><rect width=".283%" height="15" x="73.713%" y="565" fill="#FADA35" fg:w="14" fg:x="3651"/></g><g><title>?? (10 samples, 0.20%)</title><rect width=".202%" height="15" x="73.794%" y="549" fill="#CF8C00" fg:w="10" fg:x="3655"/></g><g><title>sonic_rs::reader::Reader::next (10 samples, 0.20%)</title><rect width=".202%" height="15" x="73.794%" y="533" fill="#EE8533" fg:w="10" fg:x="3655"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="73.955%" y="517" fill="#DACB35" fg:w="2" fg:x="3663"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="73.955%" y="501" fill="#E2B819" fg:w="2" fg:x="3663"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect width=".04%" height="15" x="73.955%" y="485" fill="#E77915" fg:w="2" fg:x="3663"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="73.996%" y="517" fill="#FB0E22" fg:w="1" fg:x="3665"/></g><g><title>&lt;json_benchmark::empty::Array as serde::de::Deserialize&gt;::deserialize (16 samples, 0.32%)</title><rect width=".323%" height="15" x="73.713%" y="597" fill="#F9C10B" fg:w="16" fg:x="3651"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_tuple (16 samples, 0.32%)</title><rect width=".323%" height="15" x="73.713%" y="581" fill="#DCAC25" fg:w="16" fg:x="3651"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="73.996%" y="565" fill="#E7E52B" fg:w="2" fg:x="3665"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="73.996%" y="549" fill="#FAA105" fg:w="2" fg:x="3665"/></g><g><title>sonic_rs::reader::Reader::next (2 samples, 0.04%)</title><rect width=".04%" height="15" x="73.996%" y="533" fill="#DAE112" fg:w="2" fg:x="3665"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="74.016%" y="517" fill="#F52D2A" fg:w="1" fg:x="3666"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="74.016%" y="501" fill="#D37301" fg:w="1" fg:x="3666"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="74.016%" y="485" fill="#F88534" fg:w="1" fg:x="3666"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (5 samples, 0.10%)</title><rect width=".101%" height="15" x="74.036%" y="517" fill="#EE6415" fg:w="5" fg:x="3667"/></g><g><title>sonic_rs::reader::Reader::next (8 samples, 0.16%)</title><rect width=".162%" height="15" x="74.036%" y="533" fill="#F7900B" fg:w="8" fg:x="3667"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="74.137%" y="517" fill="#CEA410" fg:w="3" fg:x="3672"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (3 samples, 0.06%)</title><rect width=".061%" height="15" x="74.137%" y="501" fill="#DE2203" fg:w="3" fg:x="3672"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (3 samples, 0.06%)</title><rect width=".061%" height="15" x="74.137%" y="485" fill="#F85204" fg:w="3" fg:x="3672"/></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (5 samples, 0.10%)</title><rect width=".101%" height="15" x="74.359%" y="517" fill="#E4512E" fg:w="5" fg:x="3683"/></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (5 samples, 0.10%)</title><rect width=".101%" height="15" x="74.359%" y="501" fill="#E3432F" fg:w="5" fg:x="3683"/></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.08%)</title><rect width=".081%" height="15" x="74.46%" y="517" fill="#D75D35" fg:w="4" fg:x="3688"/></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (7 samples, 0.14%)</title><rect width=".141%" height="15" x="74.541%" y="517" fill="#F8C227" fg:w="7" fg:x="3692"/></g><g><title>?? (34 samples, 0.69%)</title><rect width=".686%" height="15" x="74.036%" y="549" fill="#D70513" fg:w="34" fg:x="3667"/></g><g><title>sonic_rs::util::num::parse_number_unchecked (26 samples, 0.52%)</title><rect width=".525%" height="15" x="74.198%" y="533" fill="#E2D733" fg:w="26" fg:x="3675"/></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (2 samples, 0.04%)</title><rect width=".04%" height="15" x="74.682%" y="517" fill="#E1381A" fg:w="2" fg:x="3699"/></g><g><title>?? (35 samples, 0.71%)</title><rect width=".707%" height="15" x="74.036%" y="565" fill="#DE4B1D" fg:w="35" fg:x="3667"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="74.722%" y="549" fill="#EC8B06" fg:w="1" fg:x="3701"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (74 samples, 1.49%)</title><rect width="1.494%" height="15" x="73.35%" y="613" fill="#DF8924" fg:w="74" fg:x="3633"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (40 samples, 0.81%)</title><rect width=".808%" height="15" x="74.036%" y="597" fill="#E26302" fg:w="40" fg:x="3667"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (40 samples, 0.81%)</title><rect width=".808%" height="15" x="74.036%" y="581" fill="#CE8517" fg:w="40" fg:x="3667"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (5 samples, 0.10%)</title><rect width=".101%" height="15" x="74.743%" y="565" fill="#F3AD0F" fg:w="5" fg:x="3702"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (4 samples, 0.08%)</title><rect width=".081%" height="15" x="74.844%" y="565" fill="#E4451C" fg:w="4" fg:x="3707"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (83 samples, 1.68%)</title><rect width="1.676%" height="15" x="73.309%" y="645" fill="#D43316" fg:w="83" fg:x="3631"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (83 samples, 1.68%)</title><rect width="1.676%" height="15" x="73.309%" y="629" fill="#E37100" fg:w="83" fg:x="3631"/></g><g><title>?? (7 samples, 0.14%)</title><rect width=".141%" height="15" x="74.844%" y="613" fill="#FC541B" fg:w="7" fg:x="3707"/></g><g><title>?? (7 samples, 0.14%)</title><rect width=".141%" height="15" x="74.844%" y="597" fill="#DF9127" fg:w="7" fg:x="3707"/></g><g><title>sonic_rs::reader::Reader::next (7 samples, 0.14%)</title><rect width=".141%" height="15" x="74.844%" y="581" fill="#EFDB1E" fg:w="7" fg:x="3707"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="74.924%" y="565" fill="#E0C427" fg:w="3" fg:x="3711"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (3 samples, 0.06%)</title><rect width=".061%" height="15" x="74.924%" y="549" fill="#CD232B" fg:w="3" fg:x="3711"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (3 samples, 0.06%)</title><rect width=".061%" height="15" x="74.924%" y="533" fill="#E4C915" fg:w="3" fg:x="3711"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="75.611%" y="549" fill="#ED7610" fg:w="3" fg:x="3745"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10 samples, 0.20%)</title><rect width=".202%" height="15" x="75.671%" y="517" fill="#F11113" fg:w="10" fg:x="3748"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::slice_unchecked (2 samples, 0.04%)</title><rect width=".04%" height="15" x="75.873%" y="517" fill="#D60A19" fg:w="2" fg:x="3758"/></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.04%)</title><rect width=".04%" height="15" x="75.873%" y="501" fill="#EE251D" fg:w="2" fg:x="3758"/></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.04%)</title><rect width=".04%" height="15" x="75.873%" y="485" fill="#FD5319" fg:w="2" fg:x="3758"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (22 samples, 0.44%)</title><rect width=".444%" height="15" x="75.914%" y="501" fill="#EAC00C" fg:w="22" fg:x="3760"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (5 samples, 0.10%)</title><rect width=".101%" height="15" x="76.358%" y="501" fill="#F1D82D" fg:w="5" fg:x="3782"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect width=".02%" height="15" x="76.459%" y="501" fill="#F21621" fg:w="1" fg:x="3787"/></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.02%)</title><rect width=".02%" height="15" x="76.459%" y="485" fill="#E76931" fg:w="1" fg:x="3787"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="76.459%" y="469" fill="#DACC0F" fg:w="1" fg:x="3787"/></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="76.459%" y="453" fill="#EB8A29" fg:w="1" fg:x="3787"/></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="76.459%" y="437" fill="#F60009" fg:w="1" fg:x="3787"/></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (1 samples, 0.02%)</title><rect width=".02%" height="15" x="76.479%" y="501" fill="#D24A04" fg:w="1" fg:x="3788"/></g><g><title>?? (43 samples, 0.87%)</title><rect width=".868%" height="15" x="75.671%" y="549" fill="#FA3C29" fg:w="43" fg:x="3748"/></g><g><title>?? (43 samples, 0.87%)</title><rect width=".868%" height="15" x="75.671%" y="533" fill="#DC730C" fg:w="43" fg:x="3748"/></g><g><title>?? (31 samples, 0.63%)</title><rect width=".626%" height="15" x="75.914%" y="517" fill="#ED640D" fg:w="31" fg:x="3760"/></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (2 samples, 0.04%)</title><rect width=".04%" height="15" x="76.499%" y="501" fill="#D5371A" fg:w="2" fg:x="3789"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (80 samples, 1.62%)</title><rect width="1.615%" height="15" x="75.025%" y="613" fill="#D81104" fg:w="80" fg:x="3716"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (51 samples, 1.03%)</title><rect width="1.03%" height="15" x="75.611%" y="597" fill="#DC992F" fg:w="51" fg:x="3745"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (51 samples, 1.03%)</title><rect width="1.03%" height="15" x="75.611%" y="581" fill="#D78309" fg:w="51" fg:x="3745"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (51 samples, 1.03%)</title><rect width="1.03%" height="15" x="75.611%" y="565" fill="#E92E2A" fg:w="51" fg:x="3745"/></g><g><title>serde::de::Visitor::visit_borrowed_str (5 samples, 0.10%)</title><rect width=".101%" height="15" x="76.54%" y="549" fill="#E25607" fg:w="5" fg:x="3791"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (5 samples, 0.10%)</title><rect width=".101%" height="15" x="76.54%" y="533" fill="#EFE215" fg:w="5" fg:x="3791"/></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (5 samples, 0.10%)</title><rect width=".101%" height="15" x="76.54%" y="517" fill="#F48916" fg:w="5" fg:x="3791"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.10%)</title><rect width=".101%" height="15" x="76.54%" y="501" fill="#D38B23" fg:w="5" fg:x="3791"/></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5 samples, 0.10%)</title><rect width=".101%" height="15" x="76.54%" y="485" fill="#D63E32" fg:w="5" fg:x="3791"/></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.10%)</title><rect width=".101%" height="15" x="76.54%" y="469" fill="#D4712C" fg:w="5" fg:x="3791"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (6 samples, 0.12%)</title><rect width=".121%" height="15" x="76.64%" y="597" fill="#E2962B" fg:w="6" fg:x="3796"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (2 samples, 0.04%)</title><rect width=".04%" height="15" x="76.762%" y="597" fill="#FA4725" fg:w="2" fg:x="3802"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::set_index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="76.802%" y="597" fill="#DB4C13" fg:w="1" fg:x="3804"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (5 samples, 0.10%)</title><rect width=".101%" height="15" x="76.822%" y="581" fill="#FA270B" fg:w="5" fg:x="3805"/></g><g><title>sonic_rs::reader::Reader::next (6 samples, 0.12%)</title><rect width=".121%" height="15" x="76.822%" y="597" fill="#E6401F" fg:w="6" fg:x="3805"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="76.923%" y="581" fill="#D0DE17" fg:w="1" fg:x="3810"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="76.923%" y="565" fill="#E37D12" fg:w="1" fg:x="3810"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="76.923%" y="549" fill="#EAD209" fg:w="1" fg:x="3810"/></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (2 samples, 0.04%)</title><rect width=".04%" height="15" x="77.044%" y="581" fill="#D97F18" fg:w="2" fg:x="3816"/></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (10 samples, 0.20%)</title><rect width=".202%" height="15" x="77.085%" y="581" fill="#EF8D30" fg:w="10" fg:x="3818"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (201 samples, 4.06%)</title><rect width="4.058%" height="15" x="73.249%" y="661" fill="#E36D08" fg:w="201" fg:x="3628"/><text x="73.499%" y="671.5">&lt;jso..</text></g><g><title>serde::de::MapAccess::next_key (115 samples, 2.32%)</title><rect width="2.322%" height="15" x="74.985%" y="645" fill="#EBB817" fg:w="115" fg:x="3714"/><text x="75.235%" y="655.5">s..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (115 samples, 2.32%)</title><rect width="2.322%" height="15" x="74.985%" y="629" fill="#E3E230" fg:w="115" fg:x="3714"/><text x="75.235%" y="639.5">&lt;..</text></g><g><title>?? (33 samples, 0.67%)</title><rect width=".666%" height="15" x="76.64%" y="613" fill="#CE960B" fg:w="33" fg:x="3796"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (18 samples, 0.36%)</title><rect width=".363%" height="15" x="76.943%" y="597" fill="#FE0221" fg:w="18" fg:x="3811"/></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="77.287%" y="581" fill="#F3A014" fg:w="1" fg:x="3828"/></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (1 samples, 0.02%)</title><rect width=".02%" height="15" x="77.307%" y="645" fill="#DAD01E" fg:w="1" fg:x="3829"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (237 samples, 4.78%)</title><rect width="4.785%" height="15" x="72.683%" y="709" fill="#E07831" fg:w="237" fg:x="3600"/><text x="72.933%" y="719.5">&lt;core:..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize (221 samples, 4.46%)</title><rect width="4.462%" height="15" x="73.006%" y="693" fill="#F60C02" fg:w="221" fg:x="3616"/><text x="73.256%" y="703.5">json_..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (221 samples, 4.46%)</title><rect width="4.462%" height="15" x="73.006%" y="677" fill="#EC7503" fg:w="221" fg:x="3616"/><text x="73.256%" y="687.5">&lt;&amp;mut..</text></g><g><title>?? (8 samples, 0.16%)</title><rect width=".162%" height="15" x="77.307%" y="661" fill="#D88034" fg:w="8" fg:x="3829"/></g><g><title>sonic_rs::reader::Reader::next (7 samples, 0.14%)</title><rect width=".141%" height="15" x="77.327%" y="645" fill="#F69113" fg:w="7" fg:x="3830"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (7 samples, 0.14%)</title><rect width=".141%" height="15" x="77.327%" y="629" fill="#DE0B2E" fg:w="7" fg:x="3830"/></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (2 samples, 0.04%)</title><rect width=".04%" height="15" x="77.468%" y="693" fill="#F55224" fg:w="2" fg:x="3837"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (3 samples, 0.06%)</title><rect width=".061%" height="15" x="77.509%" y="677" fill="#FA4933" fg:w="3" fg:x="3839"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (312 samples, 6.30%)</title><rect width="6.299%" height="15" x="71.31%" y="757" fill="#DDBD17" fg:w="312" fg:x="3532"/><text x="71.56%" y="767.5">&lt;serde::..</text></g><g><title>serde::de::SeqAccess::next_element (247 samples, 4.99%)</title><rect width="4.987%" height="15" x="72.623%" y="741" fill="#D22107" fg:w="247" fg:x="3597"/><text x="72.873%" y="751.5">serde:..</text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (247 samples, 4.99%)</title><rect width="4.987%" height="15" x="72.623%" y="725" fill="#D26B16" fg:w="247" fg:x="3597"/><text x="72.873%" y="735.5">&lt;sonic..</text></g><g><title>?? (7 samples, 0.14%)</title><rect width=".141%" height="15" x="77.468%" y="709" fill="#DE7425" fg:w="7" fg:x="3837"/></g><g><title>sonic_rs::reader::Reader::next (5 samples, 0.10%)</title><rect width=".101%" height="15" x="77.509%" y="693" fill="#FE1130" fg:w="5" fg:x="3839"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="77.569%" y="677" fill="#E02420" fg:w="2" fg:x="3842"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="77.569%" y="661" fill="#E85A2E" fg:w="2" fg:x="3842"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect width=".04%" height="15" x="77.569%" y="645" fill="#F14228" fg:w="2" fg:x="3842"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (315 samples, 6.36%)</title><rect width="6.36%" height="15" x="71.27%" y="789" fill="#F9B81D" fg:w="315" fg:x="3530"/><text x="71.52%" y="799.5">serde::d..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (315 samples, 6.36%)</title><rect width="6.36%" height="15" x="71.27%" y="773" fill="#E7B501" fg:w="315" fg:x="3530"/><text x="71.52%" y="783.5">&lt;&amp;mut so..</text></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="77.609%" y="757" fill="#E05E02" fg:w="1" fg:x="3844"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="77.609%" y="741" fill="#E5AA0F" fg:w="1" fg:x="3844"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="77.609%" y="725" fill="#F07F23" fg:w="1" fg:x="3844"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="77.609%" y="709" fill="#F8C422" fg:w="1" fg:x="3844"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="77.609%" y="693" fill="#EC8907" fg:w="1" fg:x="3844"/></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (1 samples, 0.02%)</title><rect width=".02%" height="15" x="77.63%" y="709" fill="#EB7F10" fg:w="1" fg:x="3845"/></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (1 samples, 0.02%)</title><rect width=".02%" height="15" x="77.63%" y="693" fill="#FAC036" fg:w="1" fg:x="3845"/></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect width=".02%" height="15" x="77.65%" y="709" fill="#DA6214" fg:w="1" fg:x="3846"/></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (2 samples, 0.04%)</title><rect width=".04%" height="15" x="77.67%" y="709" fill="#E6B02F" fg:w="2" fg:x="3847"/></g><g><title>?? (5 samples, 0.10%)</title><rect width=".101%" height="15" x="77.63%" y="757" fill="#F40221" fg:w="5" fg:x="3845"/></g><g><title>?? (5 samples, 0.10%)</title><rect width=".101%" height="15" x="77.63%" y="741" fill="#E76411" fg:w="5" fg:x="3845"/></g><g><title>sonic_rs::util::num::parse_number_unchecked (5 samples, 0.10%)</title><rect width=".101%" height="15" x="77.63%" y="725" fill="#F5170C" fg:w="5" fg:x="3845"/></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (1 samples, 0.02%)</title><rect width=".02%" height="15" x="77.71%" y="709" fill="#F93716" fg:w="1" fg:x="3849"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (323 samples, 6.52%)</title><rect width="6.521%" height="15" x="71.25%" y="837" fill="#CF8609" fg:w="323" fg:x="3529"/><text x="71.5%" y="847.5">&lt;sonic_rs..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (323 samples, 6.52%)</title><rect width="6.521%" height="15" x="71.25%" y="821" fill="#DA8600" fg:w="323" fg:x="3529"/><text x="71.5%" y="831.5">&lt;sonic_rs..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (323 samples, 6.52%)</title><rect width="6.521%" height="15" x="71.25%" y="805" fill="#D5D421" fg:w="323" fg:x="3529"/><text x="71.5%" y="815.5">&lt;core::ma..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (7 samples, 0.14%)</title><rect width=".141%" height="15" x="77.63%" y="789" fill="#FC6A12" fg:w="7" fg:x="3845"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (7 samples, 0.14%)</title><rect width=".141%" height="15" x="77.63%" y="773" fill="#D07E2A" fg:w="7" fg:x="3845"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="77.731%" y="757" fill="#F6AF1D" fg:w="2" fg:x="3850"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="77.832%" y="709" fill="#D70D32" fg:w="1" fg:x="3855"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::slice_unchecked (1 samples, 0.02%)</title><rect width=".02%" height="15" x="77.852%" y="709" fill="#D8AC0F" fg:w="1" fg:x="3856"/></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="77.852%" y="693" fill="#D4670D" fg:w="1" fg:x="3856"/></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="77.852%" y="677" fill="#E7AB24" fg:w="1" fg:x="3856"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="77.872%" y="693" fill="#FA7B14" fg:w="1" fg:x="3857"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="77.832%" y="805" fill="#D43532" fg:w="4" fg:x="3855"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="77.832%" y="789" fill="#F3360C" fg:w="4" fg:x="3855"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (4 samples, 0.08%)</title><rect width=".081%" height="15" x="77.832%" y="773" fill="#EA6522" fg:w="4" fg:x="3855"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.08%)</title><rect width=".081%" height="15" x="77.832%" y="757" fill="#FE4316" fg:w="4" fg:x="3855"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="77.832%" y="741" fill="#FA232F" fg:w="4" fg:x="3855"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="77.832%" y="725" fill="#E27E26" fg:w="4" fg:x="3855"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="77.872%" y="709" fill="#D88A35" fg:w="2" fg:x="3857"/></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (1 samples, 0.02%)</title><rect width=".02%" height="15" x="77.892%" y="693" fill="#F6C72B" fg:w="1" fg:x="3858"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect width=".02%" height="15" x="77.912%" y="789" fill="#E87D0B" fg:w="1" fg:x="3859"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="77.933%" y="773" fill="#DADB2D" fg:w="1" fg:x="3860"/></g><g><title>sonic_rs::reader::Reader::next (2 samples, 0.04%)</title><rect width=".04%" height="15" x="77.933%" y="789" fill="#D86636" fg:w="2" fg:x="3860"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="77.953%" y="773" fill="#FAE407" fg:w="1" fg:x="3861"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="77.953%" y="757" fill="#E27D19" fg:w="1" fg:x="3861"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="77.953%" y="741" fill="#E0A51B" fg:w="1" fg:x="3861"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (337 samples, 6.80%)</title><rect width="6.804%" height="15" x="71.209%" y="853" fill="#E95603" fg:w="337" fg:x="3527"/><text x="71.459%" y="863.5">&lt;json_ben..</text></g><g><title>serde::de::MapAccess::next_key (12 samples, 0.24%)</title><rect width=".242%" height="15" x="77.771%" y="837" fill="#E47414" fg:w="12" fg:x="3852"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (12 samples, 0.24%)</title><rect width=".242%" height="15" x="77.771%" y="821" fill="#D1C011" fg:w="12" fg:x="3852"/></g><g><title>?? (5 samples, 0.10%)</title><rect width=".101%" height="15" x="77.912%" y="805" fill="#E05822" fg:w="5" fg:x="3859"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (2 samples, 0.04%)</title><rect width=".04%" height="15" x="77.973%" y="789" fill="#E92606" fg:w="2" fg:x="3862"/></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="77.993%" y="773" fill="#D43B1E" fg:w="1" fg:x="3863"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (374 samples, 7.55%)</title><rect width="7.551%" height="15" x="70.483%" y="901" fill="#D55003" fg:w="374" fg:x="3491"/><text x="70.733%" y="911.5">&lt;core::mar..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize (341 samples, 6.88%)</title><rect width="6.885%" height="15" x="71.149%" y="885" fill="#FBB207" fg:w="341" fg:x="3524"/><text x="71.399%" y="895.5">json_benc..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (341 samples, 6.88%)</title><rect width="6.885%" height="15" x="71.149%" y="869" fill="#D59A1A" fg:w="341" fg:x="3524"/><text x="71.399%" y="879.5">&lt;&amp;mut son..</text></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.013%" y="853" fill="#EEA531" fg:w="1" fg:x="3864"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.013%" y="837" fill="#F85B2E" fg:w="1" fg:x="3864"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.013%" y="821" fill="#F41534" fg:w="1" fg:x="3864"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect width=".04%" height="15" x="78.034%" y="869" fill="#F77A14" fg:w="2" fg:x="3865"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (396 samples, 8.00%)</title><rect width="7.995%" height="15" x="70.099%" y="981" fill="#DA1B09" fg:w="396" fg:x="3472"/><text x="70.349%" y="991.5">serde::de::..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (396 samples, 8.00%)</title><rect width="7.995%" height="15" x="70.099%" y="965" fill="#F60706" fg:w="396" fg:x="3472"/><text x="70.349%" y="975.5">&lt;&amp;mut sonic..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (394 samples, 7.95%)</title><rect width="7.955%" height="15" x="70.139%" y="949" fill="#E38736" fg:w="394" fg:x="3474"/><text x="70.389%" y="959.5">&lt;serde::de:..</text></g><g><title>serde::de::SeqAccess::next_element (383 samples, 7.73%)</title><rect width="7.733%" height="15" x="70.361%" y="933" fill="#F70E0B" fg:w="383" fg:x="3485"/><text x="70.611%" y="943.5">serde::de::..</text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (383 samples, 7.73%)</title><rect width="7.733%" height="15" x="70.361%" y="917" fill="#CE9522" fg:w="383" fg:x="3485"/><text x="70.611%" y="927.5">&lt;sonic_rs::..</text></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="78.034%" y="901" fill="#E3E404" fg:w="3" fg:x="3865"/></g><g><title>sonic_rs::reader::Reader::next (3 samples, 0.06%)</title><rect width=".061%" height="15" x="78.034%" y="885" fill="#EEDA1C" fg:w="3" fg:x="3865"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.074%" y="869" fill="#FC5628" fg:w="1" fg:x="3867"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.074%" y="853" fill="#FBE10B" fg:w="1" fg:x="3867"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.074%" y="837" fill="#CE2E31" fg:w="1" fg:x="3867"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.094%" y="837" fill="#F58018" fg:w="1" fg:x="3868"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="78.094%" y="885" fill="#DBB122" fg:w="2" fg:x="3868"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="78.094%" y="869" fill="#DA3C30" fg:w="2" fg:x="3868"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="78.094%" y="853" fill="#DD0B05" fg:w="2" fg:x="3868"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.114%" y="837" fill="#DC940D" fg:w="1" fg:x="3869"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="78.094%" y="981" fill="#D21003" fg:w="3" fg:x="3868"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (3 samples, 0.06%)</title><rect width=".061%" height="15" x="78.094%" y="965" fill="#EC5002" fg:w="3" fg:x="3868"/></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (3 samples, 0.06%)</title><rect width=".061%" height="15" x="78.094%" y="949" fill="#EF8113" fg:w="3" fg:x="3868"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="78.094%" y="933" fill="#DC6A23" fg:w="3" fg:x="3868"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (3 samples, 0.06%)</title><rect width=".061%" height="15" x="78.094%" y="917" fill="#FC8B2D" fg:w="3" fg:x="3868"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (3 samples, 0.06%)</title><rect width=".061%" height="15" x="78.094%" y="901" fill="#E50824" fg:w="3" fg:x="3868"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.135%" y="885" fill="#E67E21" fg:w="1" fg:x="3870"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="78.155%" y="981" fill="#EF8C15" fg:w="2" fg:x="3871"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (2 samples, 0.04%)</title><rect width=".04%" height="15" x="78.155%" y="965" fill="#FE6809" fg:w="2" fg:x="3871"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="78.155%" y="949" fill="#EF340E" fg:w="2" fg:x="3871"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="78.155%" y="933" fill="#D0E32C" fg:w="2" fg:x="3871"/></g><g><title>sonic_rs::util::num::parse_number_unchecked (2 samples, 0.04%)</title><rect width=".04%" height="15" x="78.155%" y="917" fill="#F61213" fg:w="2" fg:x="3871"/></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.175%" y="901" fill="#EBE419" fg:w="1" fg:x="3872"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (409 samples, 8.26%)</title><rect width="8.258%" height="15" x="69.958%" y="997" fill="#F09C14" fg:w="409" fg:x="3465"/><text x="70.208%" y="1007.5">&lt;core::mark..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.195%" y="981" fill="#E00814" fg:w="1" fg:x="3873"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (411 samples, 8.30%)</title><rect width="8.298%" height="15" x="69.958%" y="1029" fill="#D60C34" fg:w="411" fg:x="3465"/><text x="70.208%" y="1039.5">&lt;sonic_rs::s..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (411 samples, 8.30%)</title><rect width="8.298%" height="15" x="69.958%" y="1013" fill="#D3DC2F" fg:w="411" fg:x="3465"/><text x="70.208%" y="1023.5">&lt;sonic_rs::s..</text></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="78.215%" y="997" fill="#FAAD05" fg:w="2" fg:x="3874"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="78.215%" y="981" fill="#FA7D34" fg:w="2" fg:x="3874"/></g><g><title>sonic_rs::reader::Reader::next (2 samples, 0.04%)</title><rect width=".04%" height="15" x="78.215%" y="965" fill="#D18512" fg:w="2" fg:x="3874"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect width=".04%" height="15" x="78.215%" y="949" fill="#D8AD16" fg:w="2" fg:x="3874"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (7 samples, 0.14%)</title><rect width=".141%" height="15" x="78.256%" y="997" fill="#CD0316" fg:w="7" fg:x="3876"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.04%)</title><rect width=".04%" height="15" x="78.397%" y="933" fill="#F81614" fg:w="2" fg:x="3883"/></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.417%" y="917" fill="#E9061D" fg:w="1" fg:x="3884"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.417%" y="901" fill="#F01636" fg:w="1" fg:x="3884"/></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.417%" y="885" fill="#E78520" fg:w="1" fg:x="3884"/></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.417%" y="869" fill="#F8C104" fg:w="1" fg:x="3884"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6 samples, 0.12%)</title><rect width=".121%" height="15" x="78.397%" y="997" fill="#D3B22E" fg:w="6" fg:x="3883"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (6 samples, 0.12%)</title><rect width=".121%" height="15" x="78.397%" y="981" fill="#E0052A" fg:w="6" fg:x="3883"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (6 samples, 0.12%)</title><rect width=".121%" height="15" x="78.397%" y="965" fill="#EFB019" fg:w="6" fg:x="3883"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.12%)</title><rect width=".121%" height="15" x="78.397%" y="949" fill="#F5BB32" fg:w="6" fg:x="3883"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="78.437%" y="933" fill="#F8180F" fg:w="4" fg:x="3885"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="78.437%" y="917" fill="#CDA60D" fg:w="4" fg:x="3885"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="78.437%" y="901" fill="#D07217" fg:w="4" fg:x="3885"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (4 samples, 0.08%)</title><rect width=".081%" height="15" x="78.437%" y="885" fill="#EF7F12" fg:w="4" fg:x="3885"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect width=".04%" height="15" x="78.518%" y="981" fill="#DB9A1C" fg:w="2" fg:x="3889"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.558%" y="981" fill="#E19D17" fg:w="1" fg:x="3891"/></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.558%" y="965" fill="#DB0806" fg:w="1" fg:x="3891"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.558%" y="949" fill="#D42F06" fg:w="1" fg:x="3891"/></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.558%" y="933" fill="#E0BE04" fg:w="1" fg:x="3891"/></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.558%" y="917" fill="#EFB71D" fg:w="1" fg:x="3891"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (505 samples, 10.20%)</title><rect width="10.196%" height="15" x="68.423%" y="1221" fill="#D53907" fg:w="505" fg:x="3389"/><text x="68.673%" y="1231.5">&lt;sonic_rs::serd..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (505 samples, 10.20%)</title><rect width="10.196%" height="15" x="68.423%" y="1205" fill="#D89401" fg:w="505" fg:x="3389"/><text x="68.673%" y="1215.5">&lt;sonic_rs::serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (505 samples, 10.20%)</title><rect width="10.196%" height="15" x="68.423%" y="1189" fill="#ECB61D" fg:w="505" fg:x="3389"/><text x="68.673%" y="1199.5">&lt;core::marker::..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (437 samples, 8.82%)</title><rect width="8.823%" height="15" x="69.796%" y="1173" fill="#F47830" fg:w="437" fg:x="3457"/><text x="70.046%" y="1183.5">serde::de::i..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (437 samples, 8.82%)</title><rect width="8.823%" height="15" x="69.796%" y="1157" fill="#CE4722" fg:w="437" fg:x="3457"/><text x="70.046%" y="1167.5">&lt;&amp;mut sonic_..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (437 samples, 8.82%)</title><rect width="8.823%" height="15" x="69.796%" y="1141" fill="#F22006" fg:w="437" fg:x="3457"/><text x="70.046%" y="1151.5">&lt;serde::de::..</text></g><g><title>serde::de::SeqAccess::next_element (433 samples, 8.74%)</title><rect width="8.742%" height="15" x="69.877%" y="1125" fill="#F12303" fg:w="433" fg:x="3461"/><text x="70.127%" y="1135.5">serde::de::S..</text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (433 samples, 8.74%)</title><rect width="8.742%" height="15" x="69.877%" y="1109" fill="#DE3E13" fg:w="433" fg:x="3461"/><text x="70.127%" y="1119.5">&lt;sonic_rs::s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (432 samples, 8.72%)</title><rect width="8.722%" height="15" x="69.897%" y="1093" fill="#DF6E29" fg:w="432" fg:x="3462"/><text x="70.147%" y="1103.5">&lt;core::marke..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize (432 samples, 8.72%)</title><rect width="8.722%" height="15" x="69.897%" y="1077" fill="#D0E004" fg:w="432" fg:x="3462"/><text x="70.147%" y="1087.5">json_benchma..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (432 samples, 8.72%)</title><rect width="8.722%" height="15" x="69.897%" y="1061" fill="#F18913" fg:w="432" fg:x="3462"/><text x="70.147%" y="1071.5">&lt;&amp;mut sonic_..</text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (432 samples, 8.72%)</title><rect width="8.722%" height="15" x="69.897%" y="1045" fill="#F41811" fg:w="432" fg:x="3462"/><text x="70.147%" y="1055.5">&lt;json_benchm..</text></g><g><title>serde::de::MapAccess::next_key (18 samples, 0.36%)</title><rect width=".363%" height="15" x="78.256%" y="1029" fill="#F5B231" fg:w="18" fg:x="3876"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (18 samples, 0.36%)</title><rect width=".363%" height="15" x="78.256%" y="1013" fill="#DBA026" fg:w="18" fg:x="3876"/></g><g><title>?? (5 samples, 0.10%)</title><rect width=".101%" height="15" x="78.518%" y="997" fill="#E4890E" fg:w="5" fg:x="3889"/></g><g><title>sonic_rs::reader::Reader::next (2 samples, 0.04%)</title><rect width=".04%" height="15" x="78.579%" y="981" fill="#ED860B" fg:w="2" fg:x="3892"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="78.579%" y="965" fill="#D37E2C" fg:w="2" fg:x="3892"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="78.579%" y="949" fill="#E2AB21" fg:w="2" fg:x="3892"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect width=".04%" height="15" x="78.579%" y="933" fill="#FD630D" fg:w="2" fg:x="3892"/></g><g><title>sonic_rs::serde::de::from_trait (507 samples, 10.24%)</title><rect width="10.236%" height="15" x="68.403%" y="1285" fill="#F43007" fg:w="507" fg:x="3388"/><text x="68.653%" y="1295.5">sonic_rs::serde..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize (507 samples, 10.24%)</title><rect width="10.236%" height="15" x="68.403%" y="1269" fill="#F4D936" fg:w="507" fg:x="3388"/><text x="68.653%" y="1279.5">json_benchmark:..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (507 samples, 10.24%)</title><rect width="10.236%" height="15" x="68.403%" y="1253" fill="#E00F12" fg:w="507" fg:x="3388"/><text x="68.653%" y="1263.5">&lt;&amp;mut sonic_rs:..</text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (506 samples, 10.22%)</title><rect width="10.216%" height="15" x="68.423%" y="1237" fill="#F4630C" fg:w="506" fg:x="3389"/><text x="68.673%" y="1247.5">&lt;json_benchmark..</text></g><g><title>serde::de::MapAccess::next_key (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.619%" y="1221" fill="#E9E208" fg:w="1" fg:x="3894"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.619%" y="1205" fill="#E5D303" fg:w="1" fg:x="3894"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.619%" y="1189" fill="#D88C15" fg:w="1" fg:x="3894"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.619%" y="1173" fill="#EA7A1E" fg:w="1" fg:x="3894"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="78.619%" y="1157" fill="#EC192E" fg:w="1" fg:x="3894"/></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (4 samples, 0.08%)</title><rect width=".081%" height="15" x="78.74%" y="1141" fill="#D93436" fg:w="4" fg:x="3900"/></g><g><title>?? (8 samples, 0.16%)</title><rect width=".162%" height="15" x="78.74%" y="1157" fill="#DE1D1A" fg:w="8" fg:x="3900"/></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (4 samples, 0.08%)</title><rect width=".081%" height="15" x="78.821%" y="1141" fill="#D8B11D" fg:w="4" fg:x="3904"/></g><g><title>?? (27 samples, 0.55%)</title><rect width=".545%" height="15" x="78.74%" y="1189" fill="#F78833" fg:w="27" fg:x="3900"/></g><g><title>?? (27 samples, 0.55%)</title><rect width=".545%" height="15" x="78.74%" y="1173" fill="#E72F2F" fg:w="27" fg:x="3900"/></g><g><title>core::core_arch::x86::avx::_mm256_loadu_si256 (19 samples, 0.38%)</title><rect width=".384%" height="15" x="78.902%" y="1157" fill="#D3C024" fg:w="19" fg:x="3908"/></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.38%)</title><rect width=".384%" height="15" x="78.902%" y="1141" fill="#E59C20" fg:w="19" fg:x="3908"/></g><g><title>simdutf8::implementation::x86::avx2::validate_utf8_basic (36 samples, 0.73%)</title><rect width=".727%" height="15" x="78.639%" y="1205" fill="#F8D514" fg:w="36" fg:x="3895"/></g><g><title>simdutf8::implementation::x86::validate_utf8_basic_avx2 (4 samples, 0.08%)</title><rect width=".081%" height="15" x="79.285%" y="1189" fill="#D94007" fg:w="4" fg:x="3927"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (546 samples, 11.02%)</title><rect width="11.024%" height="15" x="68.403%" y="1461" fill="#E88E08" fg:w="546" fg:x="3388"/><text x="68.653%" y="1471.5">&lt;alloc::vec::Vec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (546 samples, 11.02%)</title><rect width="11.024%" height="15" x="68.403%" y="1445" fill="#E05C2C" fg:w="546" fg:x="3388"/><text x="68.653%" y="1455.5">&lt;alloc::vec::Vec..</text></g><g><title>?? (546 samples, 11.02%)</title><rect width="11.024%" height="15" x="68.403%" y="1429" fill="#D6A911" fg:w="546" fg:x="3388"/><text x="68.653%" y="1439.5">??</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (546 samples, 11.02%)</title><rect width="11.024%" height="15" x="68.403%" y="1413" fill="#D23B25" fg:w="546" fg:x="3388"/><text x="68.653%" y="1423.5">core::iter::trai..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (546 samples, 11.02%)</title><rect width="11.024%" height="15" x="68.403%" y="1397" fill="#D67430" fg:w="546" fg:x="3388"/><text x="68.653%" y="1407.5">&lt;core::iter::ada..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (546 samples, 11.02%)</title><rect width="11.024%" height="15" x="68.403%" y="1381" fill="#F4BF06" fg:w="546" fg:x="3388"/><text x="68.653%" y="1391.5">core::iter::trai..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (546 samples, 11.02%)</title><rect width="11.024%" height="15" x="68.403%" y="1365" fill="#F13234" fg:w="546" fg:x="3388"/><text x="68.653%" y="1375.5">core::iter::adap..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (546 samples, 11.02%)</title><rect width="11.024%" height="15" x="68.403%" y="1349" fill="#EC4B27" fg:w="546" fg:x="3388"/><text x="68.653%" y="1359.5">core::ops::funct..</text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}}::_{{closure}} (546 samples, 11.02%)</title><rect width="11.024%" height="15" x="68.403%" y="1333" fill="#EC6300" fg:w="546" fg:x="3388"/><text x="68.653%" y="1343.5">deserialize_stru..</text></g><g><title>deserialize_struct::sonic_rs_parse_struct (546 samples, 11.02%)</title><rect width="11.024%" height="15" x="68.403%" y="1317" fill="#CFCA0F" fg:w="546" fg:x="3388"/><text x="68.653%" y="1327.5">deserialize_stru..</text></g><g><title>sonic_rs::serde::de::from_slice (546 samples, 11.02%)</title><rect width="11.024%" height="15" x="68.403%" y="1301" fill="#E9CF0E" fg:w="546" fg:x="3388"/><text x="68.653%" y="1311.5">sonic_rs::serde:..</text></g><g><title>sonic_rs::util::utf8::from_utf8 (39 samples, 0.79%)</title><rect width=".787%" height="15" x="78.639%" y="1285" fill="#E21B33" fg:w="39" fg:x="3895"/></g><g><title>simdutf8::basic::from_utf8 (39 samples, 0.79%)</title><rect width=".787%" height="15" x="78.639%" y="1269" fill="#CE682A" fg:w="39" fg:x="3895"/></g><g><title>simdutf8::implementation::validate_utf8_basic (39 samples, 0.79%)</title><rect width=".787%" height="15" x="78.639%" y="1253" fill="#D4E104" fg:w="39" fg:x="3895"/></g><g><title>simdutf8::implementation::x86::validate_utf8_basic (39 samples, 0.79%)</title><rect width=".787%" height="15" x="78.639%" y="1237" fill="#E9602A" fg:w="39" fg:x="3895"/></g><g><title>simdutf8::implementation::x86::validate_utf8_basic_avx2 (39 samples, 0.79%)</title><rect width=".787%" height="15" x="78.639%" y="1221" fill="#E51520" fg:w="39" fg:x="3895"/></g><g><title>simdutf8::implementation::x86::validate_utf8_basic_avx2 (3 samples, 0.06%)</title><rect width=".061%" height="15" x="79.366%" y="1205" fill="#E2D818" fg:w="3" fg:x="3931"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.427%" y="1301" fill="#DDA311" fg:w="1" fg:x="3934"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.427%" y="1285" fill="#D8D82A" fg:w="1" fg:x="3934"/></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.427%" y="1269" fill="#F07607" fg:w="1" fg:x="3934"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.427%" y="1253" fill="#DD4325" fg:w="1" fg:x="3934"/></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.427%" y="1237" fill="#F1202C" fg:w="1" fg:x="3934"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.427%" y="1221" fill="#EBCC2B" fg:w="1" fg:x="3934"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.427%" y="1205" fill="#D5740A" fg:w="1" fg:x="3934"/></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.427%" y="1189" fill="#EF0F30" fg:w="1" fg:x="3934"/></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.427%" y="1173" fill="#CF7B24" fg:w="1" fg:x="3934"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.427%" y="1157" fill="#D1671E" fg:w="1" fg:x="3934"/></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.427%" y="1141" fill="#EE6413" fg:w="1" fg:x="3934"/></g><g><title>isfree (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.427%" y="1125" fill="#F41E0E" fg:w="1" fg:x="3934"/></g><g><title>isdalloct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.427%" y="1109" fill="#F9AE06" fg:w="1" fg:x="3934"/></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.427%" y="1093" fill="#EBD529" fg:w="1" fg:x="3934"/></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.427%" y="1077" fill="#D57606" fg:w="1" fg:x="3934"/></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.427%" y="1061" fill="#EB2C33" fg:w="1" fg:x="3934"/></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.427%" y="1045" fill="#D90935" fg:w="1" fg:x="3934"/></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.427%" y="1029" fill="#EDAC22" fg:w="1" fg:x="3934"/></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.427%" y="1013" fill="#CECE0B" fg:w="1" fg:x="3934"/></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.427%" y="997" fill="#D6951D" fg:w="1" fg:x="3934"/></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.427%" y="981" fill="#D07B03" fg:w="1" fg:x="3934"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,alloc::string::String&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.427%" y="1381" fill="#E57E04" fg:w="2" fg:x="3934"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.427%" y="1365" fill="#DE5C24" fg:w="2" fg:x="3934"/></g><g><title>core::mem::drop (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.427%" y="1349" fill="#D82729" fg:w="2" fg:x="3934"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,alloc::string::String&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.427%" y="1333" fill="#FD7F1C" fg:w="2" fg:x="3934"/></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.427%" y="1317" fill="#F99833" fg:w="2" fg:x="3934"/></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="1301" fill="#D17B2A" fg:w="1" fg:x="3935"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="1285" fill="#F17616" fg:w="1" fg:x="3935"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="1269" fill="#D01907" fg:w="1" fg:x="3935"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="1253" fill="#F39027" fg:w="1" fg:x="3935"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="1237" fill="#FA3205" fg:w="1" fg:x="3935"/></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="1221" fill="#CF430B" fg:w="1" fg:x="3935"/></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="1205" fill="#F5CC28" fg:w="1" fg:x="3935"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="1189" fill="#EEE418" fg:w="1" fg:x="3935"/></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="1173" fill="#D97416" fg:w="1" fg:x="3935"/></g><g><title>isfree (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="1157" fill="#EA620C" fg:w="1" fg:x="3935"/></g><g><title>isdalloct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="1141" fill="#F2AA32" fg:w="1" fg:x="3935"/></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="1125" fill="#EB0705" fg:w="1" fg:x="3935"/></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="1109" fill="#F1721C" fg:w="1" fg:x="3935"/></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="1093" fill="#F6702A" fg:w="1" fg:x="3935"/></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="1077" fill="#F8E40E" fg:w="1" fg:x="3935"/></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="1061" fill="#D08512" fg:w="1" fg:x="3935"/></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="1045" fill="#CF2331" fg:w="1" fg:x="3935"/></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="1029" fill="#CD4424" fg:w="1" fg:x="3935"/></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="1013" fill="#F53E28" fg:w="1" fg:x="3935"/></g><g><title>extent_try_coalesce_large (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="997" fill="#E41B18" fg:w="1" fg:x="3935"/></g><g><title>extent_try_coalesce_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="981" fill="#FD130C" fg:w="1" fg:x="3935"/></g><g><title>extent_coalesce (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="965" fill="#E81C14" fg:w="1" fg:x="3935"/></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="949" fill="#DA2333" fg:w="1" fg:x="3935"/></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="933" fill="#D45A28" fg:w="1" fg:x="3935"/></g><g><title>ph_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="917" fill="#DCAC0C" fg:w="1" fg:x="3935"/></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="901" fill="#E29F14" fg:w="1" fg:x="3935"/></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="885" fill="#EACD10" fg:w="1" fg:x="3935"/></g><g><title>phn_merge (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="869" fill="#CF0927" fg:w="1" fg:x="3935"/></g><g><title>phn_merge_ordered (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="853" fill="#F98F0F" fg:w="1" fg:x="3935"/></g><g><title>phn_prev_set (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.447%" y="837" fill="#FD851D" fg:w="1" fg:x="3935"/></g><g><title>_rjem_je_tcache_bin_flush_stashed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.467%" y="1157" fill="#DB0" fg:w="1" fg:x="3936"/></g><g><title>_rjem_je_sdallocx_default (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.467%" y="1269" fill="#CDCC1A" fg:w="2" fg:x="3936"/></g><g><title>isfree (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.467%" y="1253" fill="#E04436" fg:w="2" fg:x="3936"/></g><g><title>isdalloct (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.467%" y="1237" fill="#D14304" fg:w="2" fg:x="3936"/></g><g><title>arena_sdalloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.467%" y="1221" fill="#E4E512" fg:w="2" fg:x="3936"/></g><g><title>tcache_dalloc_small (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.467%" y="1205" fill="#E7590D" fg:w="2" fg:x="3936"/></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.467%" y="1189" fill="#D2B612" fg:w="2" fg:x="3936"/></g><g><title>tcache_bin_flush_bottom (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.467%" y="1173" fill="#F06902" fg:w="2" fg:x="3936"/></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.487%" y="1157" fill="#CFAA32" fg:w="1" fg:x="3937"/></g><g><title>arena_decay_ticks (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.487%" y="1141" fill="#E88518" fg:w="1" fg:x="3937"/></g><g><title>_rjem_je_arena_decay (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.487%" y="1125" fill="#EBA61B" fg:w="1" fg:x="3937"/></g><g><title>arena_decay_dirty (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.487%" y="1109" fill="#D1130D" fg:w="1" fg:x="3937"/></g><g><title>arena_decay_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.487%" y="1093" fill="#E24F27" fg:w="1" fg:x="3937"/></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.487%" y="1077" fill="#DEA30A" fg:w="1" fg:x="3937"/></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.487%" y="1061" fill="#D62C13" fg:w="1" fg:x="3937"/></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.507%" y="1253" fill="#D2D90D" fg:w="1" fg:x="3938"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.507%" y="1237" fill="#ED3D36" fg:w="1" fg:x="3938"/></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.507%" y="1221" fill="#E2B818" fg:w="1" fg:x="3938"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.507%" y="1205" fill="#DFE204" fg:w="1" fg:x="3938"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.507%" y="1189" fill="#D21A29" fg:w="1" fg:x="3938"/></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.507%" y="1173" fill="#DCDD06" fg:w="1" fg:x="3938"/></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.507%" y="1157" fill="#E15931" fg:w="1" fg:x="3938"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.507%" y="1141" fill="#DA462D" fg:w="1" fg:x="3938"/></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.507%" y="1125" fill="#EEA615" fg:w="1" fg:x="3938"/></g><g><title>isfree (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.507%" y="1109" fill="#E08D2C" fg:w="1" fg:x="3938"/></g><g><title>isdalloct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.507%" y="1093" fill="#E60C31" fg:w="1" fg:x="3938"/></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.507%" y="1077" fill="#D4AE0C" fg:w="1" fg:x="3938"/></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.507%" y="1061" fill="#F64309" fg:w="1" fg:x="3938"/></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.507%" y="1045" fill="#EF2317" fg:w="1" fg:x="3938"/></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.507%" y="1029" fill="#D3A700" fg:w="1" fg:x="3938"/></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.507%" y="1013" fill="#E1772D" fg:w="1" fg:x="3938"/></g><g><title>arena_dalloc_bin_locked_step (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.507%" y="997" fill="#D2A206" fg:w="1" fg:x="3938"/></g><g><title>bitmap_unset (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.507%" y="981" fill="#D07623" fg:w="1" fg:x="3938"/></g><g><title>?? (7 samples, 0.14%)</title><rect width=".141%" height="15" x="79.467%" y="1301" fill="#EF0435" fg:w="7" fg:x="3936"/></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::CitmCatalog&gt; (7 samples, 0.14%)</title><rect width=".141%" height="15" x="79.467%" y="1285" fill="#D58215" fg:w="7" fg:x="3936"/></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Event&gt; (5 samples, 0.10%)</title><rect width=".101%" height="15" x="79.507%" y="1269" fill="#EB9400" fg:w="5" fg:x="3938"/></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (4 samples, 0.08%)</title><rect width=".081%" height="15" x="79.528%" y="1253" fill="#F4E012" fg:w="4" fg:x="3939"/></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.568%" y="1237" fill="#D3D604" fg:w="2" fg:x="3941"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.568%" y="1221" fill="#CE7719" fg:w="2" fg:x="3941"/></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.568%" y="1205" fill="#F35D2F" fg:w="2" fg:x="3941"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.568%" y="1189" fill="#E0C206" fg:w="2" fg:x="3941"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.568%" y="1173" fill="#F3E506" fg:w="2" fg:x="3941"/></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.568%" y="1157" fill="#CF1732" fg:w="2" fg:x="3941"/></g><g><title>__rust_dealloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.568%" y="1141" fill="#FDC020" fg:w="2" fg:x="3941"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.568%" y="1125" fill="#D51506" fg:w="2" fg:x="3941"/></g><g><title>_rjem_sdallocx (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.568%" y="1109" fill="#F3970D" fg:w="2" fg:x="3941"/></g><g><title>free_fastpath (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.568%" y="1093" fill="#E9A529" fg:w="2" fg:x="3941"/></g><g><title>te_free_fastpath_ctx (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.568%" y="1077" fill="#F6B02D" fg:w="2" fg:x="3941"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.629%" y="1253" fill="#D9AA34" fg:w="1" fg:x="3944"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.629%" y="1237" fill="#D6CB36" fg:w="1" fg:x="3944"/></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.629%" y="1221" fill="#F8D731" fg:w="1" fg:x="3944"/></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.629%" y="1205" fill="#D02E0A" fg:w="1" fg:x="3944"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.629%" y="1189" fill="#FE051F" fg:w="1" fg:x="3944"/></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.629%" y="1173" fill="#DE6821" fg:w="1" fg:x="3944"/></g><g><title>isfree (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.629%" y="1157" fill="#F83110" fg:w="1" fg:x="3944"/></g><g><title>isdalloct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.629%" y="1141" fill="#E8C629" fg:w="1" fg:x="3944"/></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.629%" y="1125" fill="#D67D03" fg:w="1" fg:x="3944"/></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.629%" y="1109" fill="#E5DC1C" fg:w="1" fg:x="3944"/></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.629%" y="1093" fill="#DE4025" fg:w="1" fg:x="3944"/></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.629%" y="1077" fill="#F9B80D" fg:w="1" fg:x="3944"/></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.629%" y="1061" fill="#FCB006" fg:w="1" fg:x="3944"/></g><g><title>arena_dalloc_bin_locked_step (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.629%" y="1045" fill="#E49907" fg:w="1" fg:x="3944"/></g><g><title>arena_slab_regind (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.629%" y="1029" fill="#F2C105" fg:w="1" fg:x="3944"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,json_benchmark::copy::citm_catalog::Event&gt;&gt; (10 samples, 0.20%)</title><rect width=".202%" height="15" x="79.467%" y="1381" fill="#E88C09" fg:w="10" fg:x="3936"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.20%)</title><rect width=".202%" height="15" x="79.467%" y="1365" fill="#D5DE10" fg:w="10" fg:x="3936"/></g><g><title>core::mem::drop (10 samples, 0.20%)</title><rect width=".202%" height="15" x="79.467%" y="1349" fill="#DE4B32" fg:w="10" fg:x="3936"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,json_benchmark::copy::citm_catalog::Event&gt;&gt; (10 samples, 0.20%)</title><rect width=".202%" height="15" x="79.467%" y="1333" fill="#CDB402" fg:w="10" fg:x="3936"/></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.20%)</title><rect width=".202%" height="15" x="79.467%" y="1317" fill="#D82207" fg:w="10" fg:x="3936"/></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.06%)</title><rect width=".061%" height="15" x="79.608%" y="1301" fill="#FD1020" fg:w="3" fg:x="3943"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.629%" y="1285" fill="#D0611C" fg:w="2" fg:x="3944"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.629%" y="1269" fill="#E15C0B" fg:w="2" fg:x="3944"/></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="1253" fill="#F3260C" fg:w="1" fg:x="3945"/></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="1237" fill="#D08B10" fg:w="1" fg:x="3945"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="1221" fill="#E31809" fg:w="1" fg:x="3945"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="1205" fill="#CE3E0B" fg:w="1" fg:x="3945"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="1189" fill="#E4861B" fg:w="1" fg:x="3945"/></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="1173" fill="#CD3721" fg:w="1" fg:x="3945"/></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="1157" fill="#F34B2B" fg:w="1" fg:x="3945"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="1141" fill="#DF1B2A" fg:w="1" fg:x="3945"/></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="1125" fill="#E8BD21" fg:w="1" fg:x="3945"/></g><g><title>isfree (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="1109" fill="#D20927" fg:w="1" fg:x="3945"/></g><g><title>isdalloct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="1093" fill="#F2551A" fg:w="1" fg:x="3945"/></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="1077" fill="#F82C04" fg:w="1" fg:x="3945"/></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="1061" fill="#FA602E" fg:w="1" fg:x="3945"/></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="1045" fill="#E5741A" fg:w="1" fg:x="3945"/></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="1029" fill="#F65E22" fg:w="1" fg:x="3945"/></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="1013" fill="#FB4915" fg:w="1" fg:x="3945"/></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="997" fill="#FE7919" fg:w="1" fg:x="3945"/></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="981" fill="#D7A131" fg:w="1" fg:x="3945"/></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="965" fill="#DD2B0D" fg:w="1" fg:x="3945"/></g><g><title>extent_try_coalesce_large (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="949" fill="#F90525" fg:w="1" fg:x="3945"/></g><g><title>extent_try_coalesce_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="933" fill="#E2192C" fg:w="1" fg:x="3945"/></g><g><title>extent_coalesce (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="917" fill="#EEBD10" fg:w="1" fg:x="3945"/></g><g><title>extent_merge_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="901" fill="#FBBA08" fg:w="1" fg:x="3945"/></g><g><title>_rjem_je_emap_merge_prepare (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.649%" y="885" fill="#FE221F" fg:w="1" fg:x="3945"/></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.669%" y="1333" fill="#E1D71B" fg:w="1" fg:x="3946"/></g><g><title>isfree (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.669%" y="1317" fill="#DDC030" fg:w="1" fg:x="3946"/></g><g><title>isdalloct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.669%" y="1301" fill="#DB8914" fg:w="1" fg:x="3946"/></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.669%" y="1285" fill="#DB540B" fg:w="1" fg:x="3946"/></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.669%" y="1269" fill="#E00A17" fg:w="1" fg:x="3946"/></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.669%" y="1253" fill="#F81627" fg:w="1" fg:x="3946"/></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.669%" y="1237" fill="#D49A14" fg:w="1" fg:x="3946"/></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.669%" y="1221" fill="#ECC732" fg:w="1" fg:x="3946"/></g><g><title>arena_dalloc_bin_locked_step (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.669%" y="1205" fill="#D30911" fg:w="1" fg:x="3946"/></g><g><title>arena_slab_regind (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.669%" y="1189" fill="#F3D824" fg:w="1" fg:x="3946"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::Price&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.689%" y="1317" fill="#FA020A" fg:w="1" fg:x="3947"/></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::Price&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.689%" y="1301" fill="#E23230" fg:w="1" fg:x="3947"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.689%" y="1285" fill="#F35110" fg:w="1" fg:x="3947"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.689%" y="1269" fill="#FA0E02" fg:w="1" fg:x="3947"/></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.689%" y="1253" fill="#E9871D" fg:w="1" fg:x="3947"/></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.689%" y="1237" fill="#E0402B" fg:w="1" fg:x="3947"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.689%" y="1221" fill="#EE540D" fg:w="1" fg:x="3947"/></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.689%" y="1205" fill="#FD301A" fg:w="1" fg:x="3947"/></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.689%" y="1189" fill="#CDDF1F" fg:w="1" fg:x="3947"/></g><g><title>cache_bin_dalloc_easy (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.689%" y="1173" fill="#DD2920" fg:w="1" fg:x="3947"/></g><g><title>_rjem_je_te_event_trigger (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.709%" y="1125" fill="#D59E1F" fg:w="1" fg:x="3948"/></g><g><title>tcache_event (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.709%" y="1109" fill="#F57E2B" fg:w="1" fg:x="3948"/></g><g><title>tcache_gc_large (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.709%" y="1093" fill="#E30716" fg:w="1" fg:x="3948"/></g><g><title>_rjem_je_tcache_bin_flush_large (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.709%" y="1077" fill="#FC5A2C" fg:w="1" fg:x="3948"/></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.709%" y="1061" fill="#FD5B00" fg:w="1" fg:x="3948"/></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.709%" y="1045" fill="#FCAF31" fg:w="1" fg:x="3948"/></g><g><title>_rjem_je_large_dalloc_finish (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.709%" y="1029" fill="#F69601" fg:w="1" fg:x="3948"/></g><g><title>large_dalloc_finish_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.709%" y="1013" fill="#F1C019" fg:w="1" fg:x="3948"/></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.709%" y="997" fill="#EFBB0B" fg:w="1" fg:x="3948"/></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.709%" y="981" fill="#DACA33" fg:w="1" fg:x="3948"/></g><g><title>extent_try_coalesce_large (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.709%" y="965" fill="#E1B008" fg:w="1" fg:x="3948"/></g><g><title>extent_try_coalesce_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.709%" y="949" fill="#DB7A29" fg:w="1" fg:x="3948"/></g><g><title>extent_coalesce (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.709%" y="933" fill="#F88C14" fg:w="1" fg:x="3948"/></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.709%" y="917" fill="#F52925" fg:w="1" fg:x="3948"/></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.709%" y="901" fill="#EB5227" fg:w="1" fg:x="3948"/></g><g><title>ph_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.709%" y="885" fill="#E66C2A" fg:w="1" fg:x="3948"/></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.709%" y="869" fill="#D79632" fg:w="1" fg:x="3948"/></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.709%" y="853" fill="#E9D405" fg:w="1" fg:x="3948"/></g><g><title>phn_next_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.709%" y="837" fill="#F55016" fg:w="1" fg:x="3948"/></g><g><title>phn_link_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.709%" y="821" fill="#EE8110" fg:w="1" fg:x="3948"/></g><g><title>arena_dalloc_bin_locked_step (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.73%" y="1013" fill="#F01300" fg:w="1" fg:x="3949"/></g><g><title>bitmap_unset (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.73%" y="997" fill="#E82A23" fg:w="1" fg:x="3949"/></g><g><title>arena_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.75%" y="1013" fill="#DF8218" fg:w="1" fg:x="3950"/></g><g><title>_rjem_je_sdallocx_default (4 samples, 0.08%)</title><rect width=".081%" height="15" x="79.709%" y="1141" fill="#ED1016" fg:w="4" fg:x="3948"/></g><g><title>isfree (3 samples, 0.06%)</title><rect width=".061%" height="15" x="79.73%" y="1125" fill="#F8C014" fg:w="3" fg:x="3949"/></g><g><title>isdalloct (3 samples, 0.06%)</title><rect width=".061%" height="15" x="79.73%" y="1109" fill="#E9A702" fg:w="3" fg:x="3949"/></g><g><title>arena_sdalloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="79.73%" y="1093" fill="#FC472C" fg:w="3" fg:x="3949"/></g><g><title>tcache_dalloc_small (3 samples, 0.06%)</title><rect width=".061%" height="15" x="79.73%" y="1077" fill="#EE252F" fg:w="3" fg:x="3949"/></g><g><title>_rjem_je_tcache_bin_flush_small (3 samples, 0.06%)</title><rect width=".061%" height="15" x="79.73%" y="1061" fill="#D6CA36" fg:w="3" fg:x="3949"/></g><g><title>tcache_bin_flush_bottom (3 samples, 0.06%)</title><rect width=".061%" height="15" x="79.73%" y="1045" fill="#FEA528" fg:w="3" fg:x="3949"/></g><g><title>tcache_bin_flush_impl (3 samples, 0.06%)</title><rect width=".061%" height="15" x="79.73%" y="1029" fill="#F6AD26" fg:w="3" fg:x="3949"/></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.77%" y="1013" fill="#D7031B" fg:w="1" fg:x="3951"/></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.77%" y="997" fill="#EFA933" fg:w="1" fg:x="3951"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.12%)</title><rect width=".121%" height="15" x="79.709%" y="1205" fill="#D40519" fg:w="6" fg:x="3948"/></g><g><title>alloc::alloc::dealloc (6 samples, 0.12%)</title><rect width=".121%" height="15" x="79.709%" y="1189" fill="#F32D11" fg:w="6" fg:x="3948"/></g><g><title>__rust_dealloc (6 samples, 0.12%)</title><rect width=".121%" height="15" x="79.709%" y="1173" fill="#F26109" fg:w="6" fg:x="3948"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (6 samples, 0.12%)</title><rect width=".121%" height="15" x="79.709%" y="1157" fill="#E4471F" fg:w="6" fg:x="3948"/></g><g><title>_rjem_sdallocx (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.79%" y="1141" fill="#FCB810" fg:w="2" fg:x="3952"/></g><g><title>free_fastpath (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.79%" y="1125" fill="#ECA92E" fg:w="2" fg:x="3952"/></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.81%" y="1109" fill="#CF112F" fg:w="1" fg:x="3953"/></g><g><title>sz_size2index_lookup_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.81%" y="1093" fill="#CEC91C" fg:w="1" fg:x="3953"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.14%)</title><rect width=".141%" height="15" x="79.709%" y="1301" fill="#E0B817" fg:w="7" fg:x="3948"/></g><g><title>core::ptr::drop_in_place&lt;[json_benchmark::copy::citm_catalog::SeatCategory]&gt; (7 samples, 0.14%)</title><rect width=".141%" height="15" x="79.709%" y="1285" fill="#D08B30" fg:w="7" fg:x="3948"/></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt; (7 samples, 0.14%)</title><rect width=".141%" height="15" x="79.709%" y="1269" fill="#D0820A" fg:w="7" fg:x="3948"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::Area&gt;&gt; (7 samples, 0.14%)</title><rect width=".141%" height="15" x="79.709%" y="1253" fill="#D3D52D" fg:w="7" fg:x="3948"/></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::Area&gt;&gt; (7 samples, 0.14%)</title><rect width=".141%" height="15" x="79.709%" y="1237" fill="#EB641E" fg:w="7" fg:x="3948"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.14%)</title><rect width=".141%" height="15" x="79.709%" y="1221" fill="#CE901F" fg:w="7" fg:x="3948"/></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Performance&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.83%" y="1205" fill="#E0C81A" fg:w="1" fg:x="3954"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt;&gt; (9 samples, 0.18%)</title><rect width=".182%" height="15" x="79.709%" y="1317" fill="#F76835" fg:w="9" fg:x="3948"/></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.851%" y="1301" fill="#DC0E11" fg:w="2" fg:x="3955"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.851%" y="1285" fill="#E68C28" fg:w="2" fg:x="3955"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.851%" y="1269" fill="#E50229" fg:w="2" fg:x="3955"/></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.851%" y="1253" fill="#E85910" fg:w="2" fg:x="3955"/></g><g><title>__rust_dealloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.851%" y="1237" fill="#F73B34" fg:w="2" fg:x="3955"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.851%" y="1221" fill="#E26E15" fg:w="2" fg:x="3955"/></g><g><title>_rjem_je_sdallocx_default (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.851%" y="1205" fill="#E0B02B" fg:w="2" fg:x="3955"/></g><g><title>isfree (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.851%" y="1189" fill="#DD4906" fg:w="2" fg:x="3955"/></g><g><title>isdalloct (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.851%" y="1173" fill="#E84E13" fg:w="2" fg:x="3955"/></g><g><title>arena_sdalloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.851%" y="1157" fill="#E97030" fg:w="2" fg:x="3955"/></g><g><title>tcache_dalloc_small (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.851%" y="1141" fill="#F3832F" fg:w="2" fg:x="3955"/></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.851%" y="1125" fill="#E23301" fg:w="2" fg:x="3955"/></g><g><title>tcache_bin_flush_bottom (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.851%" y="1109" fill="#F73A07" fg:w="2" fg:x="3955"/></g><g><title>tcache_bin_flush_impl (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.851%" y="1093" fill="#D10720" fg:w="2" fg:x="3955"/></g><g><title>arena_dalloc_bin_locked_step (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.851%" y="1077" fill="#D12729" fg:w="2" fg:x="3955"/></g><g><title>bitmap_unset (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.851%" y="1061" fill="#E2B62E" fg:w="2" fg:x="3955"/></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.891%" y="1173" fill="#E6DB0A" fg:w="1" fg:x="3957"/></g><g><title>isfree (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.891%" y="1157" fill="#E3AF1E" fg:w="1" fg:x="3957"/></g><g><title>isdalloct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.891%" y="1141" fill="#D90232" fg:w="1" fg:x="3957"/></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.891%" y="1125" fill="#E5A000" fg:w="1" fg:x="3957"/></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.891%" y="1109" fill="#CF4E25" fg:w="1" fg:x="3957"/></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.891%" y="1093" fill="#E13900" fg:w="1" fg:x="3957"/></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.891%" y="1077" fill="#E89A02" fg:w="1" fg:x="3957"/></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.891%" y="1061" fill="#F1D419" fg:w="1" fg:x="3957"/></g><g><title>arena_dalloc_bin_locked_step (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.891%" y="1045" fill="#E24514" fg:w="1" fg:x="3957"/></g><g><title>edata_nfree_inc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.891%" y="1029" fill="#F7B836" fg:w="1" fg:x="3957"/></g><g><title>[unknown] (3,859 samples, 77.91%)</title><rect width="77.912%" height="15" x="2.019%" y="1589" fill="#D29100" fg:w="3859" fg:x="100"/><text x="2.269%" y="1599.5">[unknown]</text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog (3,859 samples, 77.91%)</title><rect width="77.912%" height="15" x="2.019%" y="1573" fill="#FD520C" fg:w="3859" fg:x="100"/><text x="2.269%" y="1583.5">deserialize_struct::bench_citm_catalog_CitmCatalog</text></g><g><title>?? (3,859 samples, 77.91%)</title><rect width="77.912%" height="15" x="2.019%" y="1557" fill="#F52A0B" fg:w="3859" fg:x="100"/><text x="2.269%" y="1567.5">??</text></g><g><title>?? (3,859 samples, 77.91%)</title><rect width="77.912%" height="15" x="2.019%" y="1541" fill="#DB9320" fg:w="3859" fg:x="100"/><text x="2.269%" y="1551.5">??</text></g><g><title>criterion::routine::Routine::profile (3,859 samples, 77.91%)</title><rect width="77.912%" height="15" x="2.019%" y="1525" fill="#F60C07" fg:w="3859" fg:x="100"/><text x="2.269%" y="1535.5">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (571 samples, 11.53%)</title><rect width="11.528%" height="15" x="68.403%" y="1509" fill="#F33209" fg:w="571" fg:x="3388"/><text x="68.653%" y="1519.5">&lt;criterion::routi..</text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}} (571 samples, 11.53%)</title><rect width="11.528%" height="15" x="68.403%" y="1493" fill="#DB9506" fg:w="571" fg:x="3388"/><text x="68.653%" y="1503.5">deserialize_struc..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter_batched (571 samples, 11.53%)</title><rect width="11.528%" height="15" x="68.403%" y="1477" fill="#F1332A" fg:w="571" fg:x="3388"/><text x="68.653%" y="1487.5">criterion::benche..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,sonic_rs::error::Error&gt;&gt;&gt; (25 samples, 0.50%)</title><rect width=".505%" height="15" x="79.427%" y="1461" fill="#E2801B" fg:w="25" fg:x="3934"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.50%)</title><rect width=".505%" height="15" x="79.427%" y="1445" fill="#F49004" fg:w="25" fg:x="3934"/></g><g><title>core::ptr::drop_in_place&lt;[core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,sonic_rs::error::Error&gt;]&gt; (25 samples, 0.50%)</title><rect width=".505%" height="15" x="79.427%" y="1429" fill="#DD040D" fg:w="25" fg:x="3934"/></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,sonic_rs::error::Error&gt;&gt; (25 samples, 0.50%)</title><rect width=".505%" height="15" x="79.427%" y="1413" fill="#D0AA1C" fg:w="25" fg:x="3934"/></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::CitmCatalog&gt; (25 samples, 0.50%)</title><rect width=".505%" height="15" x="79.427%" y="1397" fill="#E2830D" fg:w="25" fg:x="3934"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::Performance&gt;&gt; (13 samples, 0.26%)</title><rect width=".263%" height="15" x="79.669%" y="1381" fill="#D74829" fg:w="13" fg:x="3946"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.26%)</title><rect width=".263%" height="15" x="79.669%" y="1365" fill="#F36C14" fg:w="13" fg:x="3946"/></g><g><title>core::ptr::drop_in_place&lt;[json_benchmark::copy::citm_catalog::Performance]&gt; (13 samples, 0.26%)</title><rect width=".263%" height="15" x="79.669%" y="1349" fill="#E6BD11" fg:w="13" fg:x="3946"/></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Performance&gt; (12 samples, 0.24%)</title><rect width=".242%" height="15" x="79.689%" y="1333" fill="#DC3211" fg:w="12" fg:x="3947"/></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.891%" y="1317" fill="#F89830" fg:w="2" fg:x="3957"/></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.891%" y="1301" fill="#F45B0B" fg:w="2" fg:x="3957"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.891%" y="1285" fill="#DC9D05" fg:w="2" fg:x="3957"/></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.891%" y="1269" fill="#FD8908" fg:w="2" fg:x="3957"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.891%" y="1253" fill="#D98933" fg:w="2" fg:x="3957"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.891%" y="1237" fill="#DAD135" fg:w="2" fg:x="3957"/></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.891%" y="1221" fill="#F98919" fg:w="2" fg:x="3957"/></g><g><title>__rust_dealloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.891%" y="1205" fill="#EF9B1A" fg:w="2" fg:x="3957"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.891%" y="1189" fill="#E3552E" fg:w="2" fg:x="3957"/></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.911%" y="1173" fill="#FB6B2B" fg:w="1" fg:x="3958"/></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.911%" y="1157" fill="#EAAA21" fg:w="1" fg:x="3958"/></g><g><title>cache_bin_dalloc_easy (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.911%" y="1141" fill="#CE1D23" fg:w="1" fg:x="3958"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.931%" y="1589" fill="#E38A19" fg:w="1" fg:x="3959"/></g><g><title>arena_bin_refill_slabcur_no_fresh_slab (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.931%" y="1573" fill="#F98323" fg:w="1" fg:x="3959"/></g><g><title>arena_bin_slabs_nonfull_tryget (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.931%" y="1557" fill="#EF0628" fg:w="1" fg:x="3959"/></g><g><title>_rjem_je_edata_heap_remove_first (1 samples, 0.02%)</title><rect width=".02%" height="15" x="79.931%" y="1541" fill="#F6882F" fg:w="1" fg:x="3959"/></g><g><title>_rjem_je_arena_ralloc_no_move (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.951%" y="1573" fill="#FD3A1A" fg:w="2" fg:x="3960"/></g><g><title>_rjem_je_arena_ralloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="79.951%" y="1589" fill="#ED8D0A" fg:w="4" fg:x="3960"/></g><g><title>_rjem_je_hook_invoke_alloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="79.992%" y="1573" fill="#EA9C0C" fg:w="2" fg:x="3962"/></g><g><title>criterion::Criterion&lt;M&gt;::configure_from_args (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="1333" fill="#F3E024" fg:w="1" fg:x="3964"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="1317" fill="#CDE533" fg:w="1" fg:x="3964"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="1301" fill="#DFBD04" fg:w="1" fg:x="3964"/></g><g><title>criterion::Criterion&lt;M&gt;::configure_from_args (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="1285" fill="#F9A736" fg:w="1" fg:x="3964"/></g><g><title>clap_builder::builder::command::Command::_do_parse (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="1269" fill="#DA221C" fg:w="1" fg:x="3964"/></g><g><title>clap_builder::parser::parser::Parser::get_matches_with (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="1253" fill="#E86D2A" fg:w="1" fg:x="3964"/></g><g><title>clap_builder::parser::parser::Parser::resolve_pending (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="1237" fill="#F8D62E" fg:w="1" fg:x="3964"/></g><g><title>clap_builder::parser::parser::Parser::react (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="1221" fill="#F4D828" fg:w="1" fg:x="3964"/></g><g><title>clap_builder::parser::parser::Parser::start_custom_arg (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="1205" fill="#E7E21F" fg:w="1" fg:x="3964"/></g><g><title>clap_builder::parser::parser::Parser::start_custom_arg (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="1189" fill="#EE262B" fg:w="1" fg:x="3964"/></g><g><title>clap_builder::parser::matches::matched_arg::MatchedArg::new_val_group (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="1173" fill="#D0582B" fg:w="1" fg:x="3964"/></g><g><title>clap_builder::parser::matches::matched_arg::MatchedArg::new_val_group (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="1157" fill="#CD8825" fg:w="1" fg:x="3964"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="1141" fill="#ED220E" fg:w="1" fg:x="3964"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="1125" fill="#ECC12C" fg:w="1" fg:x="3964"/></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="1109" fill="#E7300A" fg:w="1" fg:x="3964"/></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="1093" fill="#D58D22" fg:w="1" fg:x="3964"/></g><g><title>imalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="1077" fill="#F98222" fg:w="1" fg:x="3964"/></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="1061" fill="#DB2A29" fg:w="1" fg:x="3964"/></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="1045" fill="#E06436" fg:w="1" fg:x="3964"/></g><g><title>iallocztm (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="1029" fill="#E5C81B" fg:w="1" fg:x="3964"/></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="1013" fill="#D9760A" fg:w="1" fg:x="3964"/></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="997" fill="#CE1603" fg:w="1" fg:x="3964"/></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="981" fill="#E8A32E" fg:w="1" fg:x="3964"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.032%" y="965" fill="#CE5F0D" fg:w="1" fg:x="3964"/></g><g><title>&lt;criterion::Criterion as core::default::Default&gt;::default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.052%" y="1317" fill="#FD9A12" fg:w="1" fg:x="3965"/></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.052%" y="1301" fill="#DB2017" fg:w="1" fg:x="3965"/></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.052%" y="1285" fill="#E6BF2D" fg:w="1" fg:x="3965"/></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.052%" y="1269" fill="#E54024" fg:w="1" fg:x="3965"/></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.052%" y="1253" fill="#CD8119" fg:w="1" fg:x="3965"/></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.052%" y="1237" fill="#FE7007" fg:w="1" fg:x="3965"/></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::ignore_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.052%" y="1221" fill="#E23530" fg:w="1" fg:x="3965"/></g><g><title>criterion::Criterion&lt;M&gt;::configure_from_args (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.073%" y="1317" fill="#D69926" fg:w="1" fg:x="3966"/></g><g><title>criterion::debug_enabled (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.073%" y="1301" fill="#F36507" fg:w="1" fg:x="3966"/></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.073%" y="1285" fill="#F08C16" fg:w="1" fg:x="3966"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.073%" y="1269" fill="#EB7202" fg:w="1" fg:x="3966"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.073%" y="1253" fill="#F23B0C" fg:w="1" fg:x="3966"/></g><g><title>criterion::Criterion&lt;M&gt;::configure_from_args (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.073%" y="1237" fill="#FC8609" fg:w="1" fg:x="3966"/></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.073%" y="1221" fill="#EC042C" fg:w="1" fg:x="3966"/></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.073%" y="1205" fill="#FEAC29" fg:w="1" fg:x="3966"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.093%" y="1013" fill="#F43F14" fg:w="1" fg:x="3967"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="80.234%" y="709" fill="#FA491F" fg:w="4" fg:x="3974"/></g><g><title>?? (5 samples, 0.10%)</title><rect width=".101%" height="15" x="80.234%" y="757" fill="#F12624" fg:w="5" fg:x="3974"/></g><g><title>?? (5 samples, 0.10%)</title><rect width=".101%" height="15" x="80.234%" y="741" fill="#F5D302" fg:w="5" fg:x="3974"/></g><g><title>?? (5 samples, 0.10%)</title><rect width=".101%" height="15" x="80.234%" y="725" fill="#CE781C" fg:w="5" fg:x="3974"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.315%" y="709" fill="#D33B22" fg:w="1" fg:x="3978"/></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.315%" y="693" fill="#E9A805" fg:w="1" fg:x="3978"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.315%" y="677" fill="#EA210D" fg:w="1" fg:x="3978"/></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.315%" y="661" fill="#E7961A" fg:w="1" fg:x="3978"/></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.315%" y="645" fill="#D9BF04" fg:w="1" fg:x="3978"/></g><g><title>&lt;u32 as core::num::FromStrRadixHelper&gt;::checked_add (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.396%" y="693" fill="#F6C626" fg:w="1" fg:x="3982"/></g><g><title>core::num::&lt;impl u32&gt;::checked_add (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.396%" y="677" fill="#F54025" fg:w="1" fg:x="3982"/></g><g><title>core::num::&lt;impl u32&gt;::overflowing_add (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.396%" y="661" fill="#FA1E24" fg:w="1" fg:x="3982"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (17 samples, 0.34%)</title><rect width=".343%" height="15" x="80.194%" y="821" fill="#D95635" fg:w="17" fg:x="3972"/></g><g><title>&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as serde::de::Deserialize&gt;::deserialize (15 samples, 0.30%)</title><rect width=".303%" height="15" x="80.234%" y="805" fill="#E49D10" fg:w="15" fg:x="3974"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (15 samples, 0.30%)</title><rect width=".303%" height="15" x="80.234%" y="789" fill="#D93B1F" fg:w="15" fg:x="3974"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15 samples, 0.30%)</title><rect width=".303%" height="15" x="80.234%" y="773" fill="#ED8A29" fg:w="15" fg:x="3974"/></g><g><title>serde::de::Visitor::visit_borrowed_str (10 samples, 0.20%)</title><rect width=".202%" height="15" x="80.335%" y="757" fill="#E35B31" fg:w="10" fg:x="3979"/></g><g><title>&lt;&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as serde::de::Deserialize&gt;::deserialize::Visitor&lt;T&gt; as serde::de::Visitor&gt;::visit_str (10 samples, 0.20%)</title><rect width=".202%" height="15" x="80.335%" y="741" fill="#F7152C" fg:w="10" fg:x="3979"/></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u32&gt;::from_str (10 samples, 0.20%)</title><rect width=".202%" height="15" x="80.335%" y="725" fill="#DBD233" fg:w="10" fg:x="3979"/></g><g><title>core::num::from_str_radix (10 samples, 0.20%)</title><rect width=".202%" height="15" x="80.335%" y="709" fill="#D18C06" fg:w="10" fg:x="3979"/></g><g><title>&lt;u32 as core::num::FromStrRadixHelper&gt;::checked_mul (6 samples, 0.12%)</title><rect width=".121%" height="15" x="80.416%" y="693" fill="#DDBC18" fg:w="6" fg:x="3983"/></g><g><title>core::num::&lt;impl u32&gt;::checked_mul (6 samples, 0.12%)</title><rect width=".121%" height="15" x="80.416%" y="677" fill="#E89A14" fg:w="6" fg:x="3983"/></g><g><title>core::num::&lt;impl u32&gt;::overflowing_mul (6 samples, 0.12%)</title><rect width=".121%" height="15" x="80.416%" y="661" fill="#F48932" fg:w="6" fg:x="3983"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.537%" y="805" fill="#E1B92B" fg:w="1" fg:x="3989"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (20 samples, 0.40%)</title><rect width=".404%" height="15" x="80.194%" y="837" fill="#D5CD26" fg:w="20" fg:x="3972"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="80.537%" y="821" fill="#EC490C" fg:w="3" fg:x="3989"/></g><g><title>sonic_rs::reader::Reader::next (2 samples, 0.04%)</title><rect width=".04%" height="15" x="80.557%" y="805" fill="#EBDB0D" fg:w="2" fg:x="3990"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect width=".04%" height="15" x="80.557%" y="789" fill="#DA3B24" fg:w="2" fg:x="3990"/></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.06%)</title><rect width=".061%" height="15" x="80.598%" y="757" fill="#CD6E27" fg:w="3" fg:x="3992"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for ()&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="80.658%" y="709" fill="#DACE2A" fg:w="2" fg:x="3995"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_unit (2 samples, 0.04%)</title><rect width=".04%" height="15" x="80.658%" y="693" fill="#F87D18" fg:w="2" fg:x="3995"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="80.658%" y="677" fill="#F21C1B" fg:w="2" fg:x="3995"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::next_n (2 samples, 0.04%)</title><rect width=".04%" height="15" x="80.658%" y="661" fill="#D8E40F" fg:w="2" fg:x="3995"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.699%" y="661" fill="#EB742E" fg:w="1" fg:x="3997"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.699%" y="645" fill="#E01220" fg:w="1" fg:x="3997"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.699%" y="629" fill="#FC050C" fg:w="1" fg:x="3997"/></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.699%" y="613" fill="#FB2405" fg:w="1" fg:x="3997"/></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="405" fill="#D9350E" fg:w="1" fg:x="3998"/></g><g><title>imalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="389" fill="#D7562D" fg:w="1" fg:x="3998"/></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="373" fill="#F2A90B" fg:w="1" fg:x="3998"/></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="357" fill="#D3D52D" fg:w="1" fg:x="3998"/></g><g><title>iallocztm (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="341" fill="#CD580B" fg:w="1" fg:x="3998"/></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="325" fill="#FC451A" fg:w="1" fg:x="3998"/></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="309" fill="#F67B25" fg:w="1" fg:x="3998"/></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="293" fill="#D4CD05" fg:w="1" fg:x="3998"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="277" fill="#FD9400" fg:w="1" fg:x="3998"/></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="261" fill="#EF1604" fg:w="1" fg:x="3998"/></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="245" fill="#E21A35" fg:w="1" fg:x="3998"/></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="229" fill="#E1E52D" fg:w="1" fg:x="3998"/></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="213" fill="#DC3C25" fg:w="1" fg:x="3998"/></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="197" fill="#D9B423" fg:w="1" fg:x="3998"/></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="181" fill="#E50735" fg:w="1" fg:x="3998"/></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="165" fill="#FE8903" fg:w="1" fg:x="3998"/></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="149" fill="#D78C29" fg:w="1" fg:x="3998"/></g><g><title>extent_activate_locked (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="133" fill="#FA500F" fg:w="1" fg:x="3998"/></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="117" fill="#FCBF06" fg:w="1" fg:x="3998"/></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="101" fill="#F6D912" fg:w="1" fg:x="3998"/></g><g><title>ph_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="85" fill="#DF5D07" fg:w="1" fg:x="3998"/></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="69" fill="#E13734" fg:w="1" fg:x="3998"/></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="53" fill="#F01F18" fg:w="1" fg:x="3998"/></g><g><title>phn_next_set (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.719%" y="37" fill="#CD3834" fg:w="1" fg:x="3998"/></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.739%" y="373" fill="#F6920C" fg:w="1" fg:x="3999"/></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.739%" y="357" fill="#EF5424" fg:w="1" fg:x="3999"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="80.699%" y="709" fill="#CF2928" fg:w="4" fg:x="3997"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (4 samples, 0.08%)</title><rect width=".081%" height="15" x="80.699%" y="693" fill="#F1B319" fg:w="4" fg:x="3997"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (4 samples, 0.08%)</title><rect width=".081%" height="15" x="80.699%" y="677" fill="#D20022" fg:w="4" fg:x="3997"/></g><g><title>serde::de::Visitor::visit_borrowed_str (3 samples, 0.06%)</title><rect width=".061%" height="15" x="80.719%" y="661" fill="#E1D91D" fg:w="3" fg:x="3998"/></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (3 samples, 0.06%)</title><rect width=".061%" height="15" x="80.719%" y="645" fill="#D8BF26" fg:w="3" fg:x="3998"/></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.06%)</title><rect width=".061%" height="15" x="80.719%" y="629" fill="#E88C34" fg:w="3" fg:x="3998"/></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.06%)</title><rect width=".061%" height="15" x="80.719%" y="613" fill="#DF9E33" fg:w="3" fg:x="3998"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.06%)</title><rect width=".061%" height="15" x="80.719%" y="597" fill="#EB1D33" fg:w="3" fg:x="3998"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.06%)</title><rect width=".061%" height="15" x="80.719%" y="581" fill="#D7B512" fg:w="3" fg:x="3998"/></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.06%)</title><rect width=".061%" height="15" x="80.719%" y="565" fill="#E37D22" fg:w="3" fg:x="3998"/></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.06%)</title><rect width=".061%" height="15" x="80.719%" y="549" fill="#E6C531" fg:w="3" fg:x="3998"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="80.719%" y="533" fill="#EF8D10" fg:w="3" fg:x="3998"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="80.719%" y="517" fill="#E1692B" fg:w="3" fg:x="3998"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="80.719%" y="501" fill="#D6830E" fg:w="3" fg:x="3998"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.06%)</title><rect width=".061%" height="15" x="80.719%" y="485" fill="#E5B10B" fg:w="3" fg:x="3998"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="80.719%" y="469" fill="#E7B40E" fg:w="3" fg:x="3998"/></g><g><title>alloc::alloc::alloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="80.719%" y="453" fill="#E85802" fg:w="3" fg:x="3998"/></g><g><title>__rust_alloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="80.719%" y="437" fill="#CDDC08" fg:w="3" fg:x="3998"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="80.719%" y="421" fill="#E11735" fg:w="3" fg:x="3998"/></g><g><title>_rjem_malloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="80.739%" y="405" fill="#D53E1D" fg:w="2" fg:x="3999"/></g><g><title>imalloc_fastpath (2 samples, 0.04%)</title><rect width=".04%" height="15" x="80.739%" y="389" fill="#E34B07" fg:w="2" fg:x="3999"/></g><g><title>sz_size2index_usize_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.759%" y="373" fill="#CF690E" fg:w="1" fg:x="4000"/></g><g><title>sz_size2index_lookup_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.759%" y="357" fill="#F53E1D" fg:w="1" fg:x="4000"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.82%" y="629" fill="#ECCA04" fg:w="1" fg:x="4003"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.82%" y="613" fill="#FA4301" fg:w="1" fg:x="4003"/></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.82%" y="597" fill="#FD732C" fg:w="1" fg:x="4003"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.86%" y="597" fill="#FB8B12" fg:w="1" fg:x="4005"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.86%" y="581" fill="#DA1620" fg:w="1" fg:x="4005"/></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.86%" y="565" fill="#F33505" fg:w="1" fg:x="4005"/></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.86%" y="549" fill="#E33810" fg:w="1" fg:x="4005"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.86%" y="533" fill="#F53500" fg:w="1" fg:x="4005"/></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.86%" y="517" fill="#D8AA23" fg:w="1" fg:x="4005"/></g><g><title>emap_alloc_ctx_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.86%" y="501" fill="#D3C808" fg:w="1" fg:x="4005"/></g><g><title>rtree_metadata_read (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.86%" y="485" fill="#E4CC2C" fg:w="1" fg:x="4005"/></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.86%" y="469" fill="#D67911" fg:w="1" fg:x="4005"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.10%)</title><rect width=".101%" height="15" x="80.82%" y="661" fill="#E94026" fg:w="5" fg:x="4003"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.10%)</title><rect width=".101%" height="15" x="80.82%" y="645" fill="#FD3613" fg:w="5" fg:x="4003"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.08%)</title><rect width=".081%" height="15" x="80.84%" y="629" fill="#FD5E12" fg:w="4" fg:x="4004"/></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.08%)</title><rect width=".081%" height="15" x="80.84%" y="613" fill="#E33934" fg:w="4" fg:x="4004"/></g><g><title>_rjem_malloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="80.88%" y="597" fill="#E6E432" fg:w="2" fg:x="4006"/></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.9%" y="581" fill="#D9CD1B" fg:w="1" fg:x="4007"/></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.9%" y="565" fill="#FC4732" fg:w="1" fg:x="4007"/></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="80.9%" y="549" fill="#D15604" fg:w="1" fg:x="4007"/></g><g><title>sonic_rs::reader::Reader::next (2 samples, 0.04%)</title><rect width=".04%" height="15" x="81.001%" y="613" fill="#E55E00" fg:w="2" fg:x="4012"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect width=".04%" height="15" x="81.001%" y="597" fill="#FCDF15" fg:w="2" fg:x="4012"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="81.001%" y="629" fill="#E6D204" fg:w="3" fg:x="4012"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.042%" y="613" fill="#F09526" fg:w="1" fg:x="4014"/></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.042%" y="597" fill="#FE6914" fg:w="1" fg:x="4014"/></g><g><title>serde::de::SeqAccess::next_element (5 samples, 0.10%)</title><rect width=".101%" height="15" x="81.062%" y="629" fill="#FD572E" fg:w="5" fg:x="4015"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u64 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.163%" y="565" fill="#FD7421" fg:w="1" fg:x="4020"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.183%" y="565" fill="#E5C605" fg:w="1" fg:x="4021"/></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.183%" y="549" fill="#F22625" fg:w="1" fg:x="4021"/></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (2 samples, 0.04%)</title><rect width=".04%" height="15" x="81.244%" y="549" fill="#F24535" fg:w="2" fg:x="4024"/></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (2 samples, 0.04%)</title><rect width=".04%" height="15" x="81.244%" y="533" fill="#F95010" fg:w="2" fg:x="4024"/></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (3 samples, 0.06%)</title><rect width=".061%" height="15" x="81.284%" y="549" fill="#CE800B" fg:w="3" fg:x="4026"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (29 samples, 0.59%)</title><rect width=".586%" height="15" x="80.779%" y="709" fill="#D42314" fg:w="29" fg:x="4001"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (29 samples, 0.59%)</title><rect width=".586%" height="15" x="80.779%" y="693" fill="#EC4F0D" fg:w="29" fg:x="4001"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (28 samples, 0.57%)</title><rect width=".565%" height="15" x="80.799%" y="677" fill="#E97B03" fg:w="28" fg:x="4002"/></g><g><title>serde::de::SeqAccess::next_element (22 samples, 0.44%)</title><rect width=".444%" height="15" x="80.921%" y="661" fill="#D65D34" fg:w="22" fg:x="4008"/></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (20 samples, 0.40%)</title><rect width=".404%" height="15" x="80.961%" y="645" fill="#FB2528" fg:w="20" fg:x="4010"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (10 samples, 0.20%)</title><rect width=".202%" height="15" x="81.163%" y="629" fill="#E35036" fg:w="10" fg:x="4020"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (10 samples, 0.20%)</title><rect width=".202%" height="15" x="81.163%" y="613" fill="#FE300B" fg:w="10" fg:x="4020"/></g><g><title>?? (10 samples, 0.20%)</title><rect width=".202%" height="15" x="81.163%" y="597" fill="#EBC11A" fg:w="10" fg:x="4020"/></g><g><title>?? (10 samples, 0.20%)</title><rect width=".202%" height="15" x="81.163%" y="581" fill="#E56315" fg:w="10" fg:x="4020"/></g><g><title>sonic_rs::util::num::parse_number_unchecked (8 samples, 0.16%)</title><rect width=".162%" height="15" x="81.203%" y="565" fill="#D38C29" fg:w="8" fg:x="4022"/></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.345%" y="549" fill="#F0E31E" fg:w="1" fg:x="4029"/></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="677" fill="#D7E02D" fg:w="1" fg:x="4030"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="661" fill="#CE7B1F" fg:w="1" fg:x="4030"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="645" fill="#D28A10" fg:w="1" fg:x="4030"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="629" fill="#E4391C" fg:w="1" fg:x="4030"/></g><g><title>serde::de::Visitor::visit_borrowed_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="613" fill="#F2AA0A" fg:w="1" fg:x="4030"/></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="597" fill="#E4D627" fg:w="1" fg:x="4030"/></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="581" fill="#DAB321" fg:w="1" fg:x="4030"/></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="565" fill="#EBC127" fg:w="1" fg:x="4030"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="549" fill="#DBDD24" fg:w="1" fg:x="4030"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="533" fill="#F8DA13" fg:w="1" fg:x="4030"/></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="517" fill="#CD3209" fg:w="1" fg:x="4030"/></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="501" fill="#EE511C" fg:w="1" fg:x="4030"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="485" fill="#EB6E13" fg:w="1" fg:x="4030"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="469" fill="#D6070E" fg:w="1" fg:x="4030"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="453" fill="#D34D03" fg:w="1" fg:x="4030"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="437" fill="#E50509" fg:w="1" fg:x="4030"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="421" fill="#E15A0B" fg:w="1" fg:x="4030"/></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="405" fill="#F23808" fg:w="1" fg:x="4030"/></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="389" fill="#F9D427" fg:w="1" fg:x="4030"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="373" fill="#EC5A09" fg:w="1" fg:x="4030"/></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="357" fill="#CE5823" fg:w="1" fg:x="4030"/></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="341" fill="#CD7E1E" fg:w="1" fg:x="4030"/></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="325" fill="#E6B00C" fg:w="1" fg:x="4030"/></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.365%" y="309" fill="#F31309" fg:w="1" fg:x="4030"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::backward (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.385%" y="661" fill="#F5AB11" fg:w="1" fg:x="4031"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="81.365%" y="709" fill="#E33415" fg:w="3" fg:x="4030"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (3 samples, 0.06%)</title><rect width=".061%" height="15" x="81.365%" y="693" fill="#EE450E" fg:w="3" fg:x="4030"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="81.385%" y="677" fill="#F19C27" fg:w="2" fg:x="4031"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.405%" y="661" fill="#D4E31C" fg:w="1" fg:x="4032"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.405%" y="645" fill="#D1761B" fg:w="1" fg:x="4032"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.405%" y="629" fill="#E26605" fg:w="1" fg:x="4032"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.405%" y="613" fill="#DF2203" fg:w="1" fg:x="4032"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.405%" y="597" fill="#DD5126" fg:w="1" fg:x="4032"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.446%" y="677" fill="#ECDB1C" fg:w="1" fg:x="4034"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.446%" y="661" fill="#D5C80E" fg:w="1" fg:x="4034"/></g><g><title>sonic_rs::util::num::parse_number_unchecked (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.446%" y="645" fill="#F02113" fg:w="1" fg:x="4034"/></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.446%" y="629" fill="#E9711B" fg:w="1" fg:x="4034"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (41 samples, 0.83%)</title><rect width=".828%" height="15" x="80.658%" y="757" fill="#DCDD12" fg:w="41" fg:x="3995"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (41 samples, 0.83%)</title><rect width=".828%" height="15" x="80.658%" y="741" fill="#EE5C08" fg:w="41" fg:x="3995"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (41 samples, 0.83%)</title><rect width=".828%" height="15" x="80.658%" y="725" fill="#DEA410" fg:w="41" fg:x="3995"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="81.425%" y="709" fill="#F17703" fg:w="3" fg:x="4033"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (2 samples, 0.04%)</title><rect width=".04%" height="15" x="81.446%" y="693" fill="#F12C08" fg:w="2" fg:x="4034"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.466%" y="677" fill="#E62428" fg:w="1" fg:x="4035"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (4 samples, 0.08%)</title><rect width=".081%" height="15" x="81.627%" y="661" fill="#F31024" fg:w="4" fg:x="4043"/></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="81.668%" y="645" fill="#E7041A" fg:w="2" fg:x="4045"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="81.668%" y="629" fill="#F0091F" fg:w="2" fg:x="4045"/></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="81.668%" y="613" fill="#CFAD0F" fg:w="2" fg:x="4045"/></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.04%)</title><rect width=".04%" height="15" x="81.668%" y="597" fill="#E0C035" fg:w="2" fg:x="4045"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="81.708%" y="613" fill="#DF431C" fg:w="2" fg:x="4047"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.748%" y="613" fill="#D3142F" fg:w="1" fg:x="4049"/></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.748%" y="597" fill="#F0E402" fg:w="1" fg:x="4049"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.748%" y="581" fill="#F8970C" fg:w="1" fg:x="4049"/></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.748%" y="565" fill="#F40827" fg:w="1" fg:x="4049"/></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.748%" y="549" fill="#DE1A08" fg:w="1" fg:x="4049"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12 samples, 0.24%)</title><rect width=".242%" height="15" x="81.546%" y="725" fill="#D56A2C" fg:w="12" fg:x="4039"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (8 samples, 0.16%)</title><rect width=".162%" height="15" x="81.627%" y="709" fill="#D68114" fg:w="8" fg:x="4043"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (8 samples, 0.16%)</title><rect width=".162%" height="15" x="81.627%" y="693" fill="#D4200D" fg:w="8" fg:x="4043"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.16%)</title><rect width=".162%" height="15" x="81.627%" y="677" fill="#D0A821" fg:w="8" fg:x="4043"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="81.708%" y="661" fill="#E7CF08" fg:w="4" fg:x="4047"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="81.708%" y="645" fill="#EBDB17" fg:w="4" fg:x="4047"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="81.708%" y="629" fill="#E2D81A" fg:w="4" fg:x="4047"/></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.769%" y="613" fill="#EF8910" fg:w="1" fg:x="4050"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.789%" y="709" fill="#CF0C24" fg:w="1" fg:x="4051"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.809%" y="709" fill="#D2D618" fg:w="1" fg:x="4052"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.809%" y="693" fill="#CE381E" fg:w="1" fg:x="4052"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize (63 samples, 1.27%)</title><rect width="1.272%" height="15" x="80.598%" y="805" fill="#E48F1A" fg:w="63" fg:x="3992"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (63 samples, 1.27%)</title><rect width="1.272%" height="15" x="80.598%" y="789" fill="#D8DA2E" fg:w="63" fg:x="3992"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (63 samples, 1.27%)</title><rect width="1.272%" height="15" x="80.598%" y="773" fill="#CE0613" fg:w="63" fg:x="3992"/></g><g><title>serde::de::MapAccess::next_key (19 samples, 0.38%)</title><rect width=".384%" height="15" x="81.486%" y="757" fill="#EFB133" fg:w="19" fg:x="4036"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (19 samples, 0.38%)</title><rect width=".384%" height="15" x="81.486%" y="741" fill="#D83719" fg:w="19" fg:x="4036"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="81.789%" y="725" fill="#E7A31D" fg:w="4" fg:x="4051"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (2 samples, 0.04%)</title><rect width=".04%" height="15" x="81.829%" y="709" fill="#E89532" fg:w="2" fg:x="4053"/></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.849%" y="693" fill="#DF8E30" fg:w="1" fg:x="4054"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.87%" y="757" fill="#F55317" fg:w="1" fg:x="4055"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.87%" y="741" fill="#E03F02" fg:w="1" fg:x="4055"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.87%" y="725" fill="#DA4135" fg:w="1" fg:x="4055"/></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.89%" y="501" fill="#DD541D" fg:w="1" fg:x="4056"/></g><g><title>imalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.89%" y="485" fill="#EA0020" fg:w="1" fg:x="4056"/></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.89%" y="469" fill="#CE1410" fg:w="1" fg:x="4056"/></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.89%" y="453" fill="#F4AC12" fg:w="1" fg:x="4056"/></g><g><title>iallocztm (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.89%" y="437" fill="#FE8501" fg:w="1" fg:x="4056"/></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.89%" y="421" fill="#DECE29" fg:w="1" fg:x="4056"/></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.89%" y="405" fill="#D4032A" fg:w="1" fg:x="4056"/></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.89%" y="389" fill="#F10B04" fg:w="1" fg:x="4056"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.89%" y="373" fill="#CD131A" fg:w="1" fg:x="4056"/></g><g><title>edata_nfree_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.89%" y="357" fill="#D2B320" fg:w="1" fg:x="4056"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="81.87%" y="805" fill="#E37431" fg:w="4" fg:x="4055"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (4 samples, 0.08%)</title><rect width=".081%" height="15" x="81.87%" y="789" fill="#D39206" fg:w="4" fg:x="4055"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (4 samples, 0.08%)</title><rect width=".081%" height="15" x="81.87%" y="773" fill="#DB2C27" fg:w="4" fg:x="4055"/></g><g><title>serde::de::Visitor::visit_borrowed_str (3 samples, 0.06%)</title><rect width=".061%" height="15" x="81.89%" y="757" fill="#EA800B" fg:w="3" fg:x="4056"/></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (3 samples, 0.06%)</title><rect width=".061%" height="15" x="81.89%" y="741" fill="#DCB735" fg:w="3" fg:x="4056"/></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.06%)</title><rect width=".061%" height="15" x="81.89%" y="725" fill="#D5DB20" fg:w="3" fg:x="4056"/></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.06%)</title><rect width=".061%" height="15" x="81.89%" y="709" fill="#E89C10" fg:w="3" fg:x="4056"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.06%)</title><rect width=".061%" height="15" x="81.89%" y="693" fill="#F68722" fg:w="3" fg:x="4056"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.06%)</title><rect width=".061%" height="15" x="81.89%" y="677" fill="#F16300" fg:w="3" fg:x="4056"/></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.06%)</title><rect width=".061%" height="15" x="81.89%" y="661" fill="#DE672D" fg:w="3" fg:x="4056"/></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.06%)</title><rect width=".061%" height="15" x="81.89%" y="645" fill="#D43904" fg:w="3" fg:x="4056"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="81.89%" y="629" fill="#D7442F" fg:w="3" fg:x="4056"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="81.89%" y="613" fill="#E65402" fg:w="3" fg:x="4056"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="81.89%" y="597" fill="#DC660E" fg:w="3" fg:x="4056"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.06%)</title><rect width=".061%" height="15" x="81.89%" y="581" fill="#F00A20" fg:w="3" fg:x="4056"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="81.89%" y="565" fill="#D72F1B" fg:w="3" fg:x="4056"/></g><g><title>alloc::alloc::alloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="81.89%" y="549" fill="#E9BC2B" fg:w="3" fg:x="4056"/></g><g><title>__rust_alloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="81.89%" y="533" fill="#FDBE01" fg:w="3" fg:x="4056"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="81.89%" y="517" fill="#CE7234" fg:w="3" fg:x="4056"/></g><g><title>_rjem_malloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="81.91%" y="501" fill="#E97825" fg:w="2" fg:x="4057"/></g><g><title>imalloc_fastpath (2 samples, 0.04%)</title><rect width=".04%" height="15" x="81.91%" y="485" fill="#D63427" fg:w="2" fg:x="4057"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.95%" y="757" fill="#DF501D" fg:w="1" fg:x="4059"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.95%" y="741" fill="#E66528" fg:w="1" fg:x="4059"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.95%" y="725" fill="#DBD308" fg:w="1" fg:x="4059"/></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.95%" y="709" fill="#FC7E1C" fg:w="1" fg:x="4059"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.95%" y="693" fill="#D73826" fg:w="1" fg:x="4059"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.95%" y="677" fill="#F9372C" fg:w="1" fg:x="4059"/></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.95%" y="661" fill="#DCDD20" fg:w="1" fg:x="4059"/></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.95%" y="645" fill="#D4D829" fg:w="1" fg:x="4059"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.95%" y="629" fill="#E4D52B" fg:w="1" fg:x="4059"/></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.95%" y="613" fill="#D31F1A" fg:w="1" fg:x="4059"/></g><g><title>aligned_usize_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.95%" y="597" fill="#E5CA13" fg:w="1" fg:x="4059"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_entry (89 samples, 1.80%)</title><rect width="1.797%" height="15" x="80.194%" y="869" fill="#E5692E" fg:w="89" fg:x="3972"/><text x="80.444%" y="879.5">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry_seed (89 samples, 1.80%)</title><rect width="1.797%" height="15" x="80.194%" y="853" fill="#EB6C01" fg:w="89" fg:x="3972"/><text x="80.444%" y="863.5">s..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (69 samples, 1.39%)</title><rect width="1.393%" height="15" x="80.598%" y="837" fill="#F56F23" fg:w="69" fg:x="3992"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (69 samples, 1.39%)</title><rect width="1.393%" height="15" x="80.598%" y="821" fill="#DBB91F" fg:w="69" fg:x="3992"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="81.95%" y="805" fill="#D6042B" fg:w="2" fg:x="4059"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="81.95%" y="789" fill="#EBE328" fg:w="2" fg:x="4059"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="81.95%" y="773" fill="#E6581E" fg:w="2" fg:x="4059"/></g><g><title>serde::de::SeqAccess::next_element (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.971%" y="757" fill="#D8D901" fg:w="1" fg:x="4060"/></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.971%" y="741" fill="#F88B32" fg:w="1" fg:x="4060"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.971%" y="725" fill="#E90115" fg:w="1" fg:x="4060"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.971%" y="709" fill="#D7B70C" fg:w="1" fg:x="4060"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.971%" y="693" fill="#E5682A" fg:w="1" fg:x="4060"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.971%" y="677" fill="#F32230" fg:w="1" fg:x="4060"/></g><g><title>sonic_rs::util::num::parse_number_unchecked (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.971%" y="661" fill="#EF0B2C" fg:w="1" fg:x="4060"/></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.971%" y="645" fill="#E76223" fg:w="1" fg:x="4060"/></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (1 samples, 0.02%)</title><rect width=".02%" height="15" x="81.971%" y="629" fill="#E91C19" fg:w="1" fg:x="4060"/></g><g><title>&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as core::cmp::Ord&gt;::cmp (4 samples, 0.08%)</title><rect width=".081%" height="15" x="81.991%" y="789" fill="#EA7B0B" fg:w="4" fg:x="4061"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (4 samples, 0.08%)</title><rect width=".081%" height="15" x="81.991%" y="773" fill="#DC4503" fg:w="4" fg:x="4061"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.072%" y="773" fill="#D64024" fg:w="1" fg:x="4065"/></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.072%" y="757" fill="#D38A20" fg:w="1" fg:x="4065"/></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.072%" y="741" fill="#D5762F" fg:w="1" fg:x="4065"/></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.092%" y="517" fill="#F37C31" fg:w="1" fg:x="4066"/></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.092%" y="501" fill="#DD1E1C" fg:w="1" fg:x="4066"/></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.092%" y="485" fill="#F6250D" fg:w="1" fg:x="4066"/></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.092%" y="469" fill="#F9420E" fg:w="1" fg:x="4066"/></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.092%" y="453" fill="#D5A605" fg:w="1" fg:x="4066"/></g><g><title>_rjem_je_ecache_alloc_grow (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.092%" y="437" fill="#DD4218" fg:w="1" fg:x="4066"/></g><g><title>extent_alloc_retained (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.092%" y="421" fill="#D28411" fg:w="1" fg:x="4066"/></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.092%" y="405" fill="#F3CA05" fg:w="1" fg:x="4066"/></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.092%" y="389" fill="#E94630" fg:w="1" fg:x="4066"/></g><g><title>extent_activate_locked (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.092%" y="373" fill="#EE291A" fg:w="1" fg:x="4066"/></g><g><title>_rjem_je_emap_update_edata_state (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.092%" y="357" fill="#F1131F" fg:w="1" fg:x="4066"/></g><g><title>edata_last_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.092%" y="341" fill="#D64C0A" fg:w="1" fg:x="4066"/></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.092%" y="773" fill="#FECA16" fg:w="2" fg:x="4066"/></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.092%" y="757" fill="#D64818" fg:w="2" fg:x="4066"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.092%" y="741" fill="#DD5C2E" fg:w="2" fg:x="4066"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.092%" y="725" fill="#F60D32" fg:w="2" fg:x="4066"/></g><g><title>alloc::alloc::alloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.092%" y="709" fill="#F0A526" fg:w="2" fg:x="4066"/></g><g><title>__rust_alloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.092%" y="693" fill="#F11833" fg:w="2" fg:x="4066"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.092%" y="677" fill="#E3332C" fg:w="2" fg:x="4066"/></g><g><title>_rjem_je_malloc_default (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.092%" y="661" fill="#E77903" fg:w="2" fg:x="4066"/></g><g><title>imalloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.092%" y="645" fill="#F50329" fg:w="2" fg:x="4066"/></g><g><title>imalloc_body (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.092%" y="629" fill="#D60D1A" fg:w="2" fg:x="4066"/></g><g><title>imalloc_no_sample (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.092%" y="613" fill="#FC4B0B" fg:w="2" fg:x="4066"/></g><g><title>iallocztm (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.092%" y="597" fill="#DAE211" fg:w="2" fg:x="4066"/></g><g><title>arena_malloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.092%" y="581" fill="#F85926" fg:w="2" fg:x="4066"/></g><g><title>tcache_alloc_small (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.092%" y="565" fill="#ED492E" fg:w="2" fg:x="4066"/></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.092%" y="549" fill="#F24E21" fg:w="2" fg:x="4066"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.092%" y="533" fill="#EB3C03" fg:w="2" fg:x="4066"/></g><g><title>edata_nfree_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.112%" y="517" fill="#D8AC13" fg:w="1" fg:x="4067"/></g><g><title>?? (6 samples, 0.12%)</title><rect width=".121%" height="15" x="82.072%" y="789" fill="#E3062A" fg:w="6" fg:x="4065"/></g><g><title>alloc::collections::btree::node::move_to_slice (3 samples, 0.06%)</title><rect width=".061%" height="15" x="82.132%" y="773" fill="#DFCF2A" fg:w="3" fg:x="4068"/></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.06%)</title><rect width=".061%" height="15" x="82.132%" y="757" fill="#F68A1E" fg:w="3" fg:x="4068"/></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.06%)</title><rect width=".061%" height="15" x="82.132%" y="741" fill="#FBC72F" fg:w="3" fg:x="4068"/></g><g><title>?? (11 samples, 0.22%)</title><rect width=".222%" height="15" x="81.991%" y="805" fill="#E4DA2C" fg:w="11" fg:x="4061"/></g><g><title>alloc::collections::btree::node::slice_insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.193%" y="789" fill="#DC4406" fg:w="1" fg:x="4071"/></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.193%" y="773" fill="#F03C1A" fg:w="1" fg:x="4071"/></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.213%" y="805" fill="#D3C813" fg:w="1" fg:x="4072"/></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.213%" y="789" fill="#F2911E" fg:w="1" fg:x="4072"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.213%" y="773" fill="#E1400D" fg:w="1" fg:x="4072"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.213%" y="757" fill="#DA6723" fg:w="1" fg:x="4072"/></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.213%" y="741" fill="#D85D2E" fg:w="1" fg:x="4072"/></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.213%" y="725" fill="#E19F1B" fg:w="1" fg:x="4072"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.213%" y="709" fill="#E1CC0B" fg:w="1" fg:x="4072"/></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.213%" y="693" fill="#CD3804" fg:w="1" fg:x="4072"/></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.213%" y="677" fill="#CE0623" fg:w="1" fg:x="4072"/></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.213%" y="661" fill="#F74934" fg:w="1" fg:x="4072"/></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.213%" y="645" fill="#F66104" fg:w="1" fg:x="4072"/></g><g><title>?? (15 samples, 0.30%)</title><rect width=".303%" height="15" x="81.991%" y="821" fill="#D4250F" fg:w="15" fg:x="4061"/></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.06%)</title><rect width=".061%" height="15" x="82.233%" y="805" fill="#D08228" fg:w="3" fg:x="4073"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (108 samples, 2.18%)</title><rect width="2.18%" height="15" x="80.133%" y="917" fill="#EC371D" fg:w="108" fg:x="3969"/><text x="80.383%" y="927.5">s..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (108 samples, 2.18%)</title><rect width="2.18%" height="15" x="80.133%" y="901" fill="#D19C2D" fg:w="108" fg:x="3969"/><text x="80.383%" y="911.5">&lt;..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (108 samples, 2.18%)</title><rect width="2.18%" height="15" x="80.133%" y="885" fill="#F96B04" fg:w="108" fg:x="3969"/><text x="80.383%" y="895.5">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (16 samples, 0.32%)</title><rect width=".323%" height="15" x="81.991%" y="869" fill="#E3070D" fg:w="16" fg:x="4061"/></g><g><title>?? (16 samples, 0.32%)</title><rect width=".323%" height="15" x="81.991%" y="853" fill="#FA810E" fg:w="16" fg:x="4061"/></g><g><title>?? (16 samples, 0.32%)</title><rect width=".323%" height="15" x="81.991%" y="837" fill="#E55C0D" fg:w="16" fg:x="4061"/></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.294%" y="821" fill="#F56227" fg:w="1" fg:x="4076"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.294%" y="805" fill="#EA8730" fg:w="1" fg:x="4076"/></g><g><title>alloc::collections::btree::mem::take_mut (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.294%" y="789" fill="#E6621C" fg:w="1" fg:x="4076"/></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.294%" y="773" fill="#DF7900" fg:w="1" fg:x="4076"/></g><g><title>alloc::collections::btree::mem::take_mut::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.294%" y="757" fill="#EAAD21" fg:w="1" fg:x="4076"/></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.294%" y="741" fill="#F52F08" fg:w="1" fg:x="4076"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.294%" y="725" fill="#CD1114" fg:w="1" fg:x="4076"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.294%" y="709" fill="#E89710" fg:w="1" fg:x="4076"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.294%" y="693" fill="#D01E20" fg:w="1" fg:x="4076"/></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.294%" y="677" fill="#FE1A03" fg:w="1" fg:x="4076"/></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.294%" y="661" fill="#F0B11E" fg:w="1" fg:x="4076"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.334%" y="677" fill="#F84C2C" fg:w="1" fg:x="4078"/></g><g><title>tcache_alloc_large (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.354%" y="645" fill="#F1BA36" fg:w="2" fg:x="4079"/></g><g><title>_rjem_je_large_palloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.354%" y="629" fill="#F9AB1D" fg:w="2" fg:x="4079"/></g><g><title>_rjem_je_arena_extent_alloc_large (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.354%" y="613" fill="#ED972C" fg:w="2" fg:x="4079"/></g><g><title>_rjem_je_pa_alloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.354%" y="597" fill="#E4AE1E" fg:w="2" fg:x="4079"/></g><g><title>pai_alloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.354%" y="581" fill="#FC0E25" fg:w="2" fg:x="4079"/></g><g><title>pac_alloc_impl (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.354%" y="565" fill="#CF6F28" fg:w="2" fg:x="4079"/></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.374%" y="549" fill="#F8AB36" fg:w="1" fg:x="4080"/></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.374%" y="533" fill="#D37F02" fg:w="1" fg:x="4080"/></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.374%" y="517" fill="#EC572F" fg:w="1" fg:x="4080"/></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.374%" y="501" fill="#DFBE2D" fg:w="1" fg:x="4080"/></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.374%" y="485" fill="#D70510" fg:w="1" fg:x="4080"/></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.374%" y="469" fill="#FC5221" fg:w="1" fg:x="4080"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="82.334%" y="869" fill="#F7D52C" fg:w="4" fg:x="4078"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.08%)</title><rect width=".081%" height="15" x="82.334%" y="853" fill="#CDC42C" fg:w="4" fg:x="4078"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.08%)</title><rect width=".081%" height="15" x="82.334%" y="837" fill="#ED6036" fg:w="4" fg:x="4078"/></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.08%)</title><rect width=".081%" height="15" x="82.334%" y="821" fill="#E67122" fg:w="4" fg:x="4078"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.08%)</title><rect width=".081%" height="15" x="82.334%" y="805" fill="#DDE00C" fg:w="4" fg:x="4078"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="82.334%" y="789" fill="#DB702C" fg:w="4" fg:x="4078"/></g><g><title>alloc::alloc::realloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="82.334%" y="773" fill="#D21F0D" fg:w="4" fg:x="4078"/></g><g><title>__rust_realloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="82.334%" y="757" fill="#E61910" fg:w="4" fg:x="4078"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="82.334%" y="741" fill="#F66C35" fg:w="4" fg:x="4078"/></g><g><title>do_rallocx (4 samples, 0.08%)</title><rect width=".081%" height="15" x="82.334%" y="725" fill="#F1AC32" fg:w="4" fg:x="4078"/></g><g><title>iralloct (4 samples, 0.08%)</title><rect width=".081%" height="15" x="82.334%" y="709" fill="#EB8D0A" fg:w="4" fg:x="4078"/></g><g><title>_rjem_je_arena_ralloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="82.334%" y="693" fill="#DCAE2B" fg:w="4" fg:x="4078"/></g><g><title>arena_ralloc_move_helper (3 samples, 0.06%)</title><rect width=".061%" height="15" x="82.354%" y="677" fill="#D7B528" fg:w="3" fg:x="4079"/></g><g><title>arena_malloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="82.354%" y="661" fill="#E66102" fg:w="3" fg:x="4079"/></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.394%" y="645" fill="#D3191B" fg:w="1" fg:x="4081"/></g><g><title>cache_bin_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.394%" y="629" fill="#E6571A" fg:w="1" fg:x="4081"/></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.394%" y="613" fill="#E3A011" fg:w="1" fg:x="4081"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="82.415%" y="869" fill="#F45522" fg:w="3" fg:x="4082"/></g><g><title>core::ptr::write (3 samples, 0.06%)</title><rect width=".061%" height="15" x="82.415%" y="853" fill="#CF4600" fg:w="3" fg:x="4082"/></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.536%" y="773" fill="#DF8107" fg:w="1" fg:x="4088"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.718%" y="661" fill="#F66907" fg:w="1" fg:x="4097"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.718%" y="645" fill="#D79A2A" fg:w="1" fg:x="4097"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.718%" y="629" fill="#DCD71E" fg:w="1" fg:x="4097"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.718%" y="677" fill="#E45133" fg:w="2" fg:x="4097"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.738%" y="661" fill="#F74736" fg:w="1" fg:x="4098"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.738%" y="645" fill="#EAB022" fg:w="1" fg:x="4098"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.738%" y="629" fill="#F16736" fg:w="1" fg:x="4098"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.738%" y="613" fill="#E41622" fg:w="1" fg:x="4098"/></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.758%" y="421" fill="#F1B330" fg:w="1" fg:x="4099"/></g><g><title>imalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.758%" y="405" fill="#EBA725" fg:w="1" fg:x="4099"/></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.758%" y="389" fill="#D56D1E" fg:w="1" fg:x="4099"/></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.758%" y="373" fill="#DEAC10" fg:w="1" fg:x="4099"/></g><g><title>iallocztm (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.758%" y="357" fill="#E9C005" fg:w="1" fg:x="4099"/></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.758%" y="341" fill="#F7BD29" fg:w="1" fg:x="4099"/></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.758%" y="325" fill="#DA862F" fg:w="1" fg:x="4099"/></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.758%" y="309" fill="#D81D03" fg:w="1" fg:x="4099"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.758%" y="293" fill="#F68C0C" fg:w="1" fg:x="4099"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (5 samples, 0.10%)</title><rect width=".101%" height="15" x="82.697%" y="725" fill="#E6880B" fg:w="5" fg:x="4096"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (4 samples, 0.08%)</title><rect width=".081%" height="15" x="82.718%" y="709" fill="#F7162F" fg:w="4" fg:x="4097"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (4 samples, 0.08%)</title><rect width=".081%" height="15" x="82.718%" y="693" fill="#DA5416" fg:w="4" fg:x="4097"/></g><g><title>serde::de::Visitor::visit_borrowed_str (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.758%" y="677" fill="#D85727" fg:w="2" fg:x="4099"/></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.758%" y="661" fill="#DDB208" fg:w="2" fg:x="4099"/></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.758%" y="645" fill="#E62A0B" fg:w="2" fg:x="4099"/></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.758%" y="629" fill="#EDE504" fg:w="2" fg:x="4099"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.758%" y="613" fill="#DE1F21" fg:w="2" fg:x="4099"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.758%" y="597" fill="#D21127" fg:w="2" fg:x="4099"/></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.758%" y="581" fill="#F45D14" fg:w="2" fg:x="4099"/></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.758%" y="565" fill="#D2282F" fg:w="2" fg:x="4099"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.758%" y="549" fill="#EFD32F" fg:w="2" fg:x="4099"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.758%" y="533" fill="#FBDF31" fg:w="2" fg:x="4099"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.758%" y="517" fill="#DD9505" fg:w="2" fg:x="4099"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.758%" y="501" fill="#DBE033" fg:w="2" fg:x="4099"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.758%" y="485" fill="#DF0708" fg:w="2" fg:x="4099"/></g><g><title>alloc::alloc::alloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.758%" y="469" fill="#F1D916" fg:w="2" fg:x="4099"/></g><g><title>__rust_alloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.758%" y="453" fill="#F8D100" fg:w="2" fg:x="4099"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="82.758%" y="437" fill="#D9CD04" fg:w="2" fg:x="4099"/></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.778%" y="421" fill="#E47C27" fg:w="1" fg:x="4100"/></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="82.778%" y="405" fill="#FA742A" fg:w="1" fg:x="4100"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83%" y="485" fill="#DFCA09" fg:w="1" fg:x="4111"/></g><g><title>edata_usize_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.02%" y="469" fill="#F2DE28" fg:w="1" fg:x="4112"/></g><g><title>sz_index2size (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.02%" y="453" fill="#E5632E" fg:w="1" fg:x="4112"/></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.02%" y="437" fill="#E1382E" fg:w="1" fg:x="4112"/></g><g><title>sz_index2size_lookup_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.02%" y="421" fill="#E35E05" fg:w="1" fg:x="4112"/></g><g><title>_rjem_je_arena_ralloc_no_move (2 samples, 0.04%)</title><rect width=".04%" height="15" x="83.02%" y="485" fill="#CD7026" fg:w="2" fg:x="4112"/></g><g><title>emap_edata_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.041%" y="469" fill="#E7852E" fg:w="1" fg:x="4113"/></g><g><title>rtree_read (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.041%" y="453" fill="#D91009" fg:w="1" fg:x="4113"/></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.041%" y="437" fill="#F9AD09" fg:w="1" fg:x="4113"/></g><g><title>rtree_leaf_elm_bits_decode (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.041%" y="421" fill="#CDA335" fg:w="1" fg:x="4113"/></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.061%" y="405" fill="#D93629" fg:w="1" fg:x="4114"/></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.061%" y="389" fill="#E4D80C" fg:w="1" fg:x="4114"/></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.061%" y="373" fill="#F4E40F" fg:w="1" fg:x="4114"/></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.061%" y="357" fill="#DDB035" fg:w="1" fg:x="4114"/></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.061%" y="341" fill="#CD5E22" fg:w="1" fg:x="4114"/></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.061%" y="325" fill="#D56E30" fg:w="1" fg:x="4114"/></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.061%" y="309" fill="#EC8E1C" fg:w="1" fg:x="4114"/></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.061%" y="293" fill="#E1871D" fg:w="1" fg:x="4114"/></g><g><title>extent_activate_locked (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.061%" y="277" fill="#FC2D1F" fg:w="1" fg:x="4114"/></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.061%" y="261" fill="#D3BB32" fg:w="1" fg:x="4114"/></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.061%" y="245" fill="#E56D07" fg:w="1" fg:x="4114"/></g><g><title>ph_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.061%" y="229" fill="#FB8333" fg:w="1" fg:x="4114"/></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.061%" y="213" fill="#FBB423" fg:w="1" fg:x="4114"/></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.061%" y="197" fill="#D32E20" fg:w="1" fg:x="4114"/></g><g><title>phn_merge (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.061%" y="181" fill="#F87B11" fg:w="1" fg:x="4114"/></g><g><title>phn_merge_ordered (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.061%" y="165" fill="#E38D12" fg:w="1" fg:x="4114"/></g><g><title>phn_lchild_set (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.061%" y="149" fill="#D86609" fg:w="1" fg:x="4114"/></g><g><title>arena_ralloc_move_helper (2 samples, 0.04%)</title><rect width=".04%" height="15" x="83.061%" y="485" fill="#FD2F0D" fg:w="2" fg:x="4114"/></g><g><title>arena_malloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="83.061%" y="469" fill="#E25D17" fg:w="2" fg:x="4114"/></g><g><title>tcache_alloc_small (2 samples, 0.04%)</title><rect width=".04%" height="15" x="83.061%" y="453" fill="#F76811" fg:w="2" fg:x="4114"/></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.04%)</title><rect width=".04%" height="15" x="83.061%" y="437" fill="#E9CB1A" fg:w="2" fg:x="4114"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (2 samples, 0.04%)</title><rect width=".04%" height="15" x="83.061%" y="421" fill="#F46231" fg:w="2" fg:x="4114"/></g><g><title>edata_nfree_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.081%" y="405" fill="#EB8616" fg:w="1" fg:x="4115"/></g><g><title>iralloct (7 samples, 0.14%)</title><rect width=".141%" height="15" x="82.98%" y="517" fill="#DD4620" fg:w="7" fg:x="4110"/></g><g><title>_rjem_je_arena_ralloc (6 samples, 0.12%)</title><rect width=".121%" height="15" x="83%" y="501" fill="#EE0F32" fg:w="6" fg:x="4111"/></g><g><title>isdalloct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.101%" y="485" fill="#D7DD30" fg:w="1" fg:x="4116"/></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.101%" y="469" fill="#EC4903" fg:w="1" fg:x="4116"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.16%)</title><rect width=".162%" height="15" x="82.98%" y="613" fill="#FA6B0B" fg:w="8" fg:x="4110"/></g><g><title>?? (8 samples, 0.16%)</title><rect width=".162%" height="15" x="82.98%" y="597" fill="#F2270E" fg:w="8" fg:x="4110"/></g><g><title>alloc::alloc::realloc (8 samples, 0.16%)</title><rect width=".162%" height="15" x="82.98%" y="581" fill="#F8A425" fg:w="8" fg:x="4110"/></g><g><title>__rust_realloc (8 samples, 0.16%)</title><rect width=".162%" height="15" x="82.98%" y="565" fill="#D93C0C" fg:w="8" fg:x="4110"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (8 samples, 0.16%)</title><rect width=".162%" height="15" x="82.98%" y="549" fill="#F07D1D" fg:w="8" fg:x="4110"/></g><g><title>do_rallocx (8 samples, 0.16%)</title><rect width=".162%" height="15" x="82.98%" y="533" fill="#D0CF1C" fg:w="8" fg:x="4110"/></g><g><title>sz_index2size (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.121%" y="517" fill="#D19F1B" fg:w="1" fg:x="4117"/></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.121%" y="501" fill="#FBB035" fg:w="1" fg:x="4117"/></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.121%" y="485" fill="#D35507" fg:w="1" fg:x="4117"/></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.141%" y="501" fill="#D84036" fg:w="1" fg:x="4118"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.141%" y="485" fill="#D93618" fg:w="1" fg:x="4118"/></g><g><title>arena_slab_reg_alloc_batch (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.141%" y="469" fill="#D0CE35" fg:w="1" fg:x="4118"/></g><g><title>_rjem_je_malloc_default (3 samples, 0.06%)</title><rect width=".061%" height="15" x="83.141%" y="613" fill="#FB4A27" fg:w="3" fg:x="4118"/></g><g><title>imalloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="83.141%" y="597" fill="#E22F05" fg:w="3" fg:x="4118"/></g><g><title>imalloc_body (3 samples, 0.06%)</title><rect width=".061%" height="15" x="83.141%" y="581" fill="#EA6F21" fg:w="3" fg:x="4118"/></g><g><title>imalloc_no_sample (3 samples, 0.06%)</title><rect width=".061%" height="15" x="83.141%" y="565" fill="#FB0E0A" fg:w="3" fg:x="4118"/></g><g><title>iallocztm (3 samples, 0.06%)</title><rect width=".061%" height="15" x="83.141%" y="549" fill="#E82B00" fg:w="3" fg:x="4118"/></g><g><title>arena_malloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="83.141%" y="533" fill="#DE442B" fg:w="3" fg:x="4118"/></g><g><title>tcache_alloc_small (3 samples, 0.06%)</title><rect width=".061%" height="15" x="83.141%" y="517" fill="#D91817" fg:w="3" fg:x="4118"/></g><g><title>arena_choose (2 samples, 0.04%)</title><rect width=".04%" height="15" x="83.162%" y="501" fill="#E5D10E" fg:w="2" fg:x="4119"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (19 samples, 0.38%)</title><rect width=".384%" height="15" x="82.839%" y="677" fill="#FA9530" fg:w="19" fg:x="4103"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (15 samples, 0.30%)</title><rect width=".303%" height="15" x="82.919%" y="661" fill="#D27825" fg:w="15" fg:x="4107"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (15 samples, 0.30%)</title><rect width=".303%" height="15" x="82.919%" y="645" fill="#D21508" fg:w="15" fg:x="4107"/></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.28%)</title><rect width=".283%" height="15" x="82.94%" y="629" fill="#F39107" fg:w="14" fg:x="4108"/></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.202%" y="613" fill="#EEB220" fg:w="1" fg:x="4121"/></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.202%" y="597" fill="#DE040A" fg:w="1" fg:x="4121"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.222%" y="661" fill="#EF0725" fg:w="1" fg:x="4122"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="83.222%" y="677" fill="#D71F25" fg:w="2" fg:x="4122"/></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.243%" y="661" fill="#E05321" fg:w="1" fg:x="4123"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (5 samples, 0.10%)</title><rect width=".101%" height="15" x="83.687%" y="453" fill="#EF3703" fg:w="5" fg:x="4145"/></g><g><title>sonic_rs::reader::Reader::next (6 samples, 0.12%)</title><rect width=".121%" height="15" x="83.687%" y="469" fill="#F75C0B" fg:w="6" fg:x="4145"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.788%" y="453" fill="#EFC807" fg:w="1" fg:x="4150"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.788%" y="437" fill="#E37308" fg:w="1" fg:x="4150"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="83.788%" y="421" fill="#D7BD1B" fg:w="1" fg:x="4150"/></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (3 samples, 0.06%)</title><rect width=".061%" height="15" x="83.929%" y="453" fill="#FBD827" fg:w="3" fg:x="4157"/></g><g><title>?? (21 samples, 0.42%)</title><rect width=".424%" height="15" x="83.687%" y="501" fill="#CF1D2F" fg:w="21" fg:x="4145"/></g><g><title>?? (21 samples, 0.42%)</title><rect width=".424%" height="15" x="83.687%" y="485" fill="#D24722" fg:w="21" fg:x="4145"/></g><g><title>sonic_rs::util::num::parse_number_unchecked (15 samples, 0.30%)</title><rect width=".303%" height="15" x="83.808%" y="469" fill="#FDD933" fg:w="15" fg:x="4151"/></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (6 samples, 0.12%)</title><rect width=".121%" height="15" x="83.99%" y="453" fill="#DE752E" fg:w="6" fg:x="4160"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (31 samples, 0.63%)</title><rect width=".626%" height="15" x="83.525%" y="549" fill="#E28406" fg:w="31" fg:x="4137"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (27 samples, 0.55%)</title><rect width=".545%" height="15" x="83.606%" y="533" fill="#FE9133" fg:w="27" fg:x="4141"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (23 samples, 0.46%)</title><rect width=".464%" height="15" x="83.687%" y="517" fill="#E7C71B" fg:w="23" fg:x="4145"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="84.111%" y="501" fill="#F59E0E" fg:w="2" fg:x="4166"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (32 samples, 0.65%)</title><rect width=".646%" height="15" x="83.525%" y="581" fill="#F0710E" fg:w="32" fg:x="4137"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (32 samples, 0.65%)</title><rect width=".646%" height="15" x="83.525%" y="565" fill="#D2140D" fg:w="32" fg:x="4137"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="84.151%" y="549" fill="#F1900D" fg:w="1" fg:x="4168"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="84.151%" y="533" fill="#EB2B22" fg:w="1" fg:x="4168"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="84.151%" y="517" fill="#D02414" fg:w="1" fg:x="4168"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="84.151%" y="501" fill="#EFCC0A" fg:w="1" fg:x="4168"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="84.252%" y="453" fill="#D9542B" fg:w="1" fg:x="4173"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.10%)</title><rect width=".101%" height="15" x="84.272%" y="437" fill="#F1AA32" fg:w="5" fg:x="4174"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect width=".04%" height="15" x="84.373%" y="437" fill="#E2CD1D" fg:w="2" fg:x="4179"/></g><g><title>?? (11 samples, 0.22%)</title><rect width=".222%" height="15" x="84.252%" y="485" fill="#E97101" fg:w="11" fg:x="4173"/></g><g><title>?? (11 samples, 0.22%)</title><rect width=".222%" height="15" x="84.252%" y="469" fill="#FD620D" fg:w="11" fg:x="4173"/></g><g><title>?? (10 samples, 0.20%)</title><rect width=".202%" height="15" x="84.272%" y="453" fill="#D3730C" fg:w="10" fg:x="4174"/></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (3 samples, 0.06%)</title><rect width=".061%" height="15" x="84.413%" y="437" fill="#D00C10" fg:w="3" fg:x="4181"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15 samples, 0.30%)</title><rect width=".303%" height="15" x="84.212%" y="549" fill="#EDC136" fg:w="15" fg:x="4171"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (13 samples, 0.26%)</title><rect width=".263%" height="15" x="84.252%" y="533" fill="#F3162A" fg:w="13" fg:x="4173"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (13 samples, 0.26%)</title><rect width=".263%" height="15" x="84.252%" y="517" fill="#E99724" fg:w="13" fg:x="4173"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 0.26%)</title><rect width=".263%" height="15" x="84.252%" y="501" fill="#ED392D" fg:w="13" fg:x="4173"/></g><g><title>serde::de::Visitor::visit_borrowed_str (2 samples, 0.04%)</title><rect width=".04%" height="15" x="84.474%" y="485" fill="#DD5811" fg:w="2" fg:x="4184"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.04%)</title><rect width=".04%" height="15" x="84.474%" y="469" fill="#E64F0F" fg:w="2" fg:x="4184"/></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="84.474%" y="453" fill="#D5390D" fg:w="2" fg:x="4184"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="84.474%" y="437" fill="#DE7427" fg:w="2" fg:x="4184"/></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="84.474%" y="421" fill="#F56B02" fg:w="2" fg:x="4184"/></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.04%)</title><rect width=".04%" height="15" x="84.474%" y="405" fill="#EE010A" fg:w="2" fg:x="4184"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="84.514%" y="533" fill="#F90430" fg:w="1" fg:x="4186"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (6 samples, 0.12%)</title><rect width=".121%" height="15" x="84.535%" y="517" fill="#DF9712" fg:w="6" fg:x="4187"/></g><g><title>sonic_rs::reader::Reader::next (7 samples, 0.14%)</title><rect width=".141%" height="15" x="84.535%" y="533" fill="#E3412B" fg:w="7" fg:x="4187"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="84.656%" y="517" fill="#DA282D" fg:w="1" fg:x="4193"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="84.656%" y="501" fill="#FC791F" fg:w="1" fg:x="4193"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="84.656%" y="485" fill="#DB9E2B" fg:w="1" fg:x="4193"/></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="84.676%" y="517" fill="#E7A22A" fg:w="1" fg:x="4194"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (62 samples, 1.25%)</title><rect width="1.252%" height="15" x="83.485%" y="597" fill="#D9B319" fg:w="62" fg:x="4135"/></g><g><title>serde::de::MapAccess::next_key (28 samples, 0.57%)</title><rect width=".565%" height="15" x="84.171%" y="581" fill="#CED41F" fg:w="28" fg:x="4169"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (28 samples, 0.57%)</title><rect width=".565%" height="15" x="84.171%" y="565" fill="#EB900C" fg:w="28" fg:x="4169"/></g><g><title>?? (11 samples, 0.22%)</title><rect width=".222%" height="15" x="84.514%" y="549" fill="#D5330A" fg:w="11" fg:x="4186"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (3 samples, 0.06%)</title><rect width=".061%" height="15" x="84.676%" y="533" fill="#E7910E" fg:w="3" fg:x="4194"/></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (2 samples, 0.04%)</title><rect width=".04%" height="15" x="84.696%" y="517" fill="#EB0F1C" fg:w="2" fg:x="4195"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize (63 samples, 1.27%)</title><rect width="1.272%" height="15" x="83.485%" y="629" fill="#EDCE0A" fg:w="63" fg:x="4135"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (63 samples, 1.27%)</title><rect width="1.272%" height="15" x="83.485%" y="613" fill="#ECE31B" fg:w="63" fg:x="4135"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="84.737%" y="597" fill="#F65323" fg:w="1" fg:x="4197"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (1 samples, 0.02%)</title><rect width=".02%" height="15" x="84.737%" y="581" fill="#DC8818" fg:w="1" fg:x="4197"/></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="84.737%" y="565" fill="#D90319" fg:w="1" fg:x="4197"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="84.777%" y="597" fill="#EF180E" fg:w="3" fg:x="4199"/></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect width=".02%" height="15" x="84.838%" y="581" fill="#F41035" fg:w="1" fg:x="4202"/></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.1%" y="437" fill="#D0AF2C" fg:w="1" fg:x="4215"/></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.1%" y="421" fill="#FC1230" fg:w="1" fg:x="4215"/></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.1%" y="405" fill="#EAC720" fg:w="1" fg:x="4215"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="85.1%" y="453" fill="#E14D36" fg:w="4" fg:x="4215"/></g><g><title>core::num::&lt;impl usize&gt;::checked_add (3 samples, 0.06%)</title><rect width=".061%" height="15" x="85.12%" y="437" fill="#E12A19" fg:w="3" fg:x="4216"/></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (3 samples, 0.06%)</title><rect width=".061%" height="15" x="85.12%" y="421" fill="#F2E32E" fg:w="3" fg:x="4216"/></g><g><title>_rjem_realloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.241%" y="341" fill="#F6C523" fg:w="1" fg:x="4222"/></g><g><title>aligned_usize_get (3 samples, 0.06%)</title><rect width=".061%" height="15" x="85.362%" y="325" fill="#D79F1A" fg:w="3" fg:x="4228"/></g><g><title>sz_s2u (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.403%" y="309" fill="#D4C232" fg:w="1" fg:x="4230"/></g><g><title>sz_s2u_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.403%" y="293" fill="#F68401" fg:w="1" fg:x="4230"/></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.403%" y="277" fill="#D94707" fg:w="1" fg:x="4230"/></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.403%" y="261" fill="#FC3B20" fg:w="1" fg:x="4230"/></g><g><title>rtree_metadata_read (2 samples, 0.04%)</title><rect width=".04%" height="15" x="85.423%" y="309" fill="#FDCC19" fg:w="2" fg:x="4231"/></g><g><title>rtree_leaf_elm_lookup (2 samples, 0.04%)</title><rect width=".04%" height="15" x="85.423%" y="293" fill="#E81510" fg:w="2" fg:x="4231"/></g><g><title>rtree_cache_direct_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.443%" y="277" fill="#F85A1D" fg:w="1" fg:x="4232"/></g><g><title>emap_alloc_ctx_lookup (3 samples, 0.06%)</title><rect width=".061%" height="15" x="85.423%" y="325" fill="#F9DF07" fg:w="3" fg:x="4231"/></g><g><title>tsdn_rtree_ctx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.463%" y="309" fill="#E7772A" fg:w="1" fg:x="4233"/></g><g><title>tsdn_null (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.463%" y="293" fill="#D72923" fg:w="1" fg:x="4233"/></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.10%)</title><rect width=".101%" height="15" x="85.625%" y="293" fill="#DC2C2D" fg:w="5" fg:x="4241"/></g><g><title>emap_edata_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.786%" y="277" fill="#FDC524" fg:w="1" fg:x="4249"/></g><g><title>rtree_read (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.786%" y="261" fill="#F5E136" fg:w="1" fg:x="4249"/></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.786%" y="245" fill="#EF5E25" fg:w="1" fg:x="4249"/></g><g><title>rtree_leaf_elm_bits_decode (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.786%" y="229" fill="#F2D90A" fg:w="1" fg:x="4249"/></g><g><title>sz_s2u (2 samples, 0.04%)</title><rect width=".04%" height="15" x="85.807%" y="277" fill="#FAC107" fg:w="2" fg:x="4250"/></g><g><title>sz_s2u_lookup (2 samples, 0.04%)</title><rect width=".04%" height="15" x="85.807%" y="261" fill="#E66813" fg:w="2" fg:x="4250"/></g><g><title>sz_size2index_lookup (2 samples, 0.04%)</title><rect width=".04%" height="15" x="85.807%" y="245" fill="#E6B504" fg:w="2" fg:x="4250"/></g><g><title>sz_size2index_lookup_impl (2 samples, 0.04%)</title><rect width=".04%" height="15" x="85.807%" y="229" fill="#D8DB31" fg:w="2" fg:x="4250"/></g><g><title>_rjem_je_arena_ralloc_no_move (9 samples, 0.18%)</title><rect width=".182%" height="15" x="85.726%" y="293" fill="#FE9000" fg:w="9" fg:x="4246"/></g><g><title>sz_size2index (3 samples, 0.06%)</title><rect width=".061%" height="15" x="85.847%" y="277" fill="#CDD126" fg:w="3" fg:x="4252"/></g><g><title>sz_size2index_lookup (2 samples, 0.04%)</title><rect width=".04%" height="15" x="85.867%" y="261" fill="#F0152A" fg:w="2" fg:x="4253"/></g><g><title>sz_size2index_lookup_impl (2 samples, 0.04%)</title><rect width=".04%" height="15" x="85.867%" y="245" fill="#F18403" fg:w="2" fg:x="4253"/></g><g><title>_rjem_je_hook_invoke_alloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="85.907%" y="293" fill="#E10E02" fg:w="2" fg:x="4255"/></g><g><title>arena_slab_alloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="85.948%" y="213" fill="#D28D23" fg:w="2" fg:x="4257"/></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.968%" y="197" fill="#FB0E2C" fg:w="1" fg:x="4258"/></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.968%" y="181" fill="#F73012" fg:w="1" fg:x="4258"/></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.968%" y="165" fill="#E10028" fg:w="1" fg:x="4258"/></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.968%" y="149" fill="#DD1F21" fg:w="1" fg:x="4258"/></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.968%" y="133" fill="#ED2A28" fg:w="1" fg:x="4258"/></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.968%" y="117" fill="#E9331D" fg:w="1" fg:x="4258"/></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.968%" y="101" fill="#E23A14" fg:w="1" fg:x="4258"/></g><g><title>atomic_store_b (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.968%" y="85" fill="#D06207" fg:w="1" fg:x="4258"/></g><g><title>_rjem_je_tcache_alloc_small_hard (3 samples, 0.06%)</title><rect width=".061%" height="15" x="85.948%" y="245" fill="#E48F2C" fg:w="3" fg:x="4257"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (3 samples, 0.06%)</title><rect width=".061%" height="15" x="85.948%" y="229" fill="#F63726" fg:w="3" fg:x="4257"/></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.988%" y="213" fill="#F75710" fg:w="1" fg:x="4259"/></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.988%" y="197" fill="#EA812A" fg:w="1" fg:x="4259"/></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="85.988%" y="181" fill="#DC5210" fg:w="1" fg:x="4259"/></g><g><title>arena_ralloc_move_helper (4 samples, 0.08%)</title><rect width=".081%" height="15" x="85.948%" y="293" fill="#D35804" fg:w="4" fg:x="4257"/></g><g><title>arena_malloc (4 samples, 0.08%)</title><rect width=".081%" height="15" x="85.948%" y="277" fill="#F89715" fg:w="4" fg:x="4257"/></g><g><title>tcache_alloc_small (4 samples, 0.08%)</title><rect width=".081%" height="15" x="85.948%" y="261" fill="#EEA306" fg:w="4" fg:x="4257"/></g><g><title>cache_bin_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.008%" y="245" fill="#D1B70B" fg:w="1" fg:x="4260"/></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.008%" y="229" fill="#DB2514" fg:w="1" fg:x="4260"/></g><g><title>sz_size2index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.029%" y="261" fill="#D29E04" fg:w="1" fg:x="4261"/></g><g><title>isdalloct (5 samples, 0.10%)</title><rect width=".101%" height="15" x="86.029%" y="293" fill="#DDA735" fg:w="5" fg:x="4261"/></g><g><title>arena_sdalloc (5 samples, 0.10%)</title><rect width=".101%" height="15" x="86.029%" y="277" fill="#ED972D" fg:w="5" fg:x="4261"/></g><g><title>tcache_dalloc_small (4 samples, 0.08%)</title><rect width=".081%" height="15" x="86.049%" y="261" fill="#E72703" fg:w="4" fg:x="4262"/></g><g><title>cache_bin_dalloc_easy (4 samples, 0.08%)</title><rect width=".081%" height="15" x="86.049%" y="245" fill="#D4A71C" fg:w="4" fg:x="4262"/></g><g><title>iralloct (33 samples, 0.67%)</title><rect width=".666%" height="15" x="85.484%" y="325" fill="#E8B208" fg:w="33" fg:x="4234"/></g><g><title>_rjem_je_arena_ralloc (32 samples, 0.65%)</title><rect width=".646%" height="15" x="85.504%" y="309" fill="#E19714" fg:w="32" fg:x="4235"/></g><g><title>sz_s2u (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.13%" y="293" fill="#EE0325" fg:w="1" fg:x="4266"/></g><g><title>sz_s2u_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.13%" y="277" fill="#FB932A" fg:w="1" fg:x="4266"/></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.13%" y="261" fill="#D0AD0A" fg:w="1" fg:x="4266"/></g><g><title>sz_size2index_lookup_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.13%" y="245" fill="#F6E104" fg:w="1" fg:x="4266"/></g><g><title>sz_index2size (2 samples, 0.04%)</title><rect width=".04%" height="15" x="86.15%" y="325" fill="#F86606" fg:w="2" fg:x="4267"/></g><g><title>sz_index2size_lookup (2 samples, 0.04%)</title><rect width=".04%" height="15" x="86.15%" y="309" fill="#E80615" fg:w="2" fg:x="4267"/></g><g><title>do_rallocx (2 samples, 0.04%)</title><rect width=".04%" height="15" x="86.15%" y="293" fill="#DDB316" fg:w="2" fg:x="4267"/></g><g><title>tcache_get_from_ind (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.19%" y="325" fill="#FC3214" fg:w="1" fg:x="4269"/></g><g><title>tcache_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.19%" y="309" fill="#DE3826" fg:w="1" fg:x="4269"/></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.21%" y="309" fill="#CEC11D" fg:w="1" fg:x="4270"/></g><g><title>?? (51 samples, 1.03%)</title><rect width="1.03%" height="15" x="85.241%" y="405" fill="#EFC02D" fg:w="51" fg:x="4222"/></g><g><title>alloc::alloc::realloc (51 samples, 1.03%)</title><rect width="1.03%" height="15" x="85.241%" y="389" fill="#FE1224" fg:w="51" fg:x="4222"/></g><g><title>__rust_realloc (51 samples, 1.03%)</title><rect width="1.03%" height="15" x="85.241%" y="373" fill="#DD7F0B" fg:w="51" fg:x="4222"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (51 samples, 1.03%)</title><rect width="1.03%" height="15" x="85.241%" y="357" fill="#EA9223" fg:w="51" fg:x="4222"/></g><g><title>do_rallocx (50 samples, 1.01%)</title><rect width="1.01%" height="15" x="85.261%" y="341" fill="#FEC925" fg:w="50" fg:x="4223"/></g><g><title>thread_alloc_event (3 samples, 0.06%)</title><rect width=".061%" height="15" x="86.21%" y="325" fill="#D3CA17" fg:w="3" fg:x="4270"/></g><g><title>te_event_advance (2 samples, 0.04%)</title><rect width=".04%" height="15" x="86.231%" y="309" fill="#ED5B02" fg:w="2" fg:x="4271"/></g><g><title>te_ctx_get (2 samples, 0.04%)</title><rect width=".04%" height="15" x="86.231%" y="293" fill="#E2E424" fg:w="2" fg:x="4271"/></g><g><title>tsd_thread_allocatedp_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.251%" y="277" fill="#D53F32" fg:w="1" fg:x="4272"/></g><g><title>tsd_thread_allocatedp_get_unsafe (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.251%" y="261" fill="#EBC213" fg:w="1" fg:x="4272"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (52 samples, 1.05%)</title><rect width="1.05%" height="15" x="85.241%" y="421" fill="#CFCC12" fg:w="52" fg:x="4222"/></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.271%" y="405" fill="#F80807" fg:w="1" fg:x="4273"/></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.291%" y="421" fill="#DF912F" fg:w="1" fg:x="4274"/></g><g><title>imalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.291%" y="405" fill="#E4540B" fg:w="1" fg:x="4274"/></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.291%" y="389" fill="#DA4C2D" fg:w="1" fg:x="4274"/></g><g><title>thread_alloc_event (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.291%" y="373" fill="#DF500F" fg:w="1" fg:x="4274"/></g><g><title>te_event_advance (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.291%" y="357" fill="#DBDA21" fg:w="1" fg:x="4274"/></g><g><title>_rjem_je_te_event_trigger (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.291%" y="341" fill="#D0330B" fg:w="1" fg:x="4274"/></g><g><title>tcache_event (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.291%" y="325" fill="#E5A527" fg:w="1" fg:x="4274"/></g><g><title>tcache_gc_large (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.291%" y="309" fill="#F16418" fg:w="1" fg:x="4274"/></g><g><title>_rjem_je_tcache_bin_flush_large (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.291%" y="293" fill="#E40E17" fg:w="1" fg:x="4274"/></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.291%" y="277" fill="#F77434" fg:w="1" fg:x="4274"/></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.291%" y="261" fill="#D89521" fg:w="1" fg:x="4274"/></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.291%" y="245" fill="#EE8E1D" fg:w="1" fg:x="4274"/></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.291%" y="229" fill="#E05328" fg:w="1" fg:x="4274"/></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.291%" y="213" fill="#EAA50B" fg:w="1" fg:x="4274"/></g><g><title>rtree_cache_direct_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.291%" y="197" fill="#D76017" fg:w="1" fg:x="4274"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (69 samples, 1.39%)</title><rect width="1.393%" height="15" x="84.959%" y="485" fill="#E9B31A" fg:w="69" fg:x="4208"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (62 samples, 1.25%)</title><rect width="1.252%" height="15" x="85.1%" y="469" fill="#E18121" fg:w="62" fg:x="4215"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (58 samples, 1.17%)</title><rect width="1.171%" height="15" x="85.181%" y="453" fill="#ED310D" fg:w="58" fg:x="4219"/></g><g><title>alloc::raw_vec::finish_grow (58 samples, 1.17%)</title><rect width="1.171%" height="15" x="85.181%" y="437" fill="#D3031F" fg:w="58" fg:x="4219"/></g><g><title>_rjem_malloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="86.311%" y="421" fill="#D89813" fg:w="2" fg:x="4275"/></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.332%" y="405" fill="#FB7923" fg:w="1" fg:x="4276"/></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.332%" y="389" fill="#D2D92F" fg:w="1" fg:x="4276"/></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.332%" y="373" fill="#F47416" fg:w="1" fg:x="4276"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.352%" y="485" fill="#E41115" fg:w="1" fg:x="4277"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="86.352%" y="469" fill="#F09522" fg:w="1" fg:x="4277"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (13 samples, 0.26%)</title><rect width=".263%" height="15" x="87.119%" y="405" fill="#D07D2F" fg:w="13" fg:x="4315"/></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.08%)</title><rect width=".081%" height="15" x="87.523%" y="389" fill="#F9BA27" fg:w="4" fg:x="4335"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6 samples, 0.12%)</title><rect width=".121%" height="15" x="88.007%" y="293" fill="#F0DC21" fg:w="6" fg:x="4359"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect width=".04%" height="15" x="88.128%" y="261" fill="#F36E17" fg:w="2" fg:x="4365"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (10 samples, 0.20%)</title><rect width=".202%" height="15" x="88.007%" y="309" fill="#DBA32E" fg:w="10" fg:x="4359"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="88.128%" y="293" fill="#D87E1E" fg:w="4" fg:x="4365"/></g><g><title>sonic_rs::reader::Reader::next (4 samples, 0.08%)</title><rect width=".081%" height="15" x="88.128%" y="277" fill="#D08B0B" fg:w="4" fg:x="4365"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="88.169%" y="261" fill="#D57624" fg:w="2" fg:x="4367"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="88.169%" y="245" fill="#E22B11" fg:w="2" fg:x="4367"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect width=".04%" height="15" x="88.169%" y="229" fill="#FED904" fg:w="2" fg:x="4367"/></g><g><title>&lt;json_benchmark::empty::Array as serde::de::Deserialize&gt;::deserialize (16 samples, 0.32%)</title><rect width=".323%" height="15" x="88.007%" y="341" fill="#D2862F" fg:w="16" fg:x="4359"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_tuple (16 samples, 0.32%)</title><rect width=".323%" height="15" x="88.007%" y="325" fill="#ED1831" fg:w="16" fg:x="4359"/></g><g><title>?? (6 samples, 0.12%)</title><rect width=".121%" height="15" x="88.209%" y="309" fill="#FB272E" fg:w="6" fg:x="4369"/></g><g><title>?? (6 samples, 0.12%)</title><rect width=".121%" height="15" x="88.209%" y="293" fill="#FBDC03" fg:w="6" fg:x="4369"/></g><g><title>sonic_rs::reader::Reader::next (6 samples, 0.12%)</title><rect width=".121%" height="15" x="88.209%" y="277" fill="#E4690C" fg:w="6" fg:x="4369"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (6 samples, 0.12%)</title><rect width=".121%" height="15" x="88.209%" y="261" fill="#D7C401" fg:w="6" fg:x="4369"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u64 (2 samples, 0.04%)</title><rect width=".04%" height="15" x="88.532%" y="277" fill="#D62127" fg:w="2" fg:x="4385"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect width=".04%" height="15" x="88.573%" y="261" fill="#DC1334" fg:w="2" fg:x="4387"/></g><g><title>sonic_rs::reader::Reader::next (7 samples, 0.14%)</title><rect width=".141%" height="15" x="88.573%" y="277" fill="#DD4E26" fg:w="7" fg:x="4387"/></g><g><title>?? (5 samples, 0.10%)</title><rect width=".101%" height="15" x="88.613%" y="261" fill="#FD1E10" fg:w="5" fg:x="4389"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (5 samples, 0.10%)</title><rect width=".101%" height="15" x="88.613%" y="245" fill="#F24100" fg:w="5" fg:x="4389"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (5 samples, 0.10%)</title><rect width=".101%" height="15" x="88.613%" y="229" fill="#EBC90C" fg:w="5" fg:x="4389"/></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (4 samples, 0.08%)</title><rect width=".081%" height="15" x="89.118%" y="261" fill="#E9A109" fg:w="4" fg:x="4414"/></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (4 samples, 0.08%)</title><rect width=".081%" height="15" x="89.118%" y="245" fill="#F1CF29" fg:w="4" fg:x="4414"/></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.08%)</title><rect width=".081%" height="15" x="89.198%" y="261" fill="#D4452E" fg:w="4" fg:x="4418"/></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (8 samples, 0.16%)</title><rect width=".162%" height="15" x="89.279%" y="261" fill="#EF452D" fg:w="8" fg:x="4422"/></g><g><title>?? (56 samples, 1.13%)</title><rect width="1.131%" height="15" x="88.532%" y="293" fill="#F27530" fg:w="56" fg:x="4385"/></g><g><title>sonic_rs::util::num::parse_number_unchecked (47 samples, 0.95%)</title><rect width=".949%" height="15" x="88.714%" y="277" fill="#E42924" fg:w="47" fg:x="4394"/></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (11 samples, 0.22%)</title><rect width=".222%" height="15" x="89.441%" y="261" fill="#D40320" fg:w="11" fg:x="4430"/></g><g><title>?? (58 samples, 1.17%)</title><rect width="1.171%" height="15" x="88.532%" y="309" fill="#E92931" fg:w="58" fg:x="4385"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="89.663%" y="293" fill="#FCAA31" fg:w="2" fg:x="4441"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (106 samples, 2.14%)</title><rect width="2.14%" height="15" x="87.684%" y="357" fill="#E5351A" fg:w="106" fg:x="4343"/><text x="87.934%" y="367.5">&lt;..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (74 samples, 1.49%)</title><rect width="1.494%" height="15" x="88.33%" y="341" fill="#D99D0C" fg:w="74" fg:x="4375"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (64 samples, 1.29%)</title><rect width="1.292%" height="15" x="88.532%" y="325" fill="#E31109" fg:w="64" fg:x="4385"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (6 samples, 0.12%)</title><rect width=".121%" height="15" x="89.703%" y="309" fill="#DA540C" fg:w="6" fg:x="4443"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (7 samples, 0.14%)</title><rect width=".141%" height="15" x="89.824%" y="309" fill="#D44F18" fg:w="7" fg:x="4449"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (124 samples, 2.50%)</title><rect width="2.503%" height="15" x="87.603%" y="389" fill="#D9DE25" fg:w="124" fg:x="4339"/><text x="87.853%" y="399.5">&lt;s..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (124 samples, 2.50%)</title><rect width="2.503%" height="15" x="87.603%" y="373" fill="#F6D008" fg:w="124" fg:x="4339"/><text x="87.853%" y="383.5">&lt;s..</text></g><g><title>?? (14 samples, 0.28%)</title><rect width=".283%" height="15" x="89.824%" y="357" fill="#F4850A" fg:w="14" fg:x="4449"/></g><g><title>?? (14 samples, 0.28%)</title><rect width=".283%" height="15" x="89.824%" y="341" fill="#D1DB29" fg:w="14" fg:x="4449"/></g><g><title>sonic_rs::reader::Reader::next (14 samples, 0.28%)</title><rect width=".283%" height="15" x="89.824%" y="325" fill="#FDAF2D" fg:w="14" fg:x="4449"/></g><g><title>?? (7 samples, 0.14%)</title><rect width=".141%" height="15" x="89.966%" y="309" fill="#EB6425" fg:w="7" fg:x="4456"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (7 samples, 0.14%)</title><rect width=".141%" height="15" x="89.966%" y="293" fill="#E15713" fg:w="7" fg:x="4456"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (7 samples, 0.14%)</title><rect width=".141%" height="15" x="89.966%" y="277" fill="#D99811" fg:w="7" fg:x="4456"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.14%)</title><rect width=".141%" height="15" x="91.439%" y="293" fill="#EB480D" fg:w="7" fg:x="4529"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.18%)</title><rect width=".182%" height="15" x="91.581%" y="261" fill="#E98C12" fg:w="9" fg:x="4536"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::slice_unchecked (5 samples, 0.10%)</title><rect width=".101%" height="15" x="91.763%" y="261" fill="#CFD41C" fg:w="5" fg:x="4545"/></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.10%)</title><rect width=".101%" height="15" x="91.763%" y="245" fill="#DC8219" fg:w="5" fg:x="4545"/></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.10%)</title><rect width=".101%" height="15" x="91.763%" y="229" fill="#CD3722" fg:w="5" fg:x="4545"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (38 samples, 0.77%)</title><rect width=".767%" height="15" x="91.864%" y="245" fill="#ED3623" fg:w="38" fg:x="4550"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (9 samples, 0.18%)</title><rect width=".182%" height="15" x="92.631%" y="245" fill="#D04317" fg:w="9" fg:x="4588"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (5 samples, 0.10%)</title><rect width=".101%" height="15" x="92.812%" y="245" fill="#CECF32" fg:w="5" fg:x="4597"/></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (2 samples, 0.04%)</title><rect width=".04%" height="15" x="92.913%" y="245" fill="#D5D32A" fg:w="2" fg:x="4602"/></g><g><title>?? (70 samples, 1.41%)</title><rect width="1.413%" height="15" x="91.581%" y="293" fill="#FCC532" fg:w="70" fg:x="4536"/></g><g><title>?? (70 samples, 1.41%)</title><rect width="1.413%" height="15" x="91.581%" y="277" fill="#FBD329" fg:w="70" fg:x="4536"/></g><g><title>?? (56 samples, 1.13%)</title><rect width="1.131%" height="15" x="91.864%" y="261" fill="#E5D305" fg:w="56" fg:x="4550"/></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (2 samples, 0.04%)</title><rect width=".04%" height="15" x="92.954%" y="245" fill="#EF241F" fg:w="2" fg:x="4604"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (138 samples, 2.79%)</title><rect width="2.786%" height="15" x="90.269%" y="357" fill="#F8431F" fg:w="138" fg:x="4471"/><text x="90.519%" y="367.5">&lt;c..</text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (80 samples, 1.62%)</title><rect width="1.615%" height="15" x="91.439%" y="341" fill="#F9372C" fg:w="80" fg:x="4529"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (80 samples, 1.62%)</title><rect width="1.615%" height="15" x="91.439%" y="325" fill="#D8520C" fg:w="80" fg:x="4529"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (80 samples, 1.62%)</title><rect width="1.615%" height="15" x="91.439%" y="309" fill="#F2AE01" fg:w="80" fg:x="4529"/></g><g><title>serde::de::Visitor::visit_borrowed_str (3 samples, 0.06%)</title><rect width=".061%" height="15" x="92.994%" y="293" fill="#D0781D" fg:w="3" fg:x="4606"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (3 samples, 0.06%)</title><rect width=".061%" height="15" x="92.994%" y="277" fill="#DD692B" fg:w="3" fg:x="4606"/></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="92.994%" y="261" fill="#EA7C16" fg:w="3" fg:x="4606"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="92.994%" y="245" fill="#D4171E" fg:w="3" fg:x="4606"/></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="92.994%" y="229" fill="#DB7A35" fg:w="3" fg:x="4606"/></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.06%)</title><rect width=".061%" height="15" x="92.994%" y="213" fill="#F85418" fg:w="3" fg:x="4606"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect width=".04%" height="15" x="93.055%" y="341" fill="#F57312" fg:w="2" fg:x="4609"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (5 samples, 0.10%)</title><rect width=".101%" height="15" x="93.095%" y="341" fill="#E3B033" fg:w="5" fg:x="4611"/></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (1 samples, 0.02%)</title><rect width=".02%" height="15" x="93.196%" y="341" fill="#E53F2A" fg:w="1" fg:x="4616"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (9 samples, 0.18%)</title><rect width=".182%" height="15" x="93.216%" y="325" fill="#F7CA18" fg:w="9" fg:x="4617"/></g><g><title>sonic_rs::reader::Reader::next (21 samples, 0.42%)</title><rect width=".424%" height="15" x="93.216%" y="341" fill="#F4AD14" fg:w="21" fg:x="4617"/></g><g><title>?? (12 samples, 0.24%)</title><rect width=".242%" height="15" x="93.398%" y="325" fill="#F2512F" fg:w="12" fg:x="4626"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (12 samples, 0.24%)</title><rect width=".242%" height="15" x="93.398%" y="309" fill="#E7B936" fg:w="12" fg:x="4626"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (12 samples, 0.24%)</title><rect width=".242%" height="15" x="93.398%" y="293" fill="#F33720" fg:w="12" fg:x="4626"/></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (6 samples, 0.12%)</title><rect width=".121%" height="15" x="93.64%" y="325" fill="#D0A713" fg:w="6" fg:x="4638"/></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (6 samples, 0.12%)</title><rect width=".121%" height="15" x="93.761%" y="325" fill="#E74823" fg:w="6" fg:x="4644"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (328 samples, 6.62%)</title><rect width="6.622%" height="15" x="87.381%" y="405" fill="#FAAD33" fg:w="328" fg:x="4328"/><text x="87.631%" y="415.5">&lt;json_ben..</text></g><g><title>serde::de::MapAccess::next_key (193 samples, 3.90%)</title><rect width="3.897%" height="15" x="90.107%" y="389" fill="#D10516" fg:w="193" fg:x="4463"/><text x="90.357%" y="399.5">serd..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (193 samples, 3.90%)</title><rect width="3.897%" height="15" x="90.107%" y="373" fill="#FAAE13" fg:w="193" fg:x="4463"/><text x="90.357%" y="383.5">&lt;son..</text></g><g><title>?? (47 samples, 0.95%)</title><rect width=".949%" height="15" x="93.055%" y="357" fill="#D90331" fg:w="47" fg:x="4609"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (18 samples, 0.36%)</title><rect width=".363%" height="15" x="93.64%" y="341" fill="#DAE105" fg:w="18" fg:x="4638"/></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (6 samples, 0.12%)</title><rect width=".121%" height="15" x="93.882%" y="325" fill="#EC590B" fg:w="6" fg:x="4650"/></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (1 samples, 0.02%)</title><rect width=".02%" height="15" x="94.004%" y="389" fill="#CE211C" fg:w="1" fg:x="4656"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (8 samples, 0.16%)</title><rect width=".162%" height="15" x="94.024%" y="373" fill="#F1382A" fg:w="8" fg:x="4657"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (379 samples, 7.65%)</title><rect width="7.652%" height="15" x="86.554%" y="453" fill="#DE2C0B" fg:w="379" fg:x="4287"/><text x="86.804%" y="463.5">&lt;core::mar..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize (363 samples, 7.33%)</title><rect width="7.329%" height="15" x="86.877%" y="437" fill="#EA6F14" fg:w="363" fg:x="4303"/><text x="87.127%" y="447.5">json_bench..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (363 samples, 7.33%)</title><rect width="7.329%" height="15" x="86.877%" y="421" fill="#ED4D06" fg:w="363" fg:x="4303"/><text x="87.127%" y="431.5">&lt;&amp;mut soni..</text></g><g><title>?? (10 samples, 0.20%)</title><rect width=".202%" height="15" x="94.004%" y="405" fill="#EB6F17" fg:w="10" fg:x="4656"/></g><g><title>sonic_rs::reader::Reader::next (9 samples, 0.18%)</title><rect width=".182%" height="15" x="94.024%" y="389" fill="#FB871D" fg:w="9" fg:x="4657"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="94.185%" y="373" fill="#D93901" fg:w="1" fg:x="4665"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="94.185%" y="357" fill="#F9771F" fg:w="1" fg:x="4665"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="94.185%" y="341" fill="#E9A421" fg:w="1" fg:x="4665"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (5 samples, 0.10%)</title><rect width=".101%" height="15" x="94.206%" y="421" fill="#FAD92B" fg:w="5" fg:x="4666"/></g><g><title>sonic_rs::reader::Reader::next (8 samples, 0.16%)</title><rect width=".162%" height="15" x="94.206%" y="437" fill="#E89A32" fg:w="8" fg:x="4666"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="94.306%" y="421" fill="#E3BE08" fg:w="3" fg:x="4671"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (3 samples, 0.06%)</title><rect width=".061%" height="15" x="94.306%" y="405" fill="#D1D920" fg:w="3" fg:x="4671"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (3 samples, 0.06%)</title><rect width=".061%" height="15" x="94.306%" y="389" fill="#F3CB32" fg:w="3" fg:x="4671"/></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="94.387%" y="421" fill="#E8981B" fg:w="1" fg:x="4675"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (472 samples, 9.53%)</title><rect width="9.53%" height="15" x="84.898%" y="533" fill="#F0221D" fg:w="472" fg:x="4205"/><text x="85.148%" y="543.5">serde::de::imp..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (472 samples, 9.53%)</title><rect width="9.53%" height="15" x="84.898%" y="517" fill="#D7B934" fg:w="472" fg:x="4205"/><text x="85.148%" y="527.5">&lt;&amp;mut sonic_rs..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (470 samples, 9.49%)</title><rect width="9.489%" height="15" x="84.938%" y="501" fill="#F05931" fg:w="470" fg:x="4207"/><text x="85.188%" y="511.5">&lt;serde::de::im..</text></g><g><title>serde::de::SeqAccess::next_element (399 samples, 8.06%)</title><rect width="8.056%" height="15" x="86.372%" y="485" fill="#E10C34" fg:w="399" fg:x="4278"/><text x="86.622%" y="495.5">serde::de::..</text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (399 samples, 8.06%)</title><rect width="8.056%" height="15" x="86.372%" y="469" fill="#EF802D" fg:w="399" fg:x="4278"/><text x="86.622%" y="479.5">&lt;sonic_rs::..</text></g><g><title>?? (11 samples, 0.22%)</title><rect width=".222%" height="15" x="94.206%" y="453" fill="#D34E2F" fg:w="11" fg:x="4666"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (3 samples, 0.06%)</title><rect width=".061%" height="15" x="94.367%" y="437" fill="#E81F15" fg:w="3" fg:x="4674"/></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="94.407%" y="421" fill="#DEA80E" fg:w="1" fg:x="4676"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="94.428%" y="469" fill="#D18018" fg:w="1" fg:x="4677"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="94.428%" y="453" fill="#F9230D" fg:w="1" fg:x="4677"/></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (2 samples, 0.04%)</title><rect width=".04%" height="15" x="94.448%" y="453" fill="#DA0702" fg:w="2" fg:x="4678"/></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (2 samples, 0.04%)</title><rect width=".04%" height="15" x="94.448%" y="437" fill="#EE6B1B" fg:w="2" fg:x="4678"/></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (2 samples, 0.04%)</title><rect width=".04%" height="15" x="94.488%" y="453" fill="#D95826" fg:w="2" fg:x="4680"/></g><g><title>?? (8 samples, 0.16%)</title><rect width=".162%" height="15" x="94.428%" y="501" fill="#E6CF00" fg:w="8" fg:x="4677"/></g><g><title>?? (8 samples, 0.16%)</title><rect width=".162%" height="15" x="94.428%" y="485" fill="#F94036" fg:w="8" fg:x="4677"/></g><g><title>sonic_rs::util::num::parse_number_unchecked (7 samples, 0.14%)</title><rect width=".141%" height="15" x="94.448%" y="469" fill="#E7070B" fg:w="7" fg:x="4678"/></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (3 samples, 0.06%)</title><rect width=".061%" height="15" x="94.529%" y="453" fill="#CD9515" fg:w="3" fg:x="4682"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (483 samples, 9.75%)</title><rect width="9.752%" height="15" x="84.858%" y="581" fill="#D77E22" fg:w="483" fg:x="4203"/><text x="85.108%" y="591.5">&lt;sonic_rs::ser..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (483 samples, 9.75%)</title><rect width="9.752%" height="15" x="84.858%" y="565" fill="#F1842D" fg:w="483" fg:x="4203"/><text x="85.108%" y="575.5">&lt;sonic_rs::ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (483 samples, 9.75%)</title><rect width="9.752%" height="15" x="84.858%" y="549" fill="#FC4520" fg:w="483" fg:x="4203"/><text x="85.108%" y="559.5">&lt;core::marker:..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (9 samples, 0.18%)</title><rect width=".182%" height="15" x="94.428%" y="533" fill="#E8CC13" fg:w="9" fg:x="4677"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (9 samples, 0.18%)</title><rect width=".182%" height="15" x="94.428%" y="517" fill="#F90F2F" fg:w="9" fg:x="4677"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="94.589%" y="501" fill="#D1E317" fg:w="1" fg:x="4685"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="94.872%" y="485" fill="#F85C18" fg:w="1" fg:x="4699"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::slice_unchecked (1 samples, 0.02%)</title><rect width=".02%" height="15" x="94.892%" y="453" fill="#F73B02" fg:w="1" fg:x="4700"/></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="94.892%" y="437" fill="#DD1E05" fg:w="1" fg:x="4700"/></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="94.892%" y="421" fill="#D06C35" fg:w="1" fg:x="4700"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="94.912%" y="437" fill="#D3B71A" fg:w="3" fg:x="4701"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="94.973%" y="437" fill="#E88404" fg:w="1" fg:x="4704"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (20 samples, 0.40%)</title><rect width=".404%" height="15" x="94.609%" y="549" fill="#FD8025" fg:w="20" fg:x="4686"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (7 samples, 0.14%)</title><rect width=".141%" height="15" x="94.872%" y="533" fill="#DD3A18" fg:w="7" fg:x="4699"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (7 samples, 0.14%)</title><rect width=".141%" height="15" x="94.872%" y="517" fill="#E6362D" fg:w="7" fg:x="4699"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.14%)</title><rect width=".141%" height="15" x="94.872%" y="501" fill="#FE1512" fg:w="7" fg:x="4699"/></g><g><title>?? (6 samples, 0.12%)</title><rect width=".121%" height="15" x="94.892%" y="485" fill="#DD6C00" fg:w="6" fg:x="4700"/></g><g><title>?? (6 samples, 0.12%)</title><rect width=".121%" height="15" x="94.892%" y="469" fill="#CE5F01" fg:w="6" fg:x="4700"/></g><g><title>?? (5 samples, 0.10%)</title><rect width=".101%" height="15" x="94.912%" y="453" fill="#ED3405" fg:w="5" fg:x="4701"/></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (1 samples, 0.02%)</title><rect width=".02%" height="15" x="94.993%" y="437" fill="#DA9622" fg:w="1" fg:x="4705"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (3 samples, 0.06%)</title><rect width=".061%" height="15" x="95.013%" y="533" fill="#EBC21C" fg:w="3" fg:x="4706"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect width=".04%" height="15" x="95.074%" y="517" fill="#F55C12" fg:w="2" fg:x="4709"/></g><g><title>sonic_rs::reader::Reader::next (3 samples, 0.06%)</title><rect width=".061%" height="15" x="95.074%" y="533" fill="#FDCB35" fg:w="3" fg:x="4709"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.114%" y="517" fill="#F9B92F" fg:w="1" fg:x="4711"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.114%" y="501" fill="#FCC234" fg:w="1" fg:x="4711"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.114%" y="485" fill="#D23524" fg:w="1" fg:x="4711"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (511 samples, 10.32%)</title><rect width="10.317%" height="15" x="84.838%" y="597" fill="#ED2519" fg:w="511" fg:x="4202"/><text x="85.088%" y="607.5">&lt;json_benchmark..</text></g><g><title>serde::de::MapAccess::next_key (27 samples, 0.55%)</title><rect width=".545%" height="15" x="94.609%" y="581" fill="#F2741B" fg:w="27" fg:x="4686"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (27 samples, 0.55%)</title><rect width=".545%" height="15" x="94.609%" y="565" fill="#D5B91A" fg:w="27" fg:x="4686"/></g><g><title>?? (7 samples, 0.14%)</title><rect width=".141%" height="15" x="95.013%" y="549" fill="#E1CC08" fg:w="7" fg:x="4706"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.134%" y="533" fill="#FE6F25" fg:w="1" fg:x="4712"/></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.134%" y="517" fill="#F22309" fg:w="1" fg:x="4712"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (587 samples, 11.85%)</title><rect width="11.851%" height="15" x="83.323%" y="645" fill="#E88A31" fg:w="587" fg:x="4127"/><text x="83.573%" y="655.5">&lt;core::marker::Pha..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize (516 samples, 10.42%)</title><rect width="10.418%" height="15" x="84.757%" y="629" fill="#F73804" fg:w="516" fg:x="4198"/><text x="85.007%" y="639.5">json_benchmark:..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (516 samples, 10.42%)</title><rect width="10.418%" height="15" x="84.757%" y="613" fill="#E2B311" fg:w="516" fg:x="4198"/><text x="85.007%" y="623.5">&lt;&amp;mut sonic_rs:..</text></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.154%" y="597" fill="#D8A32D" fg:w="1" fg:x="4713"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.154%" y="581" fill="#D39D03" fg:w="1" fg:x="4713"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.154%" y="565" fill="#EA2C14" fg:w="1" fg:x="4713"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect width=".04%" height="15" x="95.175%" y="613" fill="#FE8A17" fg:w="2" fg:x="4714"/></g><g><title>sonic_rs::reader::Reader::next (3 samples, 0.06%)</title><rect width=".061%" height="15" x="95.175%" y="629" fill="#CE7727" fg:w="3" fg:x="4714"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.215%" y="613" fill="#E76934" fg:w="1" fg:x="4716"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.215%" y="597" fill="#FA1405" fg:w="1" fg:x="4716"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.215%" y="581" fill="#D7C61E" fg:w="1" fg:x="4716"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (617 samples, 12.46%)</title><rect width="12.457%" height="15" x="82.798%" y="725" fill="#F68E08" fg:w="617" fg:x="4101"/><text x="83.048%" y="735.5">serde::de::impls::&lt;..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (617 samples, 12.46%)</title><rect width="12.457%" height="15" x="82.798%" y="709" fill="#F31A26" fg:w="617" fg:x="4101"/><text x="83.048%" y="719.5">&lt;&amp;mut sonic_rs::ser..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (617 samples, 12.46%)</title><rect width="12.457%" height="15" x="82.798%" y="693" fill="#CD851C" fg:w="617" fg:x="4101"/><text x="83.048%" y="703.5">&lt;serde::de::impls::..</text></g><g><title>serde::de::SeqAccess::next_element (594 samples, 11.99%)</title><rect width="11.993%" height="15" x="83.263%" y="677" fill="#D42200" fg:w="594" fg:x="4124"/><text x="83.513%" y="687.5">serde::de::SeqAcce..</text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (594 samples, 11.99%)</title><rect width="11.993%" height="15" x="83.263%" y="661" fill="#FBE216" fg:w="594" fg:x="4124"/><text x="83.513%" y="671.5">&lt;sonic_rs::serde::..</text></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="95.175%" y="645" fill="#FC7709" fg:w="4" fg:x="4714"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.235%" y="629" fill="#D59632" fg:w="1" fg:x="4717"/></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.235%" y="613" fill="#D41827" fg:w="1" fg:x="4717"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="725" fill="#D52E27" fg:w="1" fg:x="4718"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="709" fill="#EF6A0C" fg:w="1" fg:x="4718"/></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="693" fill="#F9E515" fg:w="1" fg:x="4718"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="677" fill="#D49E03" fg:w="1" fg:x="4718"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="661" fill="#FD1A30" fg:w="1" fg:x="4718"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="645" fill="#EEB214" fg:w="1" fg:x="4718"/></g><g><title>serde::de::Visitor::visit_borrowed_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="629" fill="#D0560F" fg:w="1" fg:x="4718"/></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="613" fill="#EF2A35" fg:w="1" fg:x="4718"/></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="597" fill="#F5E208" fg:w="1" fg:x="4718"/></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="581" fill="#D8B020" fg:w="1" fg:x="4718"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="565" fill="#E7BA15" fg:w="1" fg:x="4718"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="549" fill="#CD5F31" fg:w="1" fg:x="4718"/></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="533" fill="#D99108" fg:w="1" fg:x="4718"/></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="517" fill="#EF9030" fg:w="1" fg:x="4718"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="501" fill="#D6BD17" fg:w="1" fg:x="4718"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="485" fill="#E59D11" fg:w="1" fg:x="4718"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="469" fill="#E60530" fg:w="1" fg:x="4718"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="453" fill="#E09C30" fg:w="1" fg:x="4718"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="437" fill="#DF0E1D" fg:w="1" fg:x="4718"/></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="421" fill="#E56024" fg:w="1" fg:x="4718"/></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="405" fill="#E76635" fg:w="1" fg:x="4718"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="389" fill="#D24D26" fg:w="1" fg:x="4718"/></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="373" fill="#EB8306" fg:w="1" fg:x="4718"/></g><g><title>imalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="357" fill="#FC3726" fg:w="1" fg:x="4718"/></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="341" fill="#F6260E" fg:w="1" fg:x="4718"/></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="325" fill="#F21B05" fg:w="1" fg:x="4718"/></g><g><title>iallocztm (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="309" fill="#E44123" fg:w="1" fg:x="4718"/></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="293" fill="#F55D0B" fg:w="1" fg:x="4718"/></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="277" fill="#D5011F" fg:w="1" fg:x="4718"/></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="261" fill="#EDCD0E" fg:w="1" fg:x="4718"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.255%" y="245" fill="#E8762D" fg:w="1" fg:x="4718"/></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.316%" y="645" fill="#DA0506" fg:w="1" fg:x="4721"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="95.276%" y="725" fill="#FB5733" fg:w="4" fg:x="4719"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (3 samples, 0.06%)</title><rect width=".061%" height="15" x="95.296%" y="709" fill="#CFE114" fg:w="3" fg:x="4720"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="95.296%" y="693" fill="#DE4E36" fg:w="3" fg:x="4720"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="95.296%" y="677" fill="#E85510" fg:w="3" fg:x="4720"/></g><g><title>sonic_rs::util::num::parse_number_unchecked (3 samples, 0.06%)</title><rect width=".061%" height="15" x="95.296%" y="661" fill="#F41921" fg:w="3" fg:x="4720"/></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.336%" y="645" fill="#E91824" fg:w="1" fg:x="4722"/></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.376%" y="645" fill="#FD3136" fg:w="1" fg:x="4724"/></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.376%" y="629" fill="#F50C16" fg:w="1" fg:x="4724"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (635 samples, 12.82%)</title><rect width="12.82%" height="15" x="82.596%" y="741" fill="#FD8D1C" fg:w="635" fg:x="4091"/><text x="82.846%" y="751.5">&lt;core::marker::Phan..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="95.356%" y="725" fill="#E1CF1B" fg:w="3" fg:x="4723"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u64 (3 samples, 0.06%)</title><rect width=".061%" height="15" x="95.356%" y="709" fill="#DC5402" fg:w="3" fg:x="4723"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="95.356%" y="693" fill="#E02525" fg:w="3" fg:x="4723"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="95.356%" y="677" fill="#DC8F12" fg:w="3" fg:x="4723"/></g><g><title>sonic_rs::util::num::parse_number_unchecked (3 samples, 0.06%)</title><rect width=".061%" height="15" x="95.356%" y="661" fill="#D25821" fg:w="3" fg:x="4723"/></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.397%" y="645" fill="#DB5733" fg:w="1" fg:x="4725"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect width=".04%" height="15" x="95.417%" y="693" fill="#D30723" fg:w="2" fg:x="4726"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (640 samples, 12.92%)</title><rect width="12.921%" height="15" x="82.556%" y="773" fill="#E84D02" fg:w="640" fg:x="4089"/><text x="82.806%" y="783.5">&lt;sonic_rs::serde::d..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (640 samples, 12.92%)</title><rect width="12.921%" height="15" x="82.556%" y="757" fill="#F95E19" fg:w="640" fg:x="4089"/><text x="82.806%" y="767.5">&lt;sonic_rs::serde::d..</text></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="95.417%" y="741" fill="#D77002" fg:w="3" fg:x="4726"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="95.417%" y="725" fill="#E27330" fg:w="3" fg:x="4726"/></g><g><title>sonic_rs::reader::Reader::next (3 samples, 0.06%)</title><rect width=".061%" height="15" x="95.417%" y="709" fill="#F9C40A" fg:w="3" fg:x="4726"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.457%" y="693" fill="#ED6D0E" fg:w="1" fg:x="4728"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.457%" y="677" fill="#D96735" fg:w="1" fg:x="4728"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.457%" y="661" fill="#F48909" fg:w="1" fg:x="4728"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (7 samples, 0.14%)</title><rect width=".141%" height="15" x="95.518%" y="741" fill="#E3C903" fg:w="7" fg:x="4731"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (4 samples, 0.08%)</title><rect width=".081%" height="15" x="95.659%" y="645" fill="#F35E06" fg:w="4" fg:x="4738"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::slice_unchecked (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.74%" y="645" fill="#EB7605" fg:w="1" fg:x="4742"/></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.74%" y="629" fill="#F70A1E" fg:w="1" fg:x="4742"/></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.74%" y="613" fill="#CD1A1C" fg:w="1" fg:x="4742"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (4 samples, 0.08%)</title><rect width=".081%" height="15" x="95.76%" y="629" fill="#CE6323" fg:w="4" fg:x="4743"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect width=".04%" height="15" x="95.841%" y="629" fill="#EE8228" fg:w="2" fg:x="4747"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12 samples, 0.24%)</title><rect width=".242%" height="15" x="95.659%" y="741" fill="#E07E1F" fg:w="12" fg:x="4738"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (12 samples, 0.24%)</title><rect width=".242%" height="15" x="95.659%" y="725" fill="#FE6911" fg:w="12" fg:x="4738"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (12 samples, 0.24%)</title><rect width=".242%" height="15" x="95.659%" y="709" fill="#D85724" fg:w="12" fg:x="4738"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.24%)</title><rect width=".242%" height="15" x="95.659%" y="693" fill="#F0150C" fg:w="12" fg:x="4738"/></g><g><title>?? (12 samples, 0.24%)</title><rect width=".242%" height="15" x="95.659%" y="677" fill="#F5C022" fg:w="12" fg:x="4738"/></g><g><title>?? (12 samples, 0.24%)</title><rect width=".242%" height="15" x="95.659%" y="661" fill="#E26431" fg:w="12" fg:x="4738"/></g><g><title>?? (7 samples, 0.14%)</title><rect width=".141%" height="15" x="95.76%" y="645" fill="#F5BC1B" fg:w="7" fg:x="4743"/></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.881%" y="629" fill="#D4AA08" fg:w="1" fg:x="4749"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect width=".02%" height="15" x="95.901%" y="725" fill="#D9711D" fg:w="1" fg:x="4750"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect width=".04%" height="15" x="95.922%" y="709" fill="#ED1E03" fg:w="2" fg:x="4751"/></g><g><title>sonic_rs::reader::Reader::next (5 samples, 0.10%)</title><rect width=".101%" height="15" x="95.922%" y="725" fill="#E3131C" fg:w="5" fg:x="4751"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="95.962%" y="709" fill="#EFAC2D" fg:w="3" fg:x="4753"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (3 samples, 0.06%)</title><rect width=".061%" height="15" x="95.962%" y="693" fill="#FE3727" fg:w="3" fg:x="4753"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (3 samples, 0.06%)</title><rect width=".061%" height="15" x="95.962%" y="677" fill="#F9D00C" fg:w="3" fg:x="4753"/></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="96.043%" y="709" fill="#F0340D" fg:w="1" fg:x="4757"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (674 samples, 13.61%)</title><rect width="13.608%" height="15" x="82.475%" y="789" fill="#FC950D" fg:w="674" fg:x="4085"/><text x="82.725%" y="799.5">&lt;json_benchmark::copy..</text></g><g><title>serde::de::MapAccess::next_key (30 samples, 0.61%)</title><rect width=".606%" height="15" x="95.478%" y="773" fill="#E85130" fg:w="30" fg:x="4729"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (30 samples, 0.61%)</title><rect width=".606%" height="15" x="95.478%" y="757" fill="#DE9002" fg:w="30" fg:x="4729"/></g><g><title>?? (9 samples, 0.18%)</title><rect width=".182%" height="15" x="95.901%" y="741" fill="#D85120" fg:w="9" fg:x="4750"/></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (3 samples, 0.06%)</title><rect width=".061%" height="15" x="96.023%" y="725" fill="#F44E33" fg:w="3" fg:x="4756"/></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="96.063%" y="709" fill="#D94215" fg:w="1" fg:x="4758"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (791 samples, 15.97%)</title><rect width="15.97%" height="15" x="80.133%" y="933" fill="#F7652A" fg:w="791" fg:x="3969"/><text x="80.383%" y="943.5">&lt;core::marker::PhantomDat..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (683 samples, 13.79%)</title><rect width="13.79%" height="15" x="82.314%" y="917" fill="#E35127" fg:w="683" fg:x="4077"/><text x="82.564%" y="927.5">serde::de::impls::&lt;im..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (683 samples, 13.79%)</title><rect width="13.79%" height="15" x="82.314%" y="901" fill="#DCDF2C" fg:w="683" fg:x="4077"/><text x="82.564%" y="911.5">&lt;&amp;mut sonic_rs::serde..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (683 samples, 13.79%)</title><rect width="13.79%" height="15" x="82.314%" y="885" fill="#CDDA02" fg:w="683" fg:x="4077"/><text x="82.564%" y="895.5">&lt;serde::de::impls::&lt;i..</text></g><g><title>serde::de::SeqAccess::next_element (675 samples, 13.63%)</title><rect width="13.628%" height="15" x="82.475%" y="869" fill="#D4CF1C" fg:w="675" fg:x="4085"/><text x="82.725%" y="879.5">serde::de::SeqAccess:..</text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (675 samples, 13.63%)</title><rect width="13.628%" height="15" x="82.475%" y="853" fill="#E00C29" fg:w="675" fg:x="4085"/><text x="82.725%" y="863.5">&lt;sonic_rs::serde::de:..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (675 samples, 13.63%)</title><rect width="13.628%" height="15" x="82.475%" y="837" fill="#D8760C" fg:w="675" fg:x="4085"/><text x="82.725%" y="847.5">&lt;core::marker::Phanto..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize (675 samples, 13.63%)</title><rect width="13.628%" height="15" x="82.475%" y="821" fill="#FC612E" fg:w="675" fg:x="4085"/><text x="82.725%" y="831.5">json_benchmark::copy:..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (675 samples, 13.63%)</title><rect width="13.628%" height="15" x="82.475%" y="805" fill="#F4CE13" fg:w="675" fg:x="4085"/><text x="82.725%" y="815.5">&lt;&amp;mut sonic_rs::serde..</text></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="96.083%" y="789" fill="#E7541F" fg:w="1" fg:x="4759"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="96.083%" y="773" fill="#F48500" fg:w="1" fg:x="4759"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="96.083%" y="757" fill="#DF0F32" fg:w="1" fg:x="4759"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (792 samples, 15.99%)</title><rect width="15.99%" height="15" x="80.133%" y="965" fill="#FA7631" fg:w="792" fg:x="3969"/><text x="80.383%" y="975.5">&lt;sonic_rs::serde::de::Map..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (792 samples, 15.99%)</title><rect width="15.99%" height="15" x="80.133%" y="949" fill="#F81926" fg:w="792" fg:x="3969"/><text x="80.383%" y="959.5">&lt;sonic_rs::serde::de::Map..</text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="96.103%" y="933" fill="#D7460E" fg:w="1" fg:x="4760"/></g><g><title>sonic_rs::serde::de::from_trait (795 samples, 16.05%)</title><rect width="16.051%" height="15" x="80.093%" y="1029" fill="#D71C0F" fg:w="795" fg:x="3967"/><text x="80.343%" y="1039.5">sonic_rs::serde::de::from..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize (794 samples, 16.03%)</title><rect width="16.031%" height="15" x="80.113%" y="1013" fill="#F3061C" fg:w="794" fg:x="3968"/><text x="80.363%" y="1023.5">json_benchmark::copy::cit..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (794 samples, 16.03%)</title><rect width="16.031%" height="15" x="80.113%" y="997" fill="#DE8201" fg:w="794" fg:x="3968"/><text x="80.363%" y="1007.5">&lt;&amp;mut sonic_rs::serde::de..</text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (794 samples, 16.03%)</title><rect width="16.031%" height="15" x="80.113%" y="981" fill="#ECA62C" fg:w="794" fg:x="3968"/><text x="80.363%" y="991.5">&lt;json_benchmark::copy::ci..</text></g><g><title>serde::de::MapAccess::next_key (1 samples, 0.02%)</title><rect width=".02%" height="15" x="96.124%" y="965" fill="#DD6C0E" fg:w="1" fg:x="4761"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="96.124%" y="949" fill="#FC032D" fg:w="1" fg:x="4761"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="96.124%" y="933" fill="#ED441E" fg:w="1" fg:x="4761"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="96.124%" y="917" fill="#D34F16" fg:w="1" fg:x="4761"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.02%)</title><rect width=".02%" height="15" x="96.124%" y="901" fill="#FCB915" fg:w="1" fg:x="4761"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect width=".02%" height="15" x="96.124%" y="885" fill="#E1BD1A" fg:w="1" fg:x="4761"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="96.124%" y="869" fill="#F11E28" fg:w="1" fg:x="4761"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="96.124%" y="853" fill="#EBD72C" fg:w="1" fg:x="4761"/></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (10 samples, 0.20%)</title><rect width=".202%" height="15" x="96.164%" y="885" fill="#CD081D" fg:w="10" fg:x="4763"/></g><g><title>?? (16 samples, 0.32%)</title><rect width=".323%" height="15" x="96.164%" y="901" fill="#F1892A" fg:w="16" fg:x="4763"/></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (6 samples, 0.12%)</title><rect width=".121%" height="15" x="96.366%" y="885" fill="#ED9B02" fg:w="6" fg:x="4773"/></g><g><title>?? (42 samples, 0.85%)</title><rect width=".848%" height="15" x="96.164%" y="933" fill="#F51D2A" fg:w="42" fg:x="4763"/></g><g><title>?? (42 samples, 0.85%)</title><rect width=".848%" height="15" x="96.164%" y="917" fill="#EA6523" fg:w="42" fg:x="4763"/></g><g><title>core::core_arch::x86::avx::_mm256_loadu_si256 (26 samples, 0.52%)</title><rect width=".525%" height="15" x="96.487%" y="901" fill="#E44025" fg:w="26" fg:x="4779"/></g><g><title>core::intrinsics::copy_nonoverlapping (26 samples, 0.52%)</title><rect width=".525%" height="15" x="96.487%" y="885" fill="#D9D624" fg:w="26" fg:x="4779"/></g><g><title>simdutf8::implementation::x86::avx2::simd_prefetch (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.012%" y="933" fill="#F34603" fg:w="1" fg:x="4805"/></g><g><title>core::core_arch::x86::sse::_mm_prefetch (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.012%" y="917" fill="#FD9E34" fg:w="1" fg:x="4805"/></g><g><title>simdutf8::implementation::x86::avx2::validate_utf8_basic (48 samples, 0.97%)</title><rect width=".969%" height="15" x="96.144%" y="949" fill="#EA6F36" fg:w="48" fg:x="4762"/></g><g><title>simdutf8::implementation::x86::validate_utf8_basic_avx2 (4 samples, 0.08%)</title><rect width=".081%" height="15" x="97.032%" y="933" fill="#D94620" fg:w="4" fg:x="4806"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (850 samples, 17.16%)</title><rect width="17.161%" height="15" x="80.093%" y="1205" fill="#EA1221" fg:w="850" fg:x="3967"/><text x="80.343%" y="1215.5">&lt;alloc::vec::Vec&lt;T,A&gt; as co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (850 samples, 17.16%)</title><rect width="17.161%" height="15" x="80.093%" y="1189" fill="#EA0C31" fg:w="850" fg:x="3967"/><text x="80.343%" y="1199.5">&lt;alloc::vec::Vec&lt;T,A&gt; as al..</text></g><g><title>?? (850 samples, 17.16%)</title><rect width="17.161%" height="15" x="80.093%" y="1173" fill="#EC0A15" fg:w="850" fg:x="3967"/><text x="80.343%" y="1183.5">??</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (850 samples, 17.16%)</title><rect width="17.161%" height="15" x="80.093%" y="1157" fill="#F8B62D" fg:w="850" fg:x="3967"/><text x="80.343%" y="1167.5">core::iter::traits::iterato..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (850 samples, 17.16%)</title><rect width="17.161%" height="15" x="80.093%" y="1141" fill="#D95F24" fg:w="850" fg:x="3967"/><text x="80.343%" y="1151.5">&lt;core::iter::adapters::map:..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (850 samples, 17.16%)</title><rect width="17.161%" height="15" x="80.093%" y="1125" fill="#D46E1F" fg:w="850" fg:x="3967"/><text x="80.343%" y="1135.5">core::iter::traits::iterato..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (850 samples, 17.16%)</title><rect width="17.161%" height="15" x="80.093%" y="1109" fill="#CE2035" fg:w="850" fg:x="3967"/><text x="80.343%" y="1119.5">core::iter::adapters::map::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (850 samples, 17.16%)</title><rect width="17.161%" height="15" x="80.093%" y="1093" fill="#F68D25" fg:w="850" fg:x="3967"/><text x="80.343%" y="1103.5">core::ops::function::impls:..</text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}}::_{{closure}} (850 samples, 17.16%)</title><rect width="17.161%" height="15" x="80.093%" y="1077" fill="#DB1007" fg:w="850" fg:x="3967"/><text x="80.343%" y="1087.5">deserialize_struct::bench_c..</text></g><g><title>deserialize_struct::sonic_rs_parse_struct (850 samples, 17.16%)</title><rect width="17.161%" height="15" x="80.093%" y="1061" fill="#E6CD2D" fg:w="850" fg:x="3967"/><text x="80.343%" y="1071.5">deserialize_struct::sonic_r..</text></g><g><title>sonic_rs::serde::de::from_slice (850 samples, 17.16%)</title><rect width="17.161%" height="15" x="80.093%" y="1045" fill="#E72B31" fg:w="850" fg:x="3967"/><text x="80.343%" y="1055.5">sonic_rs::serde::de::from_s..</text></g><g><title>sonic_rs::util::utf8::from_utf8 (55 samples, 1.11%)</title><rect width="1.11%" height="15" x="96.144%" y="1029" fill="#D46A22" fg:w="55" fg:x="4762"/></g><g><title>simdutf8::basic::from_utf8 (55 samples, 1.11%)</title><rect width="1.11%" height="15" x="96.144%" y="1013" fill="#CE5311" fg:w="55" fg:x="4762"/></g><g><title>simdutf8::implementation::validate_utf8_basic (55 samples, 1.11%)</title><rect width="1.11%" height="15" x="96.144%" y="997" fill="#F49A31" fg:w="55" fg:x="4762"/></g><g><title>simdutf8::implementation::x86::validate_utf8_basic (55 samples, 1.11%)</title><rect width="1.11%" height="15" x="96.144%" y="981" fill="#F49531" fg:w="55" fg:x="4762"/></g><g><title>simdutf8::implementation::x86::validate_utf8_basic_avx2 (55 samples, 1.11%)</title><rect width="1.11%" height="15" x="96.144%" y="965" fill="#E38612" fg:w="55" fg:x="4762"/></g><g><title>simdutf8::implementation::x86::validate_utf8_basic_avx2 (7 samples, 0.14%)</title><rect width=".141%" height="15" x="97.113%" y="949" fill="#ED7424" fg:w="7" fg:x="4810"/></g><g><title>&lt;criterion::measurement::WallTime as criterion::measurement::Measurement&gt;::end (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.254%" y="1205" fill="#CD8128" fg:w="1" fg:x="4817"/></g><g><title>std::time::Instant::elapsed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.254%" y="1189" fill="#ECB204" fg:w="1" fg:x="4817"/></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.254%" y="1173" fill="#FB4C35" fg:w="1" fg:x="4817"/></g><g><title>std::time::Instant::duration_since (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.254%" y="1157" fill="#F25C28" fg:w="1" fg:x="4817"/></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.254%" y="1141" fill="#D12D1E" fg:w="1" fg:x="4817"/></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.254%" y="1125" fill="#DA9D24" fg:w="1" fg:x="4817"/></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.254%" y="1109" fill="#DEBA10" fg:w="1" fg:x="4817"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,alloc::string::String&gt;&gt; (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.274%" y="1125" fill="#FE4823" fg:w="3" fg:x="4818"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.274%" y="1109" fill="#E01923" fg:w="3" fg:x="4818"/></g><g><title>core::mem::drop (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.274%" y="1093" fill="#CE8734" fg:w="3" fg:x="4818"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,alloc::string::String&gt;&gt; (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.274%" y="1077" fill="#E5AE2F" fg:w="3" fg:x="4818"/></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.274%" y="1061" fill="#F2B815" fg:w="3" fg:x="4818"/></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.274%" y="1045" fill="#D5162D" fg:w="3" fg:x="4818"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.295%" y="1029" fill="#ED5136" fg:w="2" fg:x="4819"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.295%" y="1013" fill="#F8B112" fg:w="2" fg:x="4819"/></g><g><title>alloc::collections::btree::mem::replace (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.295%" y="997" fill="#FE1F10" fg:w="2" fg:x="4819"/></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.295%" y="981" fill="#EB141F" fg:w="2" fg:x="4819"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.295%" y="965" fill="#F0382B" fg:w="2" fg:x="4819"/></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.295%" y="949" fill="#EDC533" fg:w="2" fg:x="4819"/></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.335%" y="1013" fill="#F1A22C" fg:w="1" fg:x="4821"/></g><g><title>isfree (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.335%" y="997" fill="#E01714" fg:w="1" fg:x="4821"/></g><g><title>isdalloct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.335%" y="981" fill="#FA6D22" fg:w="1" fg:x="4821"/></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.335%" y="965" fill="#D6AF32" fg:w="1" fg:x="4821"/></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.335%" y="949" fill="#D5B605" fg:w="1" fg:x="4821"/></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.335%" y="933" fill="#D1C713" fg:w="1" fg:x="4821"/></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.335%" y="917" fill="#ECE02A" fg:w="1" fg:x="4821"/></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.335%" y="901" fill="#F6E21D" fg:w="1" fg:x="4821"/></g><g><title>tcache_bin_flush_match (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.335%" y="885" fill="#E3DF0B" fg:w="1" fg:x="4821"/></g><g><title>edata_binshard_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.335%" y="869" fill="#DB0733" fg:w="1" fg:x="4821"/></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.355%" y="1013" fill="#F5A70A" fg:w="1" fg:x="4822"/></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.355%" y="997" fill="#EDE010" fg:w="1" fg:x="4822"/></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.355%" y="981" fill="#E2840D" fg:w="1" fg:x="4822"/></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.375%" y="741" fill="#D68C03" fg:w="1" fg:x="4823"/></g><g><title>_rjem_je_arena_handle_deferred_work (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.375%" y="725" fill="#DDB104" fg:w="1" fg:x="4823"/></g><g><title>_rjem_je_sdallocx_default (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.375%" y="869" fill="#EE8B03" fg:w="2" fg:x="4823"/></g><g><title>isfree (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.375%" y="853" fill="#D81127" fg:w="2" fg:x="4823"/></g><g><title>isdalloct (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.375%" y="837" fill="#EE7809" fg:w="2" fg:x="4823"/></g><g><title>arena_sdalloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.375%" y="821" fill="#F45C35" fg:w="2" fg:x="4823"/></g><g><title>tcache_dalloc_small (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.375%" y="805" fill="#E09421" fg:w="2" fg:x="4823"/></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.375%" y="789" fill="#F30624" fg:w="2" fg:x="4823"/></g><g><title>tcache_bin_flush_bottom (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.375%" y="773" fill="#E6660B" fg:w="2" fg:x="4823"/></g><g><title>tcache_bin_flush_impl (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.375%" y="757" fill="#EA9424" fg:w="2" fg:x="4823"/></g><g><title>arena_dalloc_bin_locked_step (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.395%" y="741" fill="#FB9919" fg:w="1" fg:x="4824"/></g><g><title>arena_slab_regind (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.395%" y="725" fill="#D78108" fg:w="1" fg:x="4824"/></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.375%" y="997" fill="#E08023" fg:w="3" fg:x="4823"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.375%" y="981" fill="#ED3834" fg:w="3" fg:x="4823"/></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.375%" y="965" fill="#EAD513" fg:w="3" fg:x="4823"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.375%" y="949" fill="#FC5217" fg:w="3" fg:x="4823"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.375%" y="933" fill="#FEC915" fg:w="3" fg:x="4823"/></g><g><title>alloc::alloc::dealloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.375%" y="917" fill="#FABA0B" fg:w="3" fg:x="4823"/></g><g><title>__rust_dealloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.375%" y="901" fill="#D3AE05" fg:w="3" fg:x="4823"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.375%" y="885" fill="#D6790A" fg:w="3" fg:x="4823"/></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.416%" y="869" fill="#F14202" fg:w="1" fg:x="4825"/></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.416%" y="853" fill="#DCA713" fg:w="1" fg:x="4825"/></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.416%" y="837" fill="#E73632" fg:w="1" fg:x="4825"/></g><g><title>sz_size2index_lookup_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.416%" y="821" fill="#EFD935" fg:w="1" fg:x="4825"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.436%" y="997" fill="#F80800" fg:w="3" fg:x="4826"/></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.436%" y="981" fill="#E57625" fg:w="3" fg:x="4826"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.436%" y="965" fill="#FDDF2B" fg:w="3" fg:x="4826"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.436%" y="949" fill="#D34D24" fg:w="3" fg:x="4826"/></g><g><title>alloc::alloc::dealloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.436%" y="933" fill="#DB0335" fg:w="3" fg:x="4826"/></g><g><title>__rust_dealloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.436%" y="917" fill="#F42D2A" fg:w="3" fg:x="4826"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.436%" y="901" fill="#E15F1B" fg:w="3" fg:x="4826"/></g><g><title>_rjem_sdallocx (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.456%" y="885" fill="#CF4A08" fg:w="2" fg:x="4827"/></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.476%" y="869" fill="#F33F24" fg:w="1" fg:x="4828"/></g><g><title>?? (14 samples, 0.28%)</title><rect width=".283%" height="15" x="97.335%" y="1045" fill="#D3B40C" fg:w="14" fg:x="4821"/></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::CitmCatalog&gt; (14 samples, 0.28%)</title><rect width=".283%" height="15" x="97.335%" y="1029" fill="#FEA631" fg:w="14" fg:x="4821"/></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Event&gt; (12 samples, 0.24%)</title><rect width=".242%" height="15" x="97.375%" y="1013" fill="#CD1300" fg:w="12" fg:x="4823"/></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (6 samples, 0.12%)</title><rect width=".121%" height="15" x="97.496%" y="997" fill="#E0AC20" fg:w="6" fg:x="4829"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.638%" y="949" fill="#FE881E" fg:w="1" fg:x="4836"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.638%" y="933" fill="#F61323" fg:w="1" fg:x="4836"/></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.638%" y="917" fill="#DB1824" fg:w="1" fg:x="4836"/></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.638%" y="901" fill="#FB3701" fg:w="1" fg:x="4836"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.638%" y="885" fill="#DA7527" fg:w="1" fg:x="4836"/></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.638%" y="869" fill="#F8A90B" fg:w="1" fg:x="4836"/></g><g><title>isfree (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.638%" y="853" fill="#F4282C" fg:w="1" fg:x="4836"/></g><g><title>isdalloct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.638%" y="837" fill="#EA3E25" fg:w="1" fg:x="4836"/></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.638%" y="821" fill="#CF752A" fg:w="1" fg:x="4836"/></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.638%" y="805" fill="#D52B02" fg:w="1" fg:x="4836"/></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.638%" y="789" fill="#F4CA33" fg:w="1" fg:x="4836"/></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.638%" y="773" fill="#FDAE2E" fg:w="1" fg:x="4836"/></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.638%" y="757" fill="#FB1701" fg:w="1" fg:x="4836"/></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.638%" y="741" fill="#FD1A01" fg:w="1" fg:x="4836"/></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.638%" y="725" fill="#D8591F" fg:w="1" fg:x="4836"/></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.638%" y="709" fill="#D16D05" fg:w="1" fg:x="4836"/></g><g><title>extent_try_coalesce_large (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.638%" y="693" fill="#E53F0D" fg:w="1" fg:x="4836"/></g><g><title>extent_try_coalesce_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.638%" y="677" fill="#EE8936" fg:w="1" fg:x="4836"/></g><g><title>extent_coalesce (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.638%" y="661" fill="#E40109" fg:w="1" fg:x="4836"/></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.638%" y="645" fill="#F97830" fg:w="1" fg:x="4836"/></g><g><title>edata_list_inactive_remove (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.638%" y="629" fill="#D14824" fg:w="1" fg:x="4836"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,json_benchmark::copy::citm_catalog::Event&gt;&gt; (17 samples, 0.34%)</title><rect width=".343%" height="15" x="97.335%" y="1125" fill="#F76231" fg:w="17" fg:x="4821"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.34%)</title><rect width=".343%" height="15" x="97.335%" y="1109" fill="#E94B24" fg:w="17" fg:x="4821"/></g><g><title>core::mem::drop (17 samples, 0.34%)</title><rect width=".343%" height="15" x="97.335%" y="1093" fill="#E10E18" fg:w="17" fg:x="4821"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,json_benchmark::copy::citm_catalog::Event&gt;&gt; (17 samples, 0.34%)</title><rect width=".343%" height="15" x="97.335%" y="1077" fill="#EDC114" fg:w="17" fg:x="4821"/></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.34%)</title><rect width=".343%" height="15" x="97.335%" y="1061" fill="#EF7A13" fg:w="17" fg:x="4821"/></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.618%" y="1045" fill="#E7DC0A" fg:w="3" fg:x="4835"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.638%" y="1029" fill="#DC420F" fg:w="2" fg:x="4836"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.638%" y="1013" fill="#D7AB34" fg:w="2" fg:x="4836"/></g><g><title>alloc::collections::btree::mem::replace (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.638%" y="997" fill="#F1A932" fg:w="2" fg:x="4836"/></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.638%" y="981" fill="#ECBD00" fg:w="2" fg:x="4836"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.638%" y="965" fill="#D99314" fg:w="2" fg:x="4836"/></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.658%" y="949" fill="#CEBC27" fg:w="1" fg:x="4837"/></g><g><title>cache_bin_finish_flush (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.678%" y="773" fill="#E37619" fg:w="1" fg:x="4838"/></g><g><title>bitmap_unset (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.698%" y="741" fill="#F8AB28" fg:w="1" fg:x="4839"/></g><g><title>arena_dalloc_bin_locked_step (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.698%" y="757" fill="#FB5A36" fg:w="2" fg:x="4839"/></g><g><title>edata_nfree_inc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.719%" y="741" fill="#EA0B2E" fg:w="1" fg:x="4840"/></g><g><title>arena_decay_ticks (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.739%" y="757" fill="#E5860D" fg:w="1" fg:x="4841"/></g><g><title>_rjem_je_arena_decay (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.739%" y="741" fill="#DF8103" fg:w="1" fg:x="4841"/></g><g><title>arena_decay_dirty (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.739%" y="725" fill="#DD7C0D" fg:w="1" fg:x="4841"/></g><g><title>arena_decay_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.739%" y="709" fill="#EA0312" fg:w="1" fg:x="4841"/></g><g><title>_rjem_je_pac_maybe_decay_purge (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.739%" y="693" fill="#F9C714" fg:w="1" fg:x="4841"/></g><g><title>_rjem_je_decay_maybe_advance_epoch (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.739%" y="677" fill="#E08606" fg:w="1" fg:x="4841"/></g><g><title>_rjem_je_nstime_imultiply (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.739%" y="661" fill="#FE531A" fg:w="1" fg:x="4841"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.12%)</title><rect width=".121%" height="15" x="97.678%" y="949" fill="#D95809" fg:w="6" fg:x="4838"/></g><g><title>alloc::alloc::dealloc (6 samples, 0.12%)</title><rect width=".121%" height="15" x="97.678%" y="933" fill="#E14902" fg:w="6" fg:x="4838"/></g><g><title>__rust_dealloc (6 samples, 0.12%)</title><rect width=".121%" height="15" x="97.678%" y="917" fill="#E22C27" fg:w="6" fg:x="4838"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (6 samples, 0.12%)</title><rect width=".121%" height="15" x="97.678%" y="901" fill="#E43511" fg:w="6" fg:x="4838"/></g><g><title>_rjem_je_sdallocx_default (6 samples, 0.12%)</title><rect width=".121%" height="15" x="97.678%" y="885" fill="#D41B1B" fg:w="6" fg:x="4838"/></g><g><title>isfree (6 samples, 0.12%)</title><rect width=".121%" height="15" x="97.678%" y="869" fill="#F13206" fg:w="6" fg:x="4838"/></g><g><title>isdalloct (6 samples, 0.12%)</title><rect width=".121%" height="15" x="97.678%" y="853" fill="#E11C33" fg:w="6" fg:x="4838"/></g><g><title>arena_sdalloc (6 samples, 0.12%)</title><rect width=".121%" height="15" x="97.678%" y="837" fill="#D72110" fg:w="6" fg:x="4838"/></g><g><title>tcache_dalloc_small (6 samples, 0.12%)</title><rect width=".121%" height="15" x="97.678%" y="821" fill="#F32827" fg:w="6" fg:x="4838"/></g><g><title>_rjem_je_tcache_bin_flush_small (6 samples, 0.12%)</title><rect width=".121%" height="15" x="97.678%" y="805" fill="#E10B2A" fg:w="6" fg:x="4838"/></g><g><title>tcache_bin_flush_bottom (6 samples, 0.12%)</title><rect width=".121%" height="15" x="97.678%" y="789" fill="#F1DC26" fg:w="6" fg:x="4838"/></g><g><title>tcache_bin_flush_impl (5 samples, 0.10%)</title><rect width=".101%" height="15" x="97.698%" y="773" fill="#F43423" fg:w="5" fg:x="4839"/></g><g><title>malloc_mutex_lock (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.759%" y="757" fill="#F62A2E" fg:w="2" fg:x="4842"/></g><g><title>malloc_mutex_trylock_final (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.759%" y="741" fill="#CDB80D" fg:w="2" fg:x="4842"/></g><g><title>__GI___pthread_mutex_trylock (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.759%" y="725" fill="#D13024" fg:w="2" fg:x="4842"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.799%" y="949" fill="#F42233" fg:w="1" fg:x="4844"/></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.799%" y="933" fill="#DD6B21" fg:w="1" fg:x="4844"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.20%)</title><rect width=".202%" height="15" x="97.678%" y="1045" fill="#E0CB0C" fg:w="10" fg:x="4838"/></g><g><title>core::ptr::drop_in_place&lt;[json_benchmark::copy::citm_catalog::SeatCategory]&gt; (10 samples, 0.20%)</title><rect width=".202%" height="15" x="97.678%" y="1029" fill="#E6D712" fg:w="10" fg:x="4838"/></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt; (10 samples, 0.20%)</title><rect width=".202%" height="15" x="97.678%" y="1013" fill="#CEB923" fg:w="10" fg:x="4838"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::Area&gt;&gt; (10 samples, 0.20%)</title><rect width=".202%" height="15" x="97.678%" y="997" fill="#E48C22" fg:w="10" fg:x="4838"/></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::Area&gt;&gt; (10 samples, 0.20%)</title><rect width=".202%" height="15" x="97.678%" y="981" fill="#D05D0D" fg:w="10" fg:x="4838"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.20%)</title><rect width=".202%" height="15" x="97.678%" y="965" fill="#DDC127" fg:w="10" fg:x="4838"/></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Performance&gt; (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.82%" y="949" fill="#F18422" fg:w="3" fg:x="4845"/></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.88%" y="837" fill="#DD8D0A" fg:w="1" fg:x="4848"/></g><g><title>_rjem_je_sdallocx_default (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.88%" y="949" fill="#E25A1F" fg:w="2" fg:x="4848"/></g><g><title>isfree (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.88%" y="933" fill="#F34B05" fg:w="2" fg:x="4848"/></g><g><title>isdalloct (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.88%" y="917" fill="#E39C15" fg:w="2" fg:x="4848"/></g><g><title>arena_sdalloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.88%" y="901" fill="#FAC308" fg:w="2" fg:x="4848"/></g><g><title>tcache_dalloc_small (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.88%" y="885" fill="#DC8605" fg:w="2" fg:x="4848"/></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.88%" y="869" fill="#F66A22" fg:w="2" fg:x="4848"/></g><g><title>tcache_bin_flush_bottom (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.88%" y="853" fill="#CD0104" fg:w="2" fg:x="4848"/></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.9%" y="837" fill="#E0971D" fg:w="1" fg:x="4849"/></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.9%" y="821" fill="#FBC400" fg:w="1" fg:x="4849"/></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.9%" y="805" fill="#D47F00" fg:w="1" fg:x="4849"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.88%" y="1013" fill="#EC4735" fg:w="3" fg:x="4848"/></g><g><title>alloc::alloc::dealloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.88%" y="997" fill="#E36300" fg:w="3" fg:x="4848"/></g><g><title>__rust_dealloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.88%" y="981" fill="#EF5915" fg:w="3" fg:x="4848"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (3 samples, 0.06%)</title><rect width=".061%" height="15" x="97.88%" y="965" fill="#F37A13" fg:w="3" fg:x="4848"/></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.921%" y="949" fill="#E5C02D" fg:w="1" fg:x="4850"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt;&gt; (15 samples, 0.30%)</title><rect width=".303%" height="15" x="97.678%" y="1061" fill="#EBA523" fg:w="15" fg:x="4838"/></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt;&gt; (5 samples, 0.10%)</title><rect width=".101%" height="15" x="97.88%" y="1045" fill="#FDCA00" fg:w="5" fg:x="4848"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect width=".101%" height="15" x="97.88%" y="1029" fill="#EB3314" fg:w="5" fg:x="4848"/></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Performance&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="97.941%" y="1013" fill="#DA5F2E" fg:w="2" fg:x="4851"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,sonic_rs::error::Error&gt;&gt;&gt; (36 samples, 0.73%)</title><rect width=".727%" height="15" x="97.274%" y="1205" fill="#D4510A" fg:w="36" fg:x="4818"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.73%)</title><rect width=".727%" height="15" x="97.274%" y="1189" fill="#F03B00" fg:w="36" fg:x="4818"/></g><g><title>core::ptr::drop_in_place&lt;[core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,sonic_rs::error::Error&gt;]&gt; (36 samples, 0.73%)</title><rect width=".727%" height="15" x="97.274%" y="1173" fill="#D4BF2A" fg:w="36" fg:x="4818"/></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,sonic_rs::error::Error&gt;&gt; (36 samples, 0.73%)</title><rect width=".727%" height="15" x="97.274%" y="1157" fill="#E98C03" fg:w="36" fg:x="4818"/></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::CitmCatalog&gt; (36 samples, 0.73%)</title><rect width=".727%" height="15" x="97.274%" y="1141" fill="#D74517" fg:w="36" fg:x="4818"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::Performance&gt;&gt; (16 samples, 0.32%)</title><rect width=".323%" height="15" x="97.678%" y="1125" fill="#F0CA14" fg:w="16" fg:x="4838"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.32%)</title><rect width=".323%" height="15" x="97.678%" y="1109" fill="#D19232" fg:w="16" fg:x="4838"/></g><g><title>core::ptr::drop_in_place&lt;[json_benchmark::copy::citm_catalog::Performance]&gt; (16 samples, 0.32%)</title><rect width=".323%" height="15" x="97.678%" y="1093" fill="#FD6636" fg:w="16" fg:x="4838"/></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Performance&gt; (16 samples, 0.32%)</title><rect width=".323%" height="15" x="97.678%" y="1077" fill="#FAAD2F" fg:w="16" fg:x="4838"/></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="97.981%" y="1061" fill="#E88E07" fg:w="1" fg:x="4853"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.001%" y="1045" fill="#E69D2F" fg:w="1" fg:x="4854"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.001%" y="1029" fill="#D6B123" fg:w="1" fg:x="4854"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.001%" y="1013" fill="#EA772E" fg:w="1" fg:x="4854"/></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.001%" y="997" fill="#F1B432" fg:w="1" fg:x="4854"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.021%" y="997" fill="#DD3619" fg:w="2" fg:x="4855"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.021%" y="981" fill="#D19D2C" fg:w="2" fg:x="4855"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.021%" y="965" fill="#F67329" fg:w="2" fg:x="4855"/></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.021%" y="949" fill="#E55601" fg:w="2" fg:x="4855"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.021%" y="933" fill="#F06C35" fg:w="2" fg:x="4855"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.021%" y="917" fill="#E38602" fg:w="2" fg:x="4855"/></g><g><title>alloc::alloc::realloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.021%" y="901" fill="#D58119" fg:w="2" fg:x="4855"/></g><g><title>__rust_realloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.021%" y="885" fill="#E22315" fg:w="2" fg:x="4855"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.021%" y="869" fill="#D0811A" fg:w="2" fg:x="4855"/></g><g><title>do_rallocx (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.021%" y="853" fill="#E05306" fg:w="2" fg:x="4855"/></g><g><title>iralloct (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.021%" y="837" fill="#E33427" fg:w="2" fg:x="4855"/></g><g><title>_rjem_je_arena_ralloc (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.021%" y="821" fill="#F11E11" fg:w="2" fg:x="4855"/></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.021%" y="805" fill="#F6BA2A" fg:w="2" fg:x="4855"/></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.062%" y="901" fill="#DDA90F" fg:w="1" fg:x="4857"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.082%" y="709" fill="#EB6C15" fg:w="1" fg:x="4858"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.082%" y="693" fill="#DB941E" fg:w="1" fg:x="4858"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.082%" y="677" fill="#DC6D05" fg:w="1" fg:x="4858"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.082%" y="661" fill="#D5CB30" fg:w="1" fg:x="4858"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.082%" y="645" fill="#F44721" fg:w="1" fg:x="4858"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.082%" y="629" fill="#D11702" fg:w="1" fg:x="4858"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.082%" y="613" fill="#DB6107" fg:w="1" fg:x="4858"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.082%" y="597" fill="#D8A117" fg:w="1" fg:x="4858"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.082%" y="581" fill="#CF2D2A" fg:w="1" fg:x="4858"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.082%" y="565" fill="#F13D04" fg:w="1" fg:x="4858"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.082%" y="549" fill="#ECAA01" fg:w="1" fg:x="4858"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.082%" y="757" fill="#EF4805" fg:w="2" fg:x="4858"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.082%" y="741" fill="#D60D32" fg:w="2" fg:x="4858"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.082%" y="725" fill="#E05809" fg:w="2" fg:x="4858"/></g><g><title>serde::de::MapAccess::next_key (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.102%" y="709" fill="#EEC022" fg:w="1" fg:x="4859"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.102%" y="693" fill="#D9CB32" fg:w="1" fg:x="4859"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.102%" y="677" fill="#F17B20" fg:w="1" fg:x="4859"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.122%" y="613" fill="#F89727" fg:w="2" fg:x="4860"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.142%" y="597" fill="#D05906" fg:w="1" fg:x="4861"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.142%" y="581" fill="#FE2B1A" fg:w="1" fg:x="4861"/></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.142%" y="565" fill="#D89E0D" fg:w="1" fg:x="4861"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.142%" y="549" fill="#D42F25" fg:w="1" fg:x="4861"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.142%" y="533" fill="#FE100A" fg:w="1" fg:x="4861"/></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.142%" y="517" fill="#DFE410" fg:w="1" fg:x="4861"/></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.142%" y="501" fill="#F96C32" fg:w="1" fg:x="4861"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.142%" y="485" fill="#D0DC05" fg:w="1" fg:x="4861"/></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.142%" y="469" fill="#D95930" fg:w="1" fg:x="4861"/></g><g><title>iralloct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.142%" y="453" fill="#D47129" fg:w="1" fg:x="4861"/></g><g><title>_rjem_je_arena_ralloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.142%" y="437" fill="#E77F05" fg:w="1" fg:x="4861"/></g><g><title>_rjem_je_arena_ralloc_no_move (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.142%" y="421" fill="#D98D11" fg:w="1" fg:x="4861"/></g><g><title>emap_edata_lookup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.142%" y="405" fill="#F57D36" fg:w="1" fg:x="4861"/></g><g><title>rtree_read (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.142%" y="389" fill="#F87D03" fg:w="1" fg:x="4861"/></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.142%" y="373" fill="#EC7733" fg:w="1" fg:x="4861"/></g><g><title>rtree_leaf_elm_bits_decode (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.142%" y="357" fill="#EF6308" fg:w="1" fg:x="4861"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.163%" y="533" fill="#E0E404" fg:w="1" fg:x="4862"/></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.183%" y="517" fill="#DC832D" fg:w="1" fg:x="4863"/></g><g><title>?? (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.223%" y="421" fill="#D73E05" fg:w="3" fg:x="4865"/></g><g><title>sonic_rs::util::num::parse_number_unchecked (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.223%" y="405" fill="#FD0C18" fg:w="3" fg:x="4865"/></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.243%" y="389" fill="#F87832" fg:w="2" fg:x="4866"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.203%" y="517" fill="#F5C20A" fg:w="5" fg:x="4864"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.203%" y="501" fill="#F19526" fg:w="5" fg:x="4864"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.203%" y="485" fill="#DBD707" fg:w="5" fg:x="4864"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="98.223%" y="469" fill="#D0781F" fg:w="4" fg:x="4865"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (4 samples, 0.08%)</title><rect width=".081%" height="15" x="98.223%" y="453" fill="#F41E08" fg:w="4" fg:x="4865"/></g><g><title>?? (4 samples, 0.08%)</title><rect width=".081%" height="15" x="98.223%" y="437" fill="#EE232C" fg:w="4" fg:x="4865"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.284%" y="421" fill="#F3DA25" fg:w="1" fg:x="4868"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11 samples, 0.22%)</title><rect width=".222%" height="15" x="98.163%" y="581" fill="#DAA90A" fg:w="11" fg:x="4862"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize (11 samples, 0.22%)</title><rect width=".222%" height="15" x="98.163%" y="565" fill="#DD900A" fg:w="11" fg:x="4862"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (11 samples, 0.22%)</title><rect width=".222%" height="15" x="98.163%" y="549" fill="#E22926" fg:w="11" fg:x="4862"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.20%)</title><rect width=".202%" height="15" x="98.183%" y="533" fill="#E40301" fg:w="10" fg:x="4863"/></g><g><title>serde::de::MapAccess::next_key (4 samples, 0.08%)</title><rect width=".081%" height="15" x="98.304%" y="517" fill="#D1810C" fg:w="4" fg:x="4869"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.08%)</title><rect width=".081%" height="15" x="98.304%" y="501" fill="#D58821" fg:w="4" fg:x="4869"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="98.304%" y="485" fill="#D1B51D" fg:w="4" fg:x="4869"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.344%" y="469" fill="#EAAD12" fg:w="2" fg:x="4871"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.344%" y="453" fill="#E3492F" fg:w="2" fg:x="4871"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.344%" y="437" fill="#EA0922" fg:w="2" fg:x="4871"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.344%" y="421" fill="#EBAC0F" fg:w="2" fg:x="4871"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.344%" y="405" fill="#F53D02" fg:w="2" fg:x="4871"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.344%" y="389" fill="#EE272F" fg:w="2" fg:x="4871"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.344%" y="373" fill="#EA2518" fg:w="2" fg:x="4871"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (14 samples, 0.28%)</title><rect width=".283%" height="15" x="98.122%" y="661" fill="#F8DF18" fg:w="14" fg:x="4860"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (14 samples, 0.28%)</title><rect width=".283%" height="15" x="98.122%" y="645" fill="#DF0C0F" fg:w="14" fg:x="4860"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (14 samples, 0.28%)</title><rect width=".283%" height="15" x="98.122%" y="629" fill="#F90603" fg:w="14" fg:x="4860"/></g><g><title>serde::de::SeqAccess::next_element (12 samples, 0.24%)</title><rect width=".242%" height="15" x="98.163%" y="613" fill="#ED6921" fg:w="12" fg:x="4862"/></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (12 samples, 0.24%)</title><rect width=".242%" height="15" x="98.163%" y="597" fill="#FCD023" fg:w="12" fg:x="4862"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.385%" y="581" fill="#D7B523" fg:w="1" fg:x="4873"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.385%" y="565" fill="#F6D403" fg:w="1" fg:x="4873"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (15 samples, 0.30%)</title><rect width=".303%" height="15" x="98.122%" y="709" fill="#F79C18" fg:w="15" fg:x="4860"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (15 samples, 0.30%)</title><rect width=".303%" height="15" x="98.122%" y="693" fill="#F8091F" fg:w="15" fg:x="4860"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15 samples, 0.30%)</title><rect width=".303%" height="15" x="98.122%" y="677" fill="#EA1A2D" fg:w="15" fg:x="4860"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.405%" y="661" fill="#F90B20" fg:w="1" fg:x="4874"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.405%" y="645" fill="#F9A221" fg:w="1" fg:x="4874"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.405%" y="629" fill="#E80420" fg:w="1" fg:x="4874"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.405%" y="613" fill="#D4052D" fg:w="1" fg:x="4874"/></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.405%" y="597" fill="#E35F0D" fg:w="1" fg:x="4874"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.405%" y="581" fill="#DFCD0A" fg:w="1" fg:x="4874"/></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.405%" y="565" fill="#DEB208" fg:w="1" fg:x="4874"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.405%" y="549" fill="#D80D16" fg:w="1" fg:x="4874"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.425%" y="677" fill="#F0A70C" fg:w="1" fg:x="4875"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.425%" y="661" fill="#EB4423" fg:w="1" fg:x="4875"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.425%" y="645" fill="#FD281B" fg:w="1" fg:x="4875"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.425%" y="629" fill="#D6131C" fg:w="1" fg:x="4875"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.425%" y="613" fill="#D2A72D" fg:w="1" fg:x="4875"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.425%" y="597" fill="#E86128" fg:w="1" fg:x="4875"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.425%" y="581" fill="#FA2317" fg:w="1" fg:x="4875"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.425%" y="565" fill="#F82F35" fg:w="1" fg:x="4875"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (19 samples, 0.38%)</title><rect width=".384%" height="15" x="98.082%" y="853" fill="#E23A32" fg:w="19" fg:x="4858"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (19 samples, 0.38%)</title><rect width=".384%" height="15" x="98.082%" y="837" fill="#D9691A" fg:w="19" fg:x="4858"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (19 samples, 0.38%)</title><rect width=".384%" height="15" x="98.082%" y="821" fill="#D04001" fg:w="19" fg:x="4858"/></g><g><title>serde::de::SeqAccess::next_element (19 samples, 0.38%)</title><rect width=".384%" height="15" x="98.082%" y="805" fill="#D65001" fg:w="19" fg:x="4858"/></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (19 samples, 0.38%)</title><rect width=".384%" height="15" x="98.082%" y="789" fill="#CEAF1A" fg:w="19" fg:x="4858"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (19 samples, 0.38%)</title><rect width=".384%" height="15" x="98.082%" y="773" fill="#EB9C25" fg:w="19" fg:x="4858"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize (17 samples, 0.34%)</title><rect width=".343%" height="15" x="98.122%" y="757" fill="#D56409" fg:w="17" fg:x="4860"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (17 samples, 0.34%)</title><rect width=".343%" height="15" x="98.122%" y="741" fill="#F10F0D" fg:w="17" fg:x="4860"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (17 samples, 0.34%)</title><rect width=".343%" height="15" x="98.122%" y="725" fill="#CD612B" fg:w="17" fg:x="4860"/></g><g><title>serde::de::MapAccess::next_key (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.425%" y="709" fill="#D86A20" fg:w="2" fg:x="4875"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.425%" y="693" fill="#E2C808" fg:w="2" fg:x="4875"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.445%" y="677" fill="#F4361D" fg:w="1" fg:x="4876"/></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.445%" y="661" fill="#FCA90C" fg:w="1" fg:x="4876"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (20 samples, 0.40%)</title><rect width=".404%" height="15" x="98.082%" y="901" fill="#E7C70B" fg:w="20" fg:x="4858"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (20 samples, 0.40%)</title><rect width=".404%" height="15" x="98.082%" y="885" fill="#E9BF12" fg:w="20" fg:x="4858"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (20 samples, 0.40%)</title><rect width=".404%" height="15" x="98.082%" y="869" fill="#D7532F" fg:w="20" fg:x="4858"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.466%" y="853" fill="#FB4313" fg:w="1" fg:x="4877"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.466%" y="837" fill="#F00714" fg:w="1" fg:x="4877"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.466%" y="821" fill="#D2961A" fg:w="1" fg:x="4877"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.466%" y="805" fill="#E44B2A" fg:w="1" fg:x="4877"/></g><g><title>sonic_rs::util::num::parse_number_unchecked (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.466%" y="789" fill="#ED8630" fg:w="1" fg:x="4877"/></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.466%" y="773" fill="#CD5032" fg:w="1" fg:x="4877"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.486%" y="773" fill="#D94A30" fg:w="1" fg:x="4878"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (26 samples, 0.52%)</title><rect width=".525%" height="15" x="98.001%" y="1093" fill="#CD5232" fg:w="26" fg:x="4854"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (26 samples, 0.52%)</title><rect width=".525%" height="15" x="98.001%" y="1077" fill="#E40121" fg:w="26" fg:x="4854"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (26 samples, 0.52%)</title><rect width=".525%" height="15" x="98.001%" y="1061" fill="#D63217" fg:w="26" fg:x="4854"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (25 samples, 0.50%)</title><rect width=".505%" height="15" x="98.021%" y="1045" fill="#D23E09" fg:w="25" fg:x="4855"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (25 samples, 0.50%)</title><rect width=".505%" height="15" x="98.021%" y="1029" fill="#D26825" fg:w="25" fg:x="4855"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (25 samples, 0.50%)</title><rect width=".505%" height="15" x="98.021%" y="1013" fill="#E8682B" fg:w="25" fg:x="4855"/></g><g><title>serde::de::SeqAccess::next_element (23 samples, 0.46%)</title><rect width=".464%" height="15" x="98.062%" y="997" fill="#F43406" fg:w="23" fg:x="4857"/></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (23 samples, 0.46%)</title><rect width=".464%" height="15" x="98.062%" y="981" fill="#D3AE34" fg:w="23" fg:x="4857"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (23 samples, 0.46%)</title><rect width=".464%" height="15" x="98.062%" y="965" fill="#E53004" fg:w="23" fg:x="4857"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize (23 samples, 0.46%)</title><rect width=".464%" height="15" x="98.062%" y="949" fill="#CD9B10" fg:w="23" fg:x="4857"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (23 samples, 0.46%)</title><rect width=".464%" height="15" x="98.062%" y="933" fill="#D38D35" fg:w="23" fg:x="4857"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (23 samples, 0.46%)</title><rect width=".464%" height="15" x="98.062%" y="917" fill="#F0940B" fg:w="23" fg:x="4857"/></g><g><title>serde::de::MapAccess::next_key (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.486%" y="901" fill="#D62D17" fg:w="2" fg:x="4878"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.486%" y="885" fill="#F84A1A" fg:w="2" fg:x="4878"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.486%" y="869" fill="#DA7910" fg:w="2" fg:x="4878"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.486%" y="853" fill="#DA0A2F" fg:w="2" fg:x="4878"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.486%" y="837" fill="#E3630E" fg:w="2" fg:x="4878"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.486%" y="821" fill="#E5532E" fg:w="2" fg:x="4878"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.486%" y="805" fill="#E41901" fg:w="2" fg:x="4878"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.486%" y="789" fill="#FCBE0F" fg:w="2" fg:x="4878"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.506%" y="773" fill="#D56733" fg:w="1" fg:x="4879"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.506%" y="757" fill="#DC262C" fg:w="1" fg:x="4879"/></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.506%" y="741" fill="#D22D1A" fg:w="1" fg:x="4879"/></g><g><title>sonic_rs::serde::de::from_trait (27 samples, 0.55%)</title><rect width=".545%" height="15" x="98.001%" y="1157" fill="#CD5F30" fg:w="27" fg:x="4854"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize (27 samples, 0.55%)</title><rect width=".545%" height="15" x="98.001%" y="1141" fill="#E1B325" fg:w="27" fg:x="4854"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (27 samples, 0.55%)</title><rect width=".545%" height="15" x="98.001%" y="1125" fill="#E6D103" fg:w="27" fg:x="4854"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (27 samples, 0.55%)</title><rect width=".545%" height="15" x="98.001%" y="1109" fill="#F80C2E" fg:w="27" fg:x="4854"/></g><g><title>serde::de::MapAccess::next_key (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.526%" y="1093" fill="#EA1200" fg:w="1" fg:x="4880"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.526%" y="1077" fill="#EEC50E" fg:w="1" fg:x="4880"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.526%" y="1061" fill="#FBA230" fg:w="1" fg:x="4880"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.526%" y="1045" fill="#ED492A" fg:w="1" fg:x="4880"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.526%" y="1029" fill="#D36C08" fg:w="1" fg:x="4880"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.526%" y="1013" fill="#D52D16" fg:w="1" fg:x="4880"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.526%" y="997" fill="#FC9A05" fg:w="1" fg:x="4880"/></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.526%" y="981" fill="#DD4F34" fg:w="1" fg:x="4880"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.526%" y="965" fill="#E5DC24" fg:w="1" fg:x="4880"/></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.526%" y="949" fill="#D31110" fg:w="1" fg:x="4880"/></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.526%" y="933" fill="#DE371F" fg:w="1" fg:x="4880"/></g><g><title>?? (915 samples, 18.47%)</title><rect width="18.474%" height="15" x="80.093%" y="1301" fill="#DDDD1F" fg:w="915" fg:x="3967"/><text x="80.343%" y="1311.5">??</text></g><g><title>?? (915 samples, 18.47%)</title><rect width="18.474%" height="15" x="80.093%" y="1285" fill="#E3A81A" fg:w="915" fg:x="3967"/><text x="80.343%" y="1295.5">??</text></g><g><title>criterion::routine::Routine::profile (915 samples, 18.47%)</title><rect width="18.474%" height="15" x="80.093%" y="1269" fill="#E08B09" fg:w="915" fg:x="3967"/><text x="80.343%" y="1279.5">criterion::routine::Routine::..</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (915 samples, 18.47%)</title><rect width="18.474%" height="15" x="80.093%" y="1253" fill="#FEAC00" fg:w="915" fg:x="3967"/><text x="80.343%" y="1263.5">&lt;criterion::routine::Function..</text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}} (915 samples, 18.47%)</title><rect width="18.474%" height="15" x="80.093%" y="1237" fill="#EBCB01" fg:w="915" fg:x="3967"/><text x="80.343%" y="1247.5">deserialize_struct::bench_cit..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter_batched (915 samples, 18.47%)</title><rect width="18.474%" height="15" x="80.093%" y="1221" fill="#D8CD18" fg:w="915" fg:x="3967"/><text x="80.343%" y="1231.5">criterion::bencher::Bencher&lt;M..</text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}}::_{{closure}} (28 samples, 0.57%)</title><rect width=".565%" height="15" x="98.001%" y="1205" fill="#E91806" fg:w="28" fg:x="4854"/></g><g><title>deserialize_struct::sonic_rs_parse_struct (28 samples, 0.57%)</title><rect width=".565%" height="15" x="98.001%" y="1189" fill="#F46E09" fg:w="28" fg:x="4854"/></g><g><title>sonic_rs::serde::de::from_slice (28 samples, 0.57%)</title><rect width=".565%" height="15" x="98.001%" y="1173" fill="#EFDE2A" fg:w="28" fg:x="4854"/></g><g><title>sonic_rs::util::utf8::from_utf8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.546%" y="1157" fill="#DA910D" fg:w="1" fg:x="4881"/></g><g><title>simdutf8::basic::from_utf8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.546%" y="1141" fill="#CF450B" fg:w="1" fg:x="4881"/></g><g><title>simdutf8::implementation::validate_utf8_basic (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.546%" y="1125" fill="#DCDF16" fg:w="1" fg:x="4881"/></g><g><title>simdutf8::implementation::x86::validate_utf8_basic (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.546%" y="1109" fill="#F56605" fg:w="1" fg:x="4881"/></g><g><title>simdutf8::implementation::x86::validate_utf8_basic_avx2 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.546%" y="1093" fill="#D39402" fg:w="1" fg:x="4881"/></g><g><title>simdutf8::implementation::x86::avx2::validate_utf8_basic (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.546%" y="1077" fill="#F10D2C" fg:w="1" fg:x="4881"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.546%" y="1061" fill="#DB8915" fg:w="1" fg:x="4881"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.546%" y="1045" fill="#F2CE05" fg:w="1" fg:x="4881"/></g><g><title>core::core_arch::x86::avx::_mm256_loadu_si256 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.546%" y="1029" fill="#D97216" fg:w="1" fg:x="4881"/></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.546%" y="1013" fill="#FDCE2A" fg:w="1" fg:x="4881"/></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.587%" y="613" fill="#EC6612" fg:w="1" fg:x="4883"/></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.587%" y="597" fill="#D03B31" fg:w="1" fg:x="4883"/></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.587%" y="581" fill="#D7C21C" fg:w="1" fg:x="4883"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.587%" y="565" fill="#F3CF0B" fg:w="1" fg:x="4883"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.587%" y="549" fill="#FEB323" fg:w="1" fg:x="4883"/></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.587%" y="533" fill="#EB6103" fg:w="1" fg:x="4883"/></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.587%" y="517" fill="#D79B21" fg:w="1" fg:x="4883"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.587%" y="501" fill="#DF800C" fg:w="1" fg:x="4883"/></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.587%" y="485" fill="#D09D12" fg:w="1" fg:x="4883"/></g><g><title>core::cmp::PartialEq::ne (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="1285" fill="#F94636" fg:w="3" fg:x="4882"/></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="1269" fill="#F47618" fg:w="3" fg:x="4882"/></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="1253" fill="#D33600" fg:w="3" fg:x="4882"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="1237" fill="#F5892D" fg:w="3" fg:x="4882"/></g><g><title>core::iter::traits::iterator::Iterator::all (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="1221" fill="#E89A1F" fg:w="3" fg:x="4882"/></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="1205" fill="#FD0627" fg:w="3" fg:x="4882"/></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="1189" fill="#EAB718" fg:w="3" fg:x="4882"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="1173" fill="#FC5428" fg:w="3" fg:x="4882"/></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="1157" fill="#E04102" fg:w="3" fg:x="4882"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="1141" fill="#E52618" fg:w="3" fg:x="4882"/></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="1125" fill="#DA8332" fg:w="3" fg:x="4882"/></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="1109" fill="#E96A12" fg:w="3" fg:x="4882"/></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="1093" fill="#DCD80B" fg:w="3" fg:x="4882"/></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="1077" fill="#FB642D" fg:w="3" fg:x="4882"/></g><g><title>core::iter::traits::iterator::Iterator::all (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="1061" fill="#EB8F20" fg:w="3" fg:x="4882"/></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="1045" fill="#F87C22" fg:w="3" fg:x="4882"/></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="1029" fill="#E1DD04" fg:w="3" fg:x="4882"/></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="1013" fill="#F21B2B" fg:w="3" fg:x="4882"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="997" fill="#E33608" fg:w="3" fg:x="4882"/></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="981" fill="#FD8B31" fg:w="3" fg:x="4882"/></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="965" fill="#E71A2B" fg:w="3" fg:x="4882"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="949" fill="#CF7927" fg:w="3" fg:x="4882"/></g><g><title>core::iter::traits::iterator::Iterator::all (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="933" fill="#DF6523" fg:w="3" fg:x="4882"/></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="917" fill="#E85717" fg:w="3" fg:x="4882"/></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="901" fill="#E1B41D" fg:w="3" fg:x="4882"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="885" fill="#E11911" fg:w="3" fg:x="4882"/></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="869" fill="#DF0834" fg:w="3" fg:x="4882"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="853" fill="#F62A15" fg:w="3" fg:x="4882"/></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="98.567%" y="837" fill="#CD402B" fg:w="3" fg:x="4882"/></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.587%" y="821" fill="#DDA00D" fg:w="2" fg:x="4883"/></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.587%" y="805" fill="#EF3A23" fg:w="2" fg:x="4883"/></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.587%" y="789" fill="#FB1A28" fg:w="2" fg:x="4883"/></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.587%" y="773" fill="#F70004" fg:w="2" fg:x="4883"/></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.587%" y="757" fill="#DA820A" fg:w="2" fg:x="4883"/></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.587%" y="741" fill="#EF2007" fg:w="2" fg:x="4883"/></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.587%" y="725" fill="#D2C018" fg:w="2" fg:x="4883"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.587%" y="709" fill="#E2D411" fg:w="2" fg:x="4883"/></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.587%" y="693" fill="#DBC91C" fg:w="2" fg:x="4883"/></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.587%" y="677" fill="#EBCF29" fg:w="2" fg:x="4883"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.587%" y="661" fill="#F15F36" fg:w="2" fg:x="4883"/></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.587%" y="645" fill="#F80C17" fg:w="2" fg:x="4883"/></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.587%" y="629" fill="#E4AD04" fg:w="2" fg:x="4883"/></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.607%" y="613" fill="#FE6305" fg:w="1" fg:x="4884"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.607%" y="597" fill="#D4B811" fg:w="1" fg:x="4884"/></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.607%" y="581" fill="#FCAE01" fg:w="1" fg:x="4884"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.607%" y="565" fill="#F17633" fg:w="1" fg:x="4884"/></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.607%" y="549" fill="#E35E2F" fg:w="1" fg:x="4884"/></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.607%" y="533" fill="#E56802" fg:w="1" fg:x="4884"/></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.607%" y="517" fill="#DB1C1F" fg:w="1" fg:x="4884"/></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.607%" y="501" fill="#E96D24" fg:w="1" fg:x="4884"/></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.607%" y="485" fill="#F6580B" fg:w="1" fg:x="4884"/></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.607%" y="469" fill="#D1D411" fg:w="1" fg:x="4884"/></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.607%" y="453" fill="#F33B1D" fg:w="1" fg:x="4884"/></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.607%" y="437" fill="#F4CD30" fg:w="1" fg:x="4884"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.607%" y="421" fill="#E31E06" fg:w="1" fg:x="4884"/></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.607%" y="405" fill="#DCCD30" fg:w="1" fg:x="4884"/></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.607%" y="389" fill="#FA5E0E" fg:w="1" fg:x="4884"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.607%" y="373" fill="#D8772A" fg:w="1" fg:x="4884"/></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.607%" y="357" fill="#E89B00" fg:w="1" fg:x="4884"/></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.607%" y="341" fill="#D41820" fg:w="1" fg:x="4884"/></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.607%" y="325" fill="#D84514" fg:w="1" fg:x="4884"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.607%" y="309" fill="#E5491F" fg:w="1" fg:x="4884"/></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.607%" y="293" fill="#E0DB14" fg:w="1" fg:x="4884"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.607%" y="277" fill="#D79229" fg:w="1" fg:x="4884"/></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.607%" y="261" fill="#F4471F" fg:w="1" fg:x="4884"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.647%" y="741" fill="#E0180B" fg:w="1" fg:x="4886"/></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.647%" y="725" fill="#E54C0F" fg:w="1" fg:x="4886"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.647%" y="709" fill="#D15D02" fg:w="1" fg:x="4886"/></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.647%" y="693" fill="#D8C832" fg:w="1" fg:x="4886"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.647%" y="677" fill="#D34322" fg:w="1" fg:x="4886"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.647%" y="661" fill="#E1572F" fg:w="1" fg:x="4886"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.647%" y="757" fill="#D9B910" fg:w="2" fg:x="4886"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.668%" y="741" fill="#CD0000" fg:w="1" fg:x="4887"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.668%" y="725" fill="#CF742D" fg:w="1" fg:x="4887"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.668%" y="709" fill="#DD9C1A" fg:w="1" fg:x="4887"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.668%" y="693" fill="#D58C04" fg:w="1" fg:x="4887"/></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.668%" y="677" fill="#E7E00F" fg:w="1" fg:x="4887"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.668%" y="661" fill="#F44C14" fg:w="1" fg:x="4887"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.668%" y="645" fill="#EE7507" fg:w="1" fg:x="4887"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.668%" y="629" fill="#EB010A" fg:w="1" fg:x="4887"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.668%" y="613" fill="#D8A506" fg:w="1" fg:x="4887"/></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.668%" y="597" fill="#F65B23" fg:w="1" fg:x="4887"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.668%" y="581" fill="#E46018" fg:w="1" fg:x="4887"/></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.668%" y="565" fill="#FED935" fg:w="1" fg:x="4887"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.668%" y="549" fill="#D13C00" fg:w="1" fg:x="4887"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.668%" y="533" fill="#FA5D1A" fg:w="1" fg:x="4887"/></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.668%" y="517" fill="#D30928" fg:w="1" fg:x="4887"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.668%" y="501" fill="#F23914" fg:w="1" fg:x="4887"/></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.668%" y="485" fill="#F85530" fg:w="1" fg:x="4887"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.668%" y="469" fill="#D47502" fg:w="1" fg:x="4887"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.668%" y="453" fill="#F31303" fg:w="1" fg:x="4887"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.627%" y="1125" fill="#E8D918" fg:w="5" fg:x="4885"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.627%" y="1109" fill="#E0AF28" fg:w="5" fg:x="4885"/></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.627%" y="1093" fill="#D4A220" fg:w="5" fg:x="4885"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.627%" y="1077" fill="#D70904" fg:w="5" fg:x="4885"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.627%" y="1061" fill="#F22A07" fg:w="5" fg:x="4885"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.627%" y="1045" fill="#F2B82D" fg:w="5" fg:x="4885"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.627%" y="1029" fill="#E46F33" fg:w="5" fg:x="4885"/></g><g><title>core::mem::drop (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.627%" y="1013" fill="#EC9311" fg:w="5" fg:x="4885"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.627%" y="997" fill="#D24B16" fg:w="5" fg:x="4885"/></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.627%" y="981" fill="#D99F2D" fg:w="5" fg:x="4885"/></g><g><title>?? (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.627%" y="965" fill="#F5A535" fg:w="5" fg:x="4885"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.627%" y="949" fill="#FBBE32" fg:w="5" fg:x="4885"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.627%" y="933" fill="#D0CB1D" fg:w="5" fg:x="4885"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.627%" y="917" fill="#CFD123" fg:w="5" fg:x="4885"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.627%" y="901" fill="#E69031" fg:w="5" fg:x="4885"/></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.627%" y="885" fill="#E51F06" fg:w="5" fg:x="4885"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.627%" y="869" fill="#FB8118" fg:w="5" fg:x="4885"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.08%)</title><rect width=".081%" height="15" x="98.647%" y="853" fill="#EB690F" fg:w="4" fg:x="4886"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.08%)</title><rect width=".081%" height="15" x="98.647%" y="837" fill="#D8342B" fg:w="4" fg:x="4886"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.08%)</title><rect width=".081%" height="15" x="98.647%" y="821" fill="#EE9029" fg:w="4" fg:x="4886"/></g><g><title>core::mem::drop (4 samples, 0.08%)</title><rect width=".081%" height="15" x="98.647%" y="805" fill="#F33F09" fg:w="4" fg:x="4886"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.08%)</title><rect width=".081%" height="15" x="98.647%" y="789" fill="#F6D001" fg:w="4" fg:x="4886"/></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.08%)</title><rect width=".081%" height="15" x="98.647%" y="773" fill="#E9B612" fg:w="4" fg:x="4886"/></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.688%" y="757" fill="#F2E008" fg:w="2" fg:x="4888"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.688%" y="741" fill="#F33625" fg:w="2" fg:x="4888"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.688%" y="725" fill="#E9C00C" fg:w="2" fg:x="4888"/></g><g><title>alloc::collections::btree::mem::replace (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.688%" y="709" fill="#FBC035" fg:w="2" fg:x="4888"/></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.688%" y="693" fill="#F68D1A" fg:w="2" fg:x="4888"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.688%" y="677" fill="#EFC313" fg:w="2" fg:x="4888"/></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.688%" y="661" fill="#F11027" fg:w="2" fg:x="4888"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.728%" y="869" fill="#DF0D35" fg:w="1" fg:x="4890"/></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.728%" y="853" fill="#D6E300" fg:w="1" fg:x="4890"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.728%" y="837" fill="#E4671A" fg:w="1" fg:x="4890"/></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.728%" y="821" fill="#FEB135" fg:w="1" fg:x="4890"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.728%" y="805" fill="#D0C922" fg:w="1" fg:x="4890"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.728%" y="789" fill="#D42705" fg:w="1" fg:x="4890"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.14%)</title><rect width=".141%" height="15" x="98.627%" y="1285" fill="#F67503" fg:w="7" fg:x="4885"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.14%)</title><rect width=".141%" height="15" x="98.627%" y="1269" fill="#F47627" fg:w="7" fg:x="4885"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.14%)</title><rect width=".141%" height="15" x="98.627%" y="1253" fill="#F1400A" fg:w="7" fg:x="4885"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.14%)</title><rect width=".141%" height="15" x="98.627%" y="1237" fill="#E5272C" fg:w="7" fg:x="4885"/></g><g><title>core::mem::drop (7 samples, 0.14%)</title><rect width=".141%" height="15" x="98.627%" y="1221" fill="#E6E203" fg:w="7" fg:x="4885"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.14%)</title><rect width=".141%" height="15" x="98.627%" y="1205" fill="#DE0D2A" fg:w="7" fg:x="4885"/></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.14%)</title><rect width=".141%" height="15" x="98.627%" y="1189" fill="#F7B436" fg:w="7" fg:x="4885"/></g><g><title>?? (7 samples, 0.14%)</title><rect width=".141%" height="15" x="98.627%" y="1173" fill="#CD6010" fg:w="7" fg:x="4885"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.14%)</title><rect width=".141%" height="15" x="98.627%" y="1157" fill="#CD6415" fg:w="7" fg:x="4885"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.14%)</title><rect width=".141%" height="15" x="98.627%" y="1141" fill="#F83304" fg:w="7" fg:x="4885"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.728%" y="1125" fill="#D9C51E" fg:w="2" fg:x="4890"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.728%" y="1109" fill="#F0B328" fg:w="2" fg:x="4890"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.728%" y="1093" fill="#D4B923" fg:w="2" fg:x="4890"/></g><g><title>core::mem::drop (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.728%" y="1077" fill="#FBDE1F" fg:w="2" fg:x="4890"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.728%" y="1061" fill="#D08C24" fg:w="2" fg:x="4890"/></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.728%" y="1045" fill="#DC9401" fg:w="2" fg:x="4890"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.728%" y="1029" fill="#FE041C" fg:w="2" fg:x="4890"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.728%" y="1013" fill="#DEB92C" fg:w="2" fg:x="4890"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.728%" y="997" fill="#D74A27" fg:w="2" fg:x="4890"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.728%" y="981" fill="#F75604" fg:w="2" fg:x="4890"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.728%" y="965" fill="#E76920" fg:w="2" fg:x="4890"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.728%" y="949" fill="#DE4123" fg:w="2" fg:x="4890"/></g><g><title>core::mem::drop (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.728%" y="933" fill="#DA9123" fg:w="2" fg:x="4890"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.728%" y="917" fill="#D0070F" fg:w="2" fg:x="4890"/></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.728%" y="901" fill="#D1530D" fg:w="2" fg:x="4890"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.728%" y="885" fill="#DA030A" fg:w="2" fg:x="4890"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.748%" y="869" fill="#D3DB04" fg:w="1" fg:x="4891"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.748%" y="853" fill="#E4C20C" fg:w="1" fg:x="4891"/></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.768%" y="1109" fill="#D2AF07" fg:w="1" fg:x="4892"/></g><g><title>serde::de::MapAccess::next_entry (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.768%" y="1093" fill="#F38406" fg:w="1" fg:x="4892"/></g><g><title>serde::de::MapAccess::next_entry_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.768%" y="1077" fill="#CF4812" fg:w="1" fg:x="4892"/></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.768%" y="1061" fill="#EC0112" fg:w="1" fg:x="4892"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.768%" y="1045" fill="#E30012" fg:w="1" fg:x="4892"/></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.768%" y="1029" fill="#F72505" fg:w="1" fg:x="4892"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.768%" y="1013" fill="#EDB318" fg:w="1" fg:x="4892"/></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.768%" y="997" fill="#E23514" fg:w="1" fg:x="4892"/></g><g><title>serde::de::MapAccess::next_entry (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.768%" y="981" fill="#F74B07" fg:w="1" fg:x="4892"/></g><g><title>serde::de::MapAccess::next_entry_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.768%" y="965" fill="#E9600C" fg:w="1" fg:x="4892"/></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.768%" y="949" fill="#E07D00" fg:w="1" fg:x="4892"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.768%" y="933" fill="#E05C19" fg:w="1" fg:x="4892"/></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.768%" y="917" fill="#E02A18" fg:w="1" fg:x="4892"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.768%" y="901" fill="#EA8431" fg:w="1" fg:x="4892"/></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.768%" y="885" fill="#F86423" fg:w="1" fg:x="4892"/></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.768%" y="869" fill="#EF5E28" fg:w="1" fg:x="4892"/></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.789%" y="789" fill="#EB8B1C" fg:w="1" fg:x="4893"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.789%" y="773" fill="#D99007" fg:w="1" fg:x="4893"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.789%" y="757" fill="#E33704" fg:w="1" fg:x="4893"/></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.789%" y="741" fill="#FC5236" fg:w="1" fg:x="4893"/></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.789%" y="725" fill="#F5AC04" fg:w="1" fg:x="4893"/></g><g><title>serde::de::MapAccess::next_entry (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.809%" y="789" fill="#CF1A1B" fg:w="2" fg:x="4894"/></g><g><title>serde::de::MapAccess::next_entry_seed (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.809%" y="773" fill="#FC6212" fg:w="2" fg:x="4894"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.849%" y="725" fill="#F4081A" fg:w="1" fg:x="4896"/></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.849%" y="709" fill="#EDAD2D" fg:w="1" fg:x="4896"/></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.869%" y="613" fill="#D0D531" fg:w="1" fg:x="4897"/></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.869%" y="597" fill="#D47A25" fg:w="1" fg:x="4897"/></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.869%" y="581" fill="#D55011" fg:w="1" fg:x="4897"/></g><g><title>serde::de::Visitor::visit_borrowed_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.869%" y="565" fill="#CED22B" fg:w="1" fg:x="4897"/></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::Visitor&gt;::visit_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.869%" y="549" fill="#E5D603" fg:w="1" fg:x="4897"/></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.869%" y="533" fill="#EBD51D" fg:w="1" fg:x="4897"/></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.869%" y="517" fill="#F8871A" fg:w="1" fg:x="4897"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.869%" y="501" fill="#F2BC0C" fg:w="1" fg:x="4897"/></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.869%" y="485" fill="#F5260C" fg:w="1" fg:x="4897"/></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.869%" y="469" fill="#DA2A0D" fg:w="1" fg:x="4897"/></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.869%" y="453" fill="#EE8431" fg:w="1" fg:x="4897"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.869%" y="437" fill="#D1C413" fg:w="1" fg:x="4897"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.869%" y="421" fill="#F48316" fg:w="1" fg:x="4897"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.869%" y="405" fill="#DF1222" fg:w="1" fg:x="4897"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.869%" y="389" fill="#FC7C36" fg:w="1" fg:x="4897"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.869%" y="373" fill="#E56A2A" fg:w="1" fg:x="4897"/></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.869%" y="357" fill="#DD8101" fg:w="1" fg:x="4897"/></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.869%" y="341" fill="#E54A0F" fg:w="1" fg:x="4897"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.869%" y="325" fill="#D2CE32" fg:w="1" fg:x="4897"/></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.869%" y="309" fill="#FB721F" fg:w="1" fg:x="4897"/></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.869%" y="293" fill="#D7E11C" fg:w="1" fg:x="4897"/></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.869%" y="629" fill="#ED6D0E" fg:w="2" fg:x="4897"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.89%" y="613" fill="#E60D25" fg:w="1" fg:x="4898"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.89%" y="597" fill="#E7281C" fg:w="1" fg:x="4898"/></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::discard (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.89%" y="581" fill="#E7CA12" fg:w="1" fg:x="4898"/></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.89%" y="565" fill="#E12112" fg:w="1" fg:x="4898"/></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.91%" y="597" fill="#DF402F" fg:w="1" fg:x="4899"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.91%" y="581" fill="#EA720D" fg:w="1" fg:x="4899"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.91%" y="565" fill="#F83828" fg:w="1" fg:x="4899"/></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.91%" y="549" fill="#DDC215" fg:w="1" fg:x="4899"/></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.91%" y="533" fill="#F26C2E" fg:w="1" fg:x="4899"/></g><g><title>serde::de::MapAccess::next_entry (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.91%" y="629" fill="#DC6A0A" fg:w="2" fg:x="4899"/></g><g><title>serde::de::MapAccess::next_entry_seed (2 samples, 0.04%)</title><rect width=".04%" height="15" x="98.91%" y="613" fill="#D35804" fg:w="2" fg:x="4899"/></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.93%" y="597" fill="#D65F22" fg:w="1" fg:x="4900"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.93%" y="581" fill="#FAA021" fg:w="1" fg:x="4900"/></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.93%" y="565" fill="#E11D0A" fg:w="1" fg:x="4900"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.93%" y="549" fill="#E01C1E" fg:w="1" fg:x="4900"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.869%" y="693" fill="#E74D04" fg:w="5" fg:x="4897"/></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.869%" y="677" fill="#D13F15" fg:w="5" fg:x="4897"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.869%" y="661" fill="#E2160B" fg:w="5" fg:x="4897"/></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.10%)</title><rect width=".101%" height="15" x="98.869%" y="645" fill="#D8521E" fg:w="5" fg:x="4897"/></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="629" fill="#F6E326" fg:w="1" fg:x="4901"/></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="613" fill="#FBCB35" fg:w="1" fg:x="4901"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="597" fill="#FE6501" fg:w="1" fg:x="4901"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="581" fill="#F1B405" fg:w="1" fg:x="4901"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="565" fill="#DAA804" fg:w="1" fg:x="4901"/></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="549" fill="#E0DF20" fg:w="1" fg:x="4901"/></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="533" fill="#EC6A16" fg:w="1" fg:x="4901"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="517" fill="#CE7905" fg:w="1" fg:x="4901"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="501" fill="#E9571C" fg:w="1" fg:x="4901"/></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="485" fill="#EC8911" fg:w="1" fg:x="4901"/></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="469" fill="#D1B726" fg:w="1" fg:x="4901"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="453" fill="#CEA22C" fg:w="1" fg:x="4901"/></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="437" fill="#ED4627" fg:w="1" fg:x="4901"/></g><g><title>imalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="421" fill="#D4B005" fg:w="1" fg:x="4901"/></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="405" fill="#E85F10" fg:w="1" fg:x="4901"/></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="389" fill="#DB7323" fg:w="1" fg:x="4901"/></g><g><title>iallocztm (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="373" fill="#FB431B" fg:w="1" fg:x="4901"/></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="357" fill="#DE5F28" fg:w="1" fg:x="4901"/></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="341" fill="#FA2310" fg:w="1" fg:x="4901"/></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="325" fill="#E0562C" fg:w="1" fg:x="4901"/></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="309" fill="#ED3535" fg:w="1" fg:x="4901"/></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="293" fill="#D0AB21" fg:w="1" fg:x="4901"/></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="277" fill="#DE401B" fg:w="1" fg:x="4901"/></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="261" fill="#DD7923" fg:w="1" fg:x="4901"/></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="245" fill="#E4892A" fg:w="1" fg:x="4901"/></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="229" fill="#E33615" fg:w="1" fg:x="4901"/></g><g><title>_rjem_je_ecache_alloc_grow (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="213" fill="#F0A821" fg:w="1" fg:x="4901"/></g><g><title>extent_alloc_retained (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="197" fill="#F39F06" fg:w="1" fg:x="4901"/></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="181" fill="#CDD329" fg:w="1" fg:x="4901"/></g><g><title>extent_recycle_split (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="165" fill="#FD1E01" fg:w="1" fg:x="4901"/></g><g><title>extent_split_interior (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="149" fill="#E25012" fg:w="1" fg:x="4901"/></g><g><title>extent_split_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="133" fill="#FD9C2E" fg:w="1" fg:x="4901"/></g><g><title>_rjem_je_base_alloc_edata (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="117" fill="#F8571B" fg:w="1" fg:x="4901"/></g><g><title>base_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="101" fill="#E37A02" fg:w="1" fg:x="4901"/></g><g><title>_rjem_je_edata_heap_remove_first (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.95%" y="85" fill="#E55E27" fg:w="1" fg:x="4901"/></g><g><title>serde::de::MapAccess::next_value (7 samples, 0.14%)</title><rect width=".141%" height="15" x="98.849%" y="789" fill="#E1AD1F" fg:w="7" fg:x="4896"/></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.14%)</title><rect width=".141%" height="15" x="98.849%" y="773" fill="#EFB01E" fg:w="7" fg:x="4896"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.14%)</title><rect width=".141%" height="15" x="98.849%" y="757" fill="#D46815" fg:w="7" fg:x="4896"/></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (7 samples, 0.14%)</title><rect width=".141%" height="15" x="98.849%" y="741" fill="#F0D128" fg:w="7" fg:x="4896"/></g><g><title>serde::de::SeqAccess::next_element (6 samples, 0.12%)</title><rect width=".121%" height="15" x="98.869%" y="725" fill="#EAC305" fg:w="6" fg:x="4897"/></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (6 samples, 0.12%)</title><rect width=".121%" height="15" x="98.869%" y="709" fill="#EED501" fg:w="6" fg:x="4897"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.97%" y="693" fill="#EBB636" fg:w="1" fg:x="4902"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.97%" y="677" fill="#E5322E" fg:w="1" fg:x="4902"/></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.97%" y="661" fill="#DB910D" fg:w="1" fg:x="4902"/></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.97%" y="645" fill="#DCE20A" fg:w="1" fg:x="4902"/></g><g><title>serde::de::MapAccess::next_entry (11 samples, 0.22%)</title><rect width=".222%" height="15" x="98.789%" y="997" fill="#F82F1E" fg:w="11" fg:x="4893"/></g><g><title>serde::de::MapAccess::next_entry_seed (11 samples, 0.22%)</title><rect width=".222%" height="15" x="98.789%" y="981" fill="#E7D12C" fg:w="11" fg:x="4893"/></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11 samples, 0.22%)</title><rect width=".222%" height="15" x="98.789%" y="965" fill="#D1501E" fg:w="11" fg:x="4893"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11 samples, 0.22%)</title><rect width=".222%" height="15" x="98.789%" y="949" fill="#E8090E" fg:w="11" fg:x="4893"/></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.22%)</title><rect width=".222%" height="15" x="98.789%" y="933" fill="#F35B2B" fg:w="11" fg:x="4893"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.22%)</title><rect width=".222%" height="15" x="98.789%" y="917" fill="#E75A34" fg:w="11" fg:x="4893"/></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (11 samples, 0.22%)</title><rect width=".222%" height="15" x="98.789%" y="901" fill="#FDC02C" fg:w="11" fg:x="4893"/></g><g><title>serde::de::SeqAccess::next_element (11 samples, 0.22%)</title><rect width=".222%" height="15" x="98.789%" y="885" fill="#F1421F" fg:w="11" fg:x="4893"/></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (11 samples, 0.22%)</title><rect width=".222%" height="15" x="98.789%" y="869" fill="#EB5125" fg:w="11" fg:x="4893"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11 samples, 0.22%)</title><rect width=".222%" height="15" x="98.789%" y="853" fill="#DFDD09" fg:w="11" fg:x="4893"/></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.22%)</title><rect width=".222%" height="15" x="98.789%" y="837" fill="#F2B407" fg:w="11" fg:x="4893"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.22%)</title><rect width=".222%" height="15" x="98.789%" y="821" fill="#F34E13" fg:w="11" fg:x="4893"/></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.22%)</title><rect width=".222%" height="15" x="98.789%" y="805" fill="#E91711" fg:w="11" fg:x="4893"/></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.99%" y="789" fill="#FC7A2D" fg:w="1" fg:x="4903"/></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.99%" y="773" fill="#F76C14" fg:w="1" fg:x="4903"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.99%" y="757" fill="#EB5415" fg:w="1" fg:x="4903"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.99%" y="741" fill="#F7810A" fg:w="1" fg:x="4903"/></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="98.99%" y="725" fill="#D0AD0E" fg:w="1" fg:x="4903"/></g><g><title>deserialize_struct::diff_json (23 samples, 0.46%)</title><rect width=".464%" height="15" x="98.567%" y="1301" fill="#EC1F26" fg:w="23" fg:x="4882"/></g><g><title>serde_json::de::from_str (13 samples, 0.26%)</title><rect width=".263%" height="15" x="98.768%" y="1285" fill="#E84111" fg:w="13" fg:x="4892"/></g><g><title>serde_json::de::from_trait (13 samples, 0.26%)</title><rect width=".263%" height="15" x="98.768%" y="1269" fill="#E02D31" fg:w="13" fg:x="4892"/></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 0.26%)</title><rect width=".263%" height="15" x="98.768%" y="1253" fill="#E10235" fg:w="13" fg:x="4892"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 0.26%)</title><rect width=".263%" height="15" x="98.768%" y="1237" fill="#F8D235" fg:w="13" fg:x="4892"/></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 0.26%)</title><rect width=".263%" height="15" x="98.768%" y="1221" fill="#D3011E" fg:w="13" fg:x="4892"/></g><g><title>serde::de::MapAccess::next_entry (13 samples, 0.26%)</title><rect width=".263%" height="15" x="98.768%" y="1205" fill="#E0600F" fg:w="13" fg:x="4892"/></g><g><title>serde::de::MapAccess::next_entry_seed (13 samples, 0.26%)</title><rect width=".263%" height="15" x="98.768%" y="1189" fill="#FC2D0B" fg:w="13" fg:x="4892"/></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (13 samples, 0.26%)</title><rect width=".263%" height="15" x="98.768%" y="1173" fill="#DC7D26" fg:w="13" fg:x="4892"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (13 samples, 0.26%)</title><rect width=".263%" height="15" x="98.768%" y="1157" fill="#F3A121" fg:w="13" fg:x="4892"/></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 0.26%)</title><rect width=".263%" height="15" x="98.768%" y="1141" fill="#F8C522" fg:w="13" fg:x="4892"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 0.26%)</title><rect width=".263%" height="15" x="98.768%" y="1125" fill="#E4A517" fg:w="13" fg:x="4892"/></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (12 samples, 0.24%)</title><rect width=".242%" height="15" x="98.789%" y="1109" fill="#EC5E26" fg:w="12" fg:x="4893"/></g><g><title>serde::de::SeqAccess::next_element (12 samples, 0.24%)</title><rect width=".242%" height="15" x="98.789%" y="1093" fill="#DC0D17" fg:w="12" fg:x="4893"/></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (12 samples, 0.24%)</title><rect width=".242%" height="15" x="98.789%" y="1077" fill="#EA1A27" fg:w="12" fg:x="4893"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12 samples, 0.24%)</title><rect width=".242%" height="15" x="98.789%" y="1061" fill="#CD752C" fg:w="12" fg:x="4893"/></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.24%)</title><rect width=".242%" height="15" x="98.789%" y="1045" fill="#FA2A02" fg:w="12" fg:x="4893"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.24%)</title><rect width=".242%" height="15" x="98.789%" y="1029" fill="#DF530E" fg:w="12" fg:x="4893"/></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.24%)</title><rect width=".242%" height="15" x="98.789%" y="1013" fill="#F19332" fg:w="12" fg:x="4893"/></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.011%" y="997" fill="#DA5A06" fg:w="1" fg:x="4904"/></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.011%" y="981" fill="#D2BF05" fg:w="1" fg:x="4904"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.011%" y="965" fill="#E18B13" fg:w="1" fg:x="4904"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.011%" y="949" fill="#D20121" fg:w="1" fg:x="4904"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.011%" y="933" fill="#D53203" fg:w="1" fg:x="4904"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.011%" y="917" fill="#EAE304" fg:w="1" fg:x="4904"/></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.011%" y="901" fill="#F63F05" fg:w="1" fg:x="4904"/></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.011%" y="885" fill="#F5881B" fg:w="1" fg:x="4904"/></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.011%" y="869" fill="#F7C71B" fg:w="1" fg:x="4904"/></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.051%" y="533" fill="#FC9E31" fg:w="1" fg:x="4906"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.051%" y="613" fill="#FE4901" fg:w="2" fg:x="4906"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.051%" y="597" fill="#F85D13" fg:w="2" fg:x="4906"/></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.051%" y="581" fill="#CE4305" fg:w="2" fg:x="4906"/></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.051%" y="565" fill="#D1D204" fg:w="2" fg:x="4906"/></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.051%" y="549" fill="#D6B924" fg:w="2" fg:x="4906"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.071%" y="533" fill="#E9BF1A" fg:w="1" fg:x="4907"/></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.071%" y="517" fill="#F85E11" fg:w="1" fg:x="4907"/></g><g><title>serde_json::read::as_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.071%" y="501" fill="#FA4004" fg:w="1" fg:x="4907"/></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.071%" y="485" fill="#DA2935" fg:w="1" fg:x="4907"/></g><g><title>serde_json::de::from_slice (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="1301" fill="#FBB01C" fg:w="4" fg:x="4905"/></g><g><title>serde_json::de::from_trait (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="1285" fill="#F71609" fg:w="4" fg:x="4905"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="1269" fill="#DAC90E" fg:w="4" fg:x="4905"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="1253" fill="#DA5E0A" fg:w="4" fg:x="4905"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="1237" fill="#DEB734" fg:w="4" fg:x="4905"/></g><g><title>serde::de::MapAccess::next_value (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="1221" fill="#F28C19" fg:w="4" fg:x="4905"/></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="1205" fill="#EBC526" fg:w="4" fg:x="4905"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="1189" fill="#ED880F" fg:w="4" fg:x="4905"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="1173" fill="#DF2C31" fg:w="4" fg:x="4905"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="1157" fill="#E3470F" fg:w="4" fg:x="4905"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="1141" fill="#E19914" fg:w="4" fg:x="4905"/></g><g><title>serde::de::SeqAccess::next_element (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="1125" fill="#D2BE1A" fg:w="4" fg:x="4905"/></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="1109" fill="#DF9305" fg:w="4" fg:x="4905"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="1093" fill="#CF0E17" fg:w="4" fg:x="4905"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="1077" fill="#D3C335" fg:w="4" fg:x="4905"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="1061" fill="#ED4B2E" fg:w="4" fg:x="4905"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="1045" fill="#FE370E" fg:w="4" fg:x="4905"/></g><g><title>serde::de::MapAccess::next_value (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="1029" fill="#E6B91E" fg:w="4" fg:x="4905"/></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="1013" fill="#DC0E0B" fg:w="4" fg:x="4905"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="997" fill="#D7A92C" fg:w="4" fg:x="4905"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="981" fill="#FDCB14" fg:w="4" fg:x="4905"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="965" fill="#E5E111" fg:w="4" fg:x="4905"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="949" fill="#EC4C1A" fg:w="4" fg:x="4905"/></g><g><title>serde::de::SeqAccess::next_element (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="933" fill="#EA0F1E" fg:w="4" fg:x="4905"/></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="917" fill="#D37130" fg:w="4" fg:x="4905"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="901" fill="#DD1F24" fg:w="4" fg:x="4905"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="885" fill="#D77634" fg:w="4" fg:x="4905"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="869" fill="#F1971B" fg:w="4" fg:x="4905"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="853" fill="#FD3303" fg:w="4" fg:x="4905"/></g><g><title>serde::de::MapAccess::next_value (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="837" fill="#D8C918" fg:w="4" fg:x="4905"/></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="821" fill="#E76B04" fg:w="4" fg:x="4905"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.031%" y="805" fill="#F36136" fg:w="4" fg:x="4905"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.051%" y="789" fill="#DD2033" fg:w="3" fg:x="4906"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.051%" y="773" fill="#DAAB23" fg:w="3" fg:x="4906"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.051%" y="757" fill="#D61435" fg:w="3" fg:x="4906"/></g><g><title>serde::de::SeqAccess::next_element (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.051%" y="741" fill="#EF0934" fg:w="3" fg:x="4906"/></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.051%" y="725" fill="#D7722D" fg:w="3" fg:x="4906"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.051%" y="709" fill="#D07609" fg:w="3" fg:x="4906"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.051%" y="693" fill="#EB0727" fg:w="3" fg:x="4906"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.051%" y="677" fill="#F3E10F" fg:w="3" fg:x="4906"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.051%" y="661" fill="#E1D812" fg:w="3" fg:x="4906"/></g><g><title>serde::de::MapAccess::next_key (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.051%" y="645" fill="#E92426" fg:w="3" fg:x="4906"/></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.051%" y="629" fill="#EF5817" fg:w="3" fg:x="4906"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.091%" y="613" fill="#DBB523" fg:w="1" fg:x="4908"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.091%" y="597" fill="#D7122E" fg:w="1" fg:x="4908"/></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.091%" y="581" fill="#F1260B" fg:w="1" fg:x="4908"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::Price&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.112%" y="869" fill="#F8A92D" fg:w="1" fg:x="4909"/></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.112%" y="853" fill="#EF3231" fg:w="1" fg:x="4909"/></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.112%" y="837" fill="#E7601F" fg:w="1" fg:x="4909"/></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.112%" y="821" fill="#E0C125" fg:w="1" fg:x="4909"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.112%" y="805" fill="#E39932" fg:w="1" fg:x="4909"/></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.112%" y="789" fill="#F9E403" fg:w="1" fg:x="4909"/></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.112%" y="773" fill="#DBA42B" fg:w="1" fg:x="4909"/></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.112%" y="757" fill="#D82D29" fg:w="1" fg:x="4909"/></g><g><title>serde_json::ser::format_escaped_str_contents (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.112%" y="741" fill="#D2E233" fg:w="1" fg:x="4909"/></g><g><title>serde_json::ser::to_string_pretty (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="1301" fill="#D17531" fg:w="3" fg:x="4909"/></g><g><title>serde_json::ser::to_vec_pretty (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="1285" fill="#CEC418" fg:w="3" fg:x="4909"/></g><g><title>serde_json::ser::to_writer_pretty (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="1269" fill="#FDDA03" fg:w="3" fg:x="4909"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::serialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="1253" fill="#FCA602" fg:w="3" fg:x="4909"/></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="1237" fill="#ECDA1A" fg:w="3" fg:x="4909"/></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="1221" fill="#FE5413" fg:w="3" fg:x="4909"/></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="1205" fill="#DB891D" fg:w="3" fg:x="4909"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="1189" fill="#E32F34" fg:w="3" fg:x="4909"/></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="1173" fill="#E5A718" fg:w="3" fg:x="4909"/></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="1157" fill="#E9A401" fg:w="3" fg:x="4909"/></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="1141" fill="#DA5830" fg:w="3" fg:x="4909"/></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="1125" fill="#E2D618" fg:w="3" fg:x="4909"/></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="1109" fill="#E91D0C" fg:w="3" fg:x="4909"/></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="1093" fill="#DB7822" fg:w="3" fg:x="4909"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="1077" fill="#E24E2C" fg:w="3" fg:x="4909"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::Performance&gt;::serialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="1061" fill="#F00F30" fg:w="3" fg:x="4909"/></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="1045" fill="#FDB007" fg:w="3" fg:x="4909"/></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="1029" fill="#CEA61C" fg:w="3" fg:x="4909"/></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="1013" fill="#F13533" fg:w="3" fg:x="4909"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="997" fill="#F9701E" fg:w="3" fg:x="4909"/></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="981" fill="#D9551E" fg:w="3" fg:x="4909"/></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="965" fill="#E93107" fg:w="3" fg:x="4909"/></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="949" fill="#EA6D09" fg:w="3" fg:x="4909"/></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="933" fill="#FD5F16" fg:w="3" fg:x="4909"/></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="917" fill="#E9B019" fg:w="3" fg:x="4909"/></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="901" fill="#EC2127" fg:w="3" fg:x="4909"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.112%" y="885" fill="#DFE22A" fg:w="3" fg:x="4909"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::serialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="869" fill="#D86321" fg:w="2" fg:x="4910"/></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="853" fill="#EB5417" fg:w="2" fg:x="4910"/></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="837" fill="#E8021B" fg:w="2" fg:x="4910"/></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="821" fill="#F11716" fg:w="2" fg:x="4910"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="805" fill="#D3491B" fg:w="2" fg:x="4910"/></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="789" fill="#EB6D31" fg:w="2" fg:x="4910"/></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="773" fill="#E6631D" fg:w="2" fg:x="4910"/></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="757" fill="#F5C707" fg:w="2" fg:x="4910"/></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="741" fill="#D9B30A" fg:w="2" fg:x="4910"/></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="725" fill="#FE632F" fg:w="2" fg:x="4910"/></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="709" fill="#FB7907" fg:w="2" fg:x="4910"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="693" fill="#FAB11A" fg:w="2" fg:x="4910"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::Area&gt;::serialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="677" fill="#E8580F" fg:w="2" fg:x="4910"/></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="661" fill="#FB3636" fg:w="2" fg:x="4910"/></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="645" fill="#D0B10F" fg:w="2" fg:x="4910"/></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="629" fill="#CD6120" fg:w="2" fg:x="4910"/></g><g><title>&lt;serde_json::ser::PrettyFormatter as serde_json::ser::Formatter&gt;::begin_object_key (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="613" fill="#D9C00D" fg:w="2" fg:x="4910"/></g><g><title>serde_json::ser::indent (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="597" fill="#D7A329" fg:w="2" fg:x="4910"/></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="581" fill="#F6531D" fg:w="2" fg:x="4910"/></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="565" fill="#DB022D" fg:w="2" fg:x="4910"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="549" fill="#F2D721" fg:w="2" fg:x="4910"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="533" fill="#D90106" fg:w="2" fg:x="4910"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="517" fill="#CF5534" fg:w="2" fg:x="4910"/></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="501" fill="#E7AB13" fg:w="2" fg:x="4910"/></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.132%" y="485" fill="#CF8004" fg:w="2" fg:x="4910"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.172%" y="1173" fill="#DBD004" fg:w="1" fg:x="4912"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.172%" y="1157" fill="#EBA12A" fg:w="1" fg:x="4912"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.172%" y="1141" fill="#F7DA12" fg:w="1" fg:x="4912"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_entry (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.172%" y="1125" fill="#E87233" fg:w="1" fg:x="4912"/></g><g><title>serde::de::MapAccess::next_entry_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.172%" y="1109" fill="#DE5F03" fg:w="1" fg:x="4912"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.172%" y="1093" fill="#F0411D" fg:w="1" fg:x="4912"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.172%" y="1077" fill="#F9D114" fg:w="1" fg:x="4912"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.172%" y="1061" fill="#F13025" fg:w="1" fg:x="4912"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.172%" y="1045" fill="#E68C2A" fg:w="1" fg:x="4912"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.172%" y="1029" fill="#E6B02D" fg:w="1" fg:x="4912"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.172%" y="1013" fill="#F57015" fg:w="1" fg:x="4912"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.172%" y="997" fill="#CFB723" fg:w="1" fg:x="4912"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.172%" y="981" fill="#E32C21" fg:w="1" fg:x="4912"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.172%" y="965" fill="#F67815" fg:w="1" fg:x="4912"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.172%" y="949" fill="#EB3934" fg:w="1" fg:x="4912"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.172%" y="933" fill="#EE540A" fg:w="1" fg:x="4912"/></g><g><title>sonic_rs::serde::de::from_slice (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.172%" y="1301" fill="#FBC820" fg:w="2" fg:x="4912"/></g><g><title>sonic_rs::serde::de::from_trait (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.172%" y="1285" fill="#F79F0D" fg:w="2" fg:x="4912"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.172%" y="1269" fill="#EE4004" fg:w="2" fg:x="4912"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.172%" y="1253" fill="#DD8333" fg:w="2" fg:x="4912"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.172%" y="1237" fill="#F2051D" fg:w="2" fg:x="4912"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.172%" y="1221" fill="#D68220" fg:w="2" fg:x="4912"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.172%" y="1205" fill="#F4D210" fg:w="2" fg:x="4912"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.172%" y="1189" fill="#EA301A" fg:w="2" fg:x="4912"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="1173" fill="#E75226" fg:w="1" fg:x="4913"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="1157" fill="#FE8029" fg:w="1" fg:x="4913"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="1141" fill="#D44931" fg:w="1" fg:x="4913"/></g><g><title>serde::de::SeqAccess::next_element (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="1125" fill="#CD3E36" fg:w="1" fg:x="4913"/></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="1109" fill="#E40008" fg:w="1" fg:x="4913"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="1093" fill="#FB1C11" fg:w="1" fg:x="4913"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="1077" fill="#EE691B" fg:w="1" fg:x="4913"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="1061" fill="#EDD821" fg:w="1" fg:x="4913"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="1045" fill="#E5E419" fg:w="1" fg:x="4913"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="1029" fill="#E94B17" fg:w="1" fg:x="4913"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="1013" fill="#E7CF10" fg:w="1" fg:x="4913"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="997" fill="#E7BF2D" fg:w="1" fg:x="4913"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="981" fill="#E08511" fg:w="1" fg:x="4913"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="965" fill="#D1B21B" fg:w="1" fg:x="4913"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="949" fill="#DA250B" fg:w="1" fg:x="4913"/></g><g><title>serde::de::SeqAccess::next_element (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="933" fill="#FBE219" fg:w="1" fg:x="4913"/></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="917" fill="#D1DE1B" fg:w="1" fg:x="4913"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="901" fill="#EE1615" fg:w="1" fg:x="4913"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="885" fill="#E9A119" fg:w="1" fg:x="4913"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="869" fill="#E27A35" fg:w="1" fg:x="4913"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="853" fill="#DC7B11" fg:w="1" fg:x="4913"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="837" fill="#E6E023" fg:w="1" fg:x="4913"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="821" fill="#F65308" fg:w="1" fg:x="4913"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="805" fill="#E6D611" fg:w="1" fg:x="4913"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="789" fill="#DE6112" fg:w="1" fg:x="4913"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="773" fill="#CE4F01" fg:w="1" fg:x="4913"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="757" fill="#D67922" fg:w="1" fg:x="4913"/></g><g><title>serde::de::SeqAccess::next_element (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="741" fill="#F9C72E" fg:w="1" fg:x="4913"/></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="725" fill="#D6DE2E" fg:w="1" fg:x="4913"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="709" fill="#F8A81E" fg:w="1" fg:x="4913"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="693" fill="#E20E1C" fg:w="1" fg:x="4913"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="677" fill="#FD7B01" fg:w="1" fg:x="4913"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="661" fill="#E1182A" fg:w="1" fg:x="4913"/></g><g><title>serde::de::MapAccess::next_key (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="645" fill="#D8A125" fg:w="1" fg:x="4913"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="629" fill="#FBA41A" fg:w="1" fg:x="4913"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="613" fill="#DBB103" fg:w="1" fg:x="4913"/></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="597" fill="#DE4100" fg:w="1" fg:x="4913"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="581" fill="#DF4536" fg:w="1" fg:x="4913"/></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="565" fill="#EB1E1B" fg:w="1" fg:x="4913"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="549" fill="#DCB732" fg:w="1" fg:x="4913"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="533" fill="#F8C60F" fg:w="1" fg:x="4913"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="517" fill="#DED304" fg:w="1" fg:x="4913"/></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.192%" y="501" fill="#D66622" fg:w="1" fg:x="4913"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.213%" y="1013" fill="#F55C05" fg:w="1" fg:x="4914"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.213%" y="997" fill="#FC4833" fg:w="1" fg:x="4914"/></g><g><title>&lt;sonic_rs::serde::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.213%" y="981" fill="#FCD013" fg:w="1" fg:x="4914"/></g><g><title>&lt;&amp;mut sonic_rs::serde::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.213%" y="965" fill="#D34507" fg:w="1" fg:x="4914"/></g><g><title>sonic_rs::format::Formatter::write_string_fast (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.213%" y="949" fill="#D31B10" fg:w="1" fg:x="4914"/></g><g><title>&lt;sonic_rs::format::PrettyFormatter as sonic_rs::format::Formatter&gt;::begin_object_key (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.233%" y="613" fill="#DBD80E" fg:w="1" fg:x="4915"/></g><g><title>sonic_rs::format::indent (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.233%" y="597" fill="#DB4708" fg:w="1" fg:x="4915"/></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog (950 samples, 19.18%)</title><rect width="19.18%" height="15" x="80.093%" y="1317" fill="#DFAA35" fg:w="950" fg:x="3967"/><text x="80.343%" y="1327.5">deserialize_struct::bench_citm..</text></g><g><title>sonic_rs::serde::ser::to_string_pretty (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.213%" y="1301" fill="#F6151A" fg:w="3" fg:x="4914"/></g><g><title>sonic_rs::serde::ser::to_vec_pretty (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.213%" y="1285" fill="#F8142E" fg:w="3" fg:x="4914"/></g><g><title>sonic_rs::serde::ser::to_writer_pretty (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.213%" y="1269" fill="#FC5E0B" fg:w="3" fg:x="4914"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::serialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.213%" y="1253" fill="#ECA308" fg:w="3" fg:x="4914"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.213%" y="1237" fill="#D9DD2D" fg:w="3" fg:x="4914"/></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.213%" y="1221" fill="#EE2611" fg:w="3" fg:x="4914"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.213%" y="1205" fill="#F2D217" fg:w="3" fg:x="4914"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.213%" y="1189" fill="#FA5635" fg:w="3" fg:x="4914"/></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.213%" y="1173" fill="#DFA819" fg:w="3" fg:x="4914"/></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.213%" y="1157" fill="#FBBD04" fg:w="3" fg:x="4914"/></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.213%" y="1141" fill="#F5131C" fg:w="3" fg:x="4914"/></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.213%" y="1125" fill="#CF0A22" fg:w="3" fg:x="4914"/></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.213%" y="1109" fill="#EB991F" fg:w="3" fg:x="4914"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.213%" y="1093" fill="#E44825" fg:w="3" fg:x="4914"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.213%" y="1077" fill="#D70F10" fg:w="3" fg:x="4914"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::Performance&gt;::serialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.213%" y="1061" fill="#FA771D" fg:w="3" fg:x="4914"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.213%" y="1045" fill="#D63B01" fg:w="3" fg:x="4914"/></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.213%" y="1029" fill="#DF6D19" fg:w="3" fg:x="4914"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="1013" fill="#E6C616" fg:w="2" fg:x="4915"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="997" fill="#F5B82E" fg:w="2" fg:x="4915"/></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="981" fill="#FD4910" fg:w="2" fg:x="4915"/></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="965" fill="#CE5E2D" fg:w="2" fg:x="4915"/></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="949" fill="#EC531B" fg:w="2" fg:x="4915"/></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="933" fill="#DCC408" fg:w="2" fg:x="4915"/></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="917" fill="#FEB90E" fg:w="2" fg:x="4915"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="901" fill="#E23216" fg:w="2" fg:x="4915"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="885" fill="#FD9300" fg:w="2" fg:x="4915"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::serialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="869" fill="#FC2E21" fg:w="2" fg:x="4915"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="853" fill="#F21636" fg:w="2" fg:x="4915"/></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="837" fill="#DFB220" fg:w="2" fg:x="4915"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="821" fill="#D66A35" fg:w="2" fg:x="4915"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="805" fill="#E84132" fg:w="2" fg:x="4915"/></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="789" fill="#E76E1C" fg:w="2" fg:x="4915"/></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="773" fill="#D84728" fg:w="2" fg:x="4915"/></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="757" fill="#E55935" fg:w="2" fg:x="4915"/></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="741" fill="#D27C0E" fg:w="2" fg:x="4915"/></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="725" fill="#ECD506" fg:w="2" fg:x="4915"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="709" fill="#E42905" fg:w="2" fg:x="4915"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="693" fill="#DDA719" fg:w="2" fg:x="4915"/></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::Area&gt;::serialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="677" fill="#E49025" fg:w="2" fg:x="4915"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="661" fill="#E3BD26" fg:w="2" fg:x="4915"/></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="645" fill="#DA0802" fg:w="2" fg:x="4915"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.233%" y="629" fill="#D13D1C" fg:w="2" fg:x="4915"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.253%" y="613" fill="#E98C27" fg:w="1" fg:x="4916"/></g><g><title>&lt;sonic_rs::serde::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.253%" y="597" fill="#FB4230" fg:w="1" fg:x="4916"/></g><g><title>&lt;&amp;mut sonic_rs::serde::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.253%" y="581" fill="#D22C2D" fg:w="1" fg:x="4916"/></g><g><title>sonic_rs::format::Formatter::write_string_fast (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.253%" y="565" fill="#D6882E" fg:w="1" fg:x="4916"/></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;u8&gt; as sonic_rs::writer::WriterExt&gt;::reserve_with (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.253%" y="549" fill="#CF8232" fg:w="1" fg:x="4916"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.253%" y="533" fill="#E46631" fg:w="1" fg:x="4916"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.253%" y="517" fill="#FD3701" fg:w="1" fg:x="4916"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.253%" y="501" fill="#EEDE09" fg:w="1" fg:x="4916"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.253%" y="485" fill="#F66306" fg:w="1" fg:x="4916"/></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.253%" y="469" fill="#DB6E1A" fg:w="1" fg:x="4916"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.253%" y="453" fill="#EFA021" fg:w="1" fg:x="4916"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.253%" y="437" fill="#DCCA17" fg:w="1" fg:x="4916"/></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.253%" y="421" fill="#D0501A" fg:w="1" fg:x="4916"/></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.253%" y="405" fill="#F35507" fg:w="1" fg:x="4916"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.253%" y="389" fill="#E44D2F" fg:w="1" fg:x="4916"/></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.253%" y="373" fill="#D4E208" fg:w="1" fg:x="4916"/></g><g><title>iralloct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.253%" y="357" fill="#F17836" fg:w="1" fg:x="4916"/></g><g><title>_rjem_je_arena_ralloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.253%" y="341" fill="#E25010" fg:w="1" fg:x="4916"/></g><g><title>_rjem_je_large_ralloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.253%" y="325" fill="#F04C0D" fg:w="1" fg:x="4916"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.253%" y="309" fill="#FC4A08" fg:w="1" fg:x="4916"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.273%" y="1301" fill="#F49B02" fg:w="1" fg:x="4917"/></g><g><title>deserialize_struct::bench_twitter_Twitter (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.273%" y="1285" fill="#D75123" fg:w="1" fg:x="4917"/></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.293%" y="757" fill="#CE3702" fg:w="1" fg:x="4918"/></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.293%" y="741" fill="#E70222" fg:w="1" fg:x="4918"/></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.293%" y="725" fill="#F2B030" fg:w="1" fg:x="4918"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.293%" y="709" fill="#F91F24" fg:w="1" fg:x="4918"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.293%" y="693" fill="#CD1211" fg:w="1" fg:x="4918"/></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.293%" y="677" fill="#FE8205" fg:w="1" fg:x="4918"/></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.293%" y="661" fill="#E52A2D" fg:w="1" fg:x="4918"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.293%" y="645" fill="#F55F19" fg:w="1" fg:x="4918"/></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.293%" y="629" fill="#F9C126" fg:w="1" fg:x="4918"/></g><g><title>core::cmp::PartialEq::ne (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="1285" fill="#F18C2B" fg:w="2" fg:x="4918"/></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="1269" fill="#F54E30" fg:w="2" fg:x="4918"/></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="1253" fill="#D65C27" fg:w="2" fg:x="4918"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="1237" fill="#D3BD0E" fg:w="2" fg:x="4918"/></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="1221" fill="#DA0718" fg:w="2" fg:x="4918"/></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="1205" fill="#E0C831" fg:w="2" fg:x="4918"/></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="1189" fill="#DAD20E" fg:w="2" fg:x="4918"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="1173" fill="#EA8E1F" fg:w="2" fg:x="4918"/></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="1157" fill="#E3A502" fg:w="2" fg:x="4918"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="1141" fill="#E82C2E" fg:w="2" fg:x="4918"/></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="1125" fill="#EC952F" fg:w="2" fg:x="4918"/></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="1109" fill="#E32D1F" fg:w="2" fg:x="4918"/></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="1093" fill="#F0B033" fg:w="2" fg:x="4918"/></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="1077" fill="#F99229" fg:w="2" fg:x="4918"/></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="1061" fill="#D5D004" fg:w="2" fg:x="4918"/></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="1045" fill="#F55424" fg:w="2" fg:x="4918"/></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="1029" fill="#FE5412" fg:w="2" fg:x="4918"/></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="1013" fill="#E12636" fg:w="2" fg:x="4918"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="997" fill="#F6321E" fg:w="2" fg:x="4918"/></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="981" fill="#F69409" fg:w="2" fg:x="4918"/></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="965" fill="#DF4B04" fg:w="2" fg:x="4918"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="949" fill="#EF9429" fg:w="2" fg:x="4918"/></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="933" fill="#CDC303" fg:w="2" fg:x="4918"/></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="917" fill="#FEA101" fg:w="2" fg:x="4918"/></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="901" fill="#D3E508" fg:w="2" fg:x="4918"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="885" fill="#DC6109" fg:w="2" fg:x="4918"/></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="869" fill="#F0DA08" fg:w="2" fg:x="4918"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="853" fill="#FA2C00" fg:w="2" fg:x="4918"/></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="837" fill="#EC2935" fg:w="2" fg:x="4918"/></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="821" fill="#DAE30D" fg:w="2" fg:x="4918"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="805" fill="#D95E20" fg:w="2" fg:x="4918"/></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="789" fill="#D5D90C" fg:w="2" fg:x="4918"/></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.293%" y="773" fill="#E50D2E" fg:w="2" fg:x="4918"/></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.314%" y="757" fill="#F38B05" fg:w="1" fg:x="4919"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.314%" y="741" fill="#F9262D" fg:w="1" fg:x="4919"/></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.314%" y="725" fill="#D8460B" fg:w="1" fg:x="4919"/></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.314%" y="709" fill="#FD6519" fg:w="1" fg:x="4919"/></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.314%" y="693" fill="#CFC51E" fg:w="1" fg:x="4919"/></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.314%" y="677" fill="#EE570D" fg:w="1" fg:x="4919"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.314%" y="661" fill="#D79B08" fg:w="1" fg:x="4919"/></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.314%" y="645" fill="#EFA626" fg:w="1" fg:x="4919"/></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.314%" y="629" fill="#F0C223" fg:w="1" fg:x="4919"/></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.314%" y="613" fill="#DB0A2C" fg:w="1" fg:x="4919"/></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.314%" y="597" fill="#FBDC23" fg:w="1" fg:x="4919"/></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.314%" y="581" fill="#DA750D" fg:w="1" fg:x="4919"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.314%" y="565" fill="#DDD528" fg:w="1" fg:x="4919"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.314%" y="549" fill="#FBE023" fg:w="1" fg:x="4919"/></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.314%" y="533" fill="#F12127" fg:w="1" fg:x="4919"/></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.314%" y="517" fill="#DE4A11" fg:w="1" fg:x="4919"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.314%" y="501" fill="#E16700" fg:w="1" fg:x="4919"/></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.314%" y="485" fill="#F0000C" fg:w="1" fg:x="4919"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.334%" y="1285" fill="#E9D525" fg:w="2" fg:x="4920"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.334%" y="1269" fill="#E15434" fg:w="2" fg:x="4920"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.334%" y="1253" fill="#F7A033" fg:w="2" fg:x="4920"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.334%" y="1237" fill="#F43C33" fg:w="2" fg:x="4920"/></g><g><title>core::mem::drop (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.334%" y="1221" fill="#E97207" fg:w="2" fg:x="4920"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.334%" y="1205" fill="#F68810" fg:w="2" fg:x="4920"/></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.334%" y="1189" fill="#F3722D" fg:w="2" fg:x="4920"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.334%" y="1173" fill="#F7B72B" fg:w="2" fg:x="4920"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.334%" y="1157" fill="#FBD22A" fg:w="2" fg:x="4920"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.334%" y="1141" fill="#DD5823" fg:w="2" fg:x="4920"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.334%" y="1125" fill="#F21514" fg:w="2" fg:x="4920"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.334%" y="1109" fill="#E9E224" fg:w="2" fg:x="4920"/></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.334%" y="1093" fill="#F3BD22" fg:w="2" fg:x="4920"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.334%" y="1077" fill="#CF9132" fg:w="2" fg:x="4920"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.334%" y="1061" fill="#F20132" fg:w="2" fg:x="4920"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.334%" y="1045" fill="#E74120" fg:w="2" fg:x="4920"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.334%" y="1029" fill="#D04431" fg:w="2" fg:x="4920"/></g><g><title>core::mem::drop (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.334%" y="1013" fill="#FD3631" fg:w="2" fg:x="4920"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.334%" y="997" fill="#F5BA18" fg:w="2" fg:x="4920"/></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.334%" y="981" fill="#D10229" fg:w="2" fg:x="4920"/></g><g><title>?? (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.334%" y="965" fill="#F2D036" fg:w="2" fg:x="4920"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.334%" y="949" fill="#E10933" fg:w="2" fg:x="4920"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.334%" y="933" fill="#CFCF19" fg:w="2" fg:x="4920"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="917" fill="#FD6012" fg:w="1" fg:x="4921"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="901" fill="#FCD714" fg:w="1" fg:x="4921"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="885" fill="#F5E31A" fg:w="1" fg:x="4921"/></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="869" fill="#F1D000" fg:w="1" fg:x="4921"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="853" fill="#E0820A" fg:w="1" fg:x="4921"/></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="837" fill="#ED1D00" fg:w="1" fg:x="4921"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="821" fill="#DB1B29" fg:w="1" fg:x="4921"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="805" fill="#F56513" fg:w="1" fg:x="4921"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="789" fill="#F32C25" fg:w="1" fg:x="4921"/></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="773" fill="#E4D52B" fg:w="1" fg:x="4921"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="757" fill="#DBA315" fg:w="1" fg:x="4921"/></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="741" fill="#EA5618" fg:w="1" fg:x="4921"/></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="725" fill="#E10A18" fg:w="1" fg:x="4921"/></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="709" fill="#DA6D07" fg:w="1" fg:x="4921"/></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="693" fill="#D2141A" fg:w="1" fg:x="4921"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="677" fill="#D81201" fg:w="1" fg:x="4921"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="661" fill="#CEA317" fg:w="1" fg:x="4921"/></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="645" fill="#E5961F" fg:w="1" fg:x="4921"/></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="629" fill="#E70A05" fg:w="1" fg:x="4921"/></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="613" fill="#FA2832" fg:w="1" fg:x="4921"/></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="597" fill="#D97707" fg:w="1" fg:x="4921"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="581" fill="#F5D628" fg:w="1" fg:x="4921"/></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="565" fill="#D8BB01" fg:w="1" fg:x="4921"/></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="549" fill="#ED9215" fg:w="1" fg:x="4921"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="533" fill="#D2AE2F" fg:w="1" fg:x="4921"/></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="517" fill="#DA6F27" fg:w="1" fg:x="4921"/></g><g><title>isfree (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="501" fill="#E05F13" fg:w="1" fg:x="4921"/></g><g><title>isdalloct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="485" fill="#EA0F26" fg:w="1" fg:x="4921"/></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="469" fill="#F6380C" fg:w="1" fg:x="4921"/></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="453" fill="#F71011" fg:w="1" fg:x="4921"/></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="437" fill="#D7970B" fg:w="1" fg:x="4921"/></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="421" fill="#E11018" fg:w="1" fg:x="4921"/></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="405" fill="#D97505" fg:w="1" fg:x="4921"/></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.354%" y="389" fill="#F6BB35" fg:w="1" fg:x="4921"/></g><g><title>serde::de::MapAccess::next_entry (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.374%" y="821" fill="#F14728" fg:w="1" fg:x="4922"/></g><g><title>serde::de::MapAccess::next_entry_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.374%" y="805" fill="#E74327" fg:w="1" fg:x="4922"/></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.374%" y="789" fill="#DE7818" fg:w="1" fg:x="4922"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.374%" y="773" fill="#F80303" fg:w="1" fg:x="4922"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.374%" y="757" fill="#E4DA05" fg:w="1" fg:x="4922"/></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.374%" y="741" fill="#D4CA2B" fg:w="1" fg:x="4922"/></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.374%" y="725" fill="#EBB702" fg:w="1" fg:x="4922"/></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.374%" y="709" fill="#E6A50A" fg:w="1" fg:x="4922"/></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.374%" y="693" fill="#DB3628" fg:w="1" fg:x="4922"/></g><g><title>serde::de::MapAccess::next_entry (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.374%" y="933" fill="#F44909" fg:w="2" fg:x="4922"/></g><g><title>serde::de::MapAccess::next_entry_seed (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.374%" y="917" fill="#D4202D" fg:w="2" fg:x="4922"/></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.374%" y="901" fill="#CD3A1F" fg:w="2" fg:x="4922"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.374%" y="885" fill="#FA782B" fg:w="2" fg:x="4922"/></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.374%" y="869" fill="#EB0D0A" fg:w="2" fg:x="4922"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.374%" y="853" fill="#E8DB1F" fg:w="2" fg:x="4922"/></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.374%" y="837" fill="#DA9D33" fg:w="2" fg:x="4922"/></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.394%" y="821" fill="#D35B34" fg:w="1" fg:x="4923"/></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.394%" y="805" fill="#F0AD01" fg:w="1" fg:x="4923"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.394%" y="789" fill="#F8142F" fg:w="1" fg:x="4923"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.394%" y="773" fill="#D9DD28" fg:w="1" fg:x="4923"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.394%" y="757" fill="#E29533" fg:w="1" fg:x="4923"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.394%" y="741" fill="#FCC107" fg:w="1" fg:x="4923"/></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.394%" y="725" fill="#CD7B00" fg:w="1" fg:x="4923"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.394%" y="709" fill="#E9AD19" fg:w="1" fg:x="4923"/></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.394%" y="693" fill="#D83F20" fg:w="1" fg:x="4923"/></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.394%" y="677" fill="#D1382D" fg:w="1" fg:x="4923"/></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.394%" y="661" fill="#E26F31" fg:w="1" fg:x="4923"/></g><g><title>serde::de::MapAccess::next_entry (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.374%" y="1045" fill="#F4B515" fg:w="3" fg:x="4922"/></g><g><title>serde::de::MapAccess::next_entry_seed (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.374%" y="1029" fill="#DE7E0F" fg:w="3" fg:x="4922"/></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.374%" y="1013" fill="#DE5F11" fg:w="3" fg:x="4922"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.374%" y="997" fill="#FE2E05" fg:w="3" fg:x="4922"/></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.374%" y="981" fill="#ECD823" fg:w="3" fg:x="4922"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.374%" y="965" fill="#D9BB1A" fg:w="3" fg:x="4922"/></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.374%" y="949" fill="#CFC019" fg:w="3" fg:x="4922"/></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.415%" y="933" fill="#FD871B" fg:w="1" fg:x="4924"/></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.415%" y="917" fill="#D37A1D" fg:w="1" fg:x="4924"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.415%" y="901" fill="#E9A228" fg:w="1" fg:x="4924"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.415%" y="885" fill="#DEB82F" fg:w="1" fg:x="4924"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.415%" y="869" fill="#F96317" fg:w="1" fg:x="4924"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.415%" y="853" fill="#D63C0C" fg:w="1" fg:x="4924"/></g><g><title>alloc::collections::btree::node::slice_insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.415%" y="837" fill="#FAE524" fg:w="1" fg:x="4924"/></g><g><title>core::intrinsics::copy (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.415%" y="821" fill="#E8C30A" fg:w="1" fg:x="4924"/></g><g><title>deserialize_struct::diff_json (8 samples, 0.16%)</title><rect width=".162%" height="15" x="99.293%" y="1301" fill="#CDD51F" fg:w="8" fg:x="4918"/></g><g><title>serde_json::de::from_str (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.374%" y="1285" fill="#ED2B08" fg:w="4" fg:x="4922"/></g><g><title>serde_json::de::from_trait (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.374%" y="1269" fill="#D8D003" fg:w="4" fg:x="4922"/></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.374%" y="1253" fill="#E4B32C" fg:w="4" fg:x="4922"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.374%" y="1237" fill="#E6C01B" fg:w="4" fg:x="4922"/></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.374%" y="1221" fill="#FB1E26" fg:w="4" fg:x="4922"/></g><g><title>serde::de::MapAccess::next_value (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.374%" y="1205" fill="#F63734" fg:w="4" fg:x="4922"/></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.374%" y="1189" fill="#F94F1A" fg:w="4" fg:x="4922"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.374%" y="1173" fill="#DCCA10" fg:w="4" fg:x="4922"/></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.374%" y="1157" fill="#FAAA17" fg:w="4" fg:x="4922"/></g><g><title>serde::de::SeqAccess::next_element (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.374%" y="1141" fill="#E60725" fg:w="4" fg:x="4922"/></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.374%" y="1125" fill="#D54701" fg:w="4" fg:x="4922"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.374%" y="1109" fill="#E35727" fg:w="4" fg:x="4922"/></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.374%" y="1093" fill="#D2291D" fg:w="4" fg:x="4922"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.374%" y="1077" fill="#CEBF1F" fg:w="4" fg:x="4922"/></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.08%)</title><rect width=".081%" height="15" x="99.374%" y="1061" fill="#F74B36" fg:w="4" fg:x="4922"/></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.435%" y="1045" fill="#D03632" fg:w="1" fg:x="4925"/></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.435%" y="1029" fill="#D65A25" fg:w="1" fg:x="4925"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.435%" y="1013" fill="#DC8406" fg:w="1" fg:x="4925"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.435%" y="997" fill="#D5A707" fg:w="1" fg:x="4925"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.435%" y="981" fill="#F3241B" fg:w="1" fg:x="4925"/></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.435%" y="965" fill="#EB930C" fg:w="1" fg:x="4925"/></g><g><title>serde::de::MapAccess::next_key (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.455%" y="1029" fill="#D4C62C" fg:w="1" fg:x="4926"/></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.455%" y="1013" fill="#DA4432" fg:w="1" fg:x="4926"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.455%" y="997" fill="#E04F30" fg:w="1" fg:x="4926"/></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.455%" y="981" fill="#D5BF32" fg:w="1" fg:x="4926"/></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.455%" y="965" fill="#FE920A" fg:w="1" fg:x="4926"/></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.455%" y="949" fill="#D7AF0B" fg:w="1" fg:x="4926"/></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.455%" y="933" fill="#CF3107" fg:w="1" fg:x="4926"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.455%" y="917" fill="#EA901D" fg:w="1" fg:x="4926"/></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.455%" y="901" fill="#D5DE30" fg:w="1" fg:x="4926"/></g><g><title>serde_json::read::as_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.455%" y="885" fill="#DE0806" fg:w="1" fg:x="4926"/></g><g><title>core::str::converts::from_utf8 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.455%" y="869" fill="#DD7231" fg:w="1" fg:x="4926"/></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.455%" y="853" fill="#FA8C2A" fg:w="1" fg:x="4926"/></g><g><title>serde_json::de::from_slice (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.455%" y="1301" fill="#FA961B" fg:w="2" fg:x="4926"/></g><g><title>serde_json::de::from_trait (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.455%" y="1285" fill="#FC9F03" fg:w="2" fg:x="4926"/></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Twitter&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.455%" y="1269" fill="#F1B603" fg:w="2" fg:x="4926"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.455%" y="1253" fill="#EC0309" fg:w="2" fg:x="4926"/></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Twitter&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.455%" y="1237" fill="#DFE333" fg:w="2" fg:x="4926"/></g><g><title>serde::de::MapAccess::next_value (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.455%" y="1221" fill="#E8851E" fg:w="2" fg:x="4926"/></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.455%" y="1205" fill="#D15D1B" fg:w="2" fg:x="4926"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.455%" y="1189" fill="#D06C22" fg:w="2" fg:x="4926"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.455%" y="1173" fill="#D7BD0D" fg:w="2" fg:x="4926"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.455%" y="1157" fill="#CE5817" fg:w="2" fg:x="4926"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.455%" y="1141" fill="#F0AD00" fg:w="2" fg:x="4926"/></g><g><title>serde::de::SeqAccess::next_element (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.455%" y="1125" fill="#DF6A34" fg:w="2" fg:x="4926"/></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.455%" y="1109" fill="#CE8210" fg:w="2" fg:x="4926"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.455%" y="1093" fill="#DC3619" fg:w="2" fg:x="4926"/></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.455%" y="1077" fill="#D20426" fg:w="2" fg:x="4926"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.455%" y="1061" fill="#EE5E27" fg:w="2" fg:x="4926"/></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.455%" y="1045" fill="#EA7C22" fg:w="2" fg:x="4926"/></g><g><title>serde::de::MapAccess::next_value (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.475%" y="1029" fill="#DD5B28" fg:w="1" fg:x="4927"/></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.475%" y="1013" fill="#F6351C" fg:w="1" fg:x="4927"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.475%" y="997" fill="#E56D07" fg:w="1" fg:x="4927"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.475%" y="981" fill="#F97508" fg:w="1" fg:x="4927"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.475%" y="965" fill="#D2B501" fg:w="1" fg:x="4927"/></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.475%" y="949" fill="#D34201" fg:w="1" fg:x="4927"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.475%" y="933" fill="#DD5A0E" fg:w="1" fg:x="4927"/></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.475%" y="917" fill="#DBDE2C" fg:w="1" fg:x="4927"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.475%" y="901" fill="#F62221" fg:w="1" fg:x="4927"/></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.475%" y="885" fill="#E38729" fg:w="1" fg:x="4927"/></g><g><title>serde::de::MapAccess::next_value (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.475%" y="869" fill="#E20F0E" fg:w="1" fg:x="4927"/></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.475%" y="853" fill="#EC942F" fg:w="1" fg:x="4927"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.475%" y="837" fill="#E9A234" fg:w="1" fg:x="4927"/></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::User&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.475%" y="821" fill="#F4231C" fg:w="1" fg:x="4927"/></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.475%" y="805" fill="#CD790A" fg:w="1" fg:x="4927"/></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::User&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.475%" y="789" fill="#FA3A12" fg:w="1" fg:x="4927"/></g><g><title>serde::de::MapAccess::next_key (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.475%" y="773" fill="#D8250D" fg:w="1" fg:x="4927"/></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.475%" y="757" fill="#DDD72A" fg:w="1" fg:x="4927"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.475%" y="741" fill="#D9D613" fg:w="1" fg:x="4927"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.475%" y="725" fill="#E98B0D" fg:w="1" fg:x="4927"/></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.475%" y="709" fill="#F7A817" fg:w="1" fg:x="4927"/></g><g><title>serde_json::ser::to_string_pretty (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="1301" fill="#CFCA01" fg:w="1" fg:x="4928"/></g><g><title>serde_json::ser::to_vec_pretty (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="1285" fill="#DC9B30" fg:w="1" fg:x="4928"/></g><g><title>serde_json::ser::to_writer_pretty (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="1269" fill="#FA2B1A" fg:w="1" fg:x="4928"/></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::Twitter&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="1253" fill="#D4BE17" fg:w="1" fg:x="4928"/></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="1237" fill="#D82718" fg:w="1" fg:x="4928"/></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="1221" fill="#FC7110" fg:w="1" fg:x="4928"/></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="1205" fill="#D07113" fg:w="1" fg:x="4928"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="1189" fill="#EA6B19" fg:w="1" fg:x="4928"/></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="1173" fill="#EAD933" fg:w="1" fg:x="4928"/></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="1157" fill="#FB1D2A" fg:w="1" fg:x="4928"/></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="1141" fill="#DD3E33" fg:w="1" fg:x="4928"/></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="1125" fill="#F0C02B" fg:w="1" fg:x="4928"/></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="1109" fill="#E09D2F" fg:w="1" fg:x="4928"/></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="1093" fill="#E2542D" fg:w="1" fg:x="4928"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="1077" fill="#D0CF17" fg:w="1" fg:x="4928"/></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::Status&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="1061" fill="#FD2233" fg:w="1" fg:x="4928"/></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="1045" fill="#E31A22" fg:w="1" fg:x="4928"/></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="1029" fill="#F54B13" fg:w="1" fg:x="4928"/></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="1013" fill="#FABF1F" fg:w="1" fg:x="4928"/></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::User&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="997" fill="#E00B32" fg:w="1" fg:x="4928"/></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="981" fill="#E7AB07" fg:w="1" fg:x="4928"/></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="965" fill="#FCD60A" fg:w="1" fg:x="4928"/></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="949" fill="#F92D2E" fg:w="1" fg:x="4928"/></g><g><title>&lt;serde_json::ser::PrettyFormatter as serde_json::ser::Formatter&gt;::begin_object_value (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="933" fill="#F0AD07" fg:w="1" fg:x="4928"/></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="917" fill="#EBD60D" fg:w="1" fg:x="4928"/></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="901" fill="#F59C08" fg:w="1" fg:x="4928"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="885" fill="#EB2E0C" fg:w="1" fg:x="4928"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="869" fill="#DD510E" fg:w="1" fg:x="4928"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="853" fill="#EECF09" fg:w="1" fg:x="4928"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="837" fill="#E08123" fg:w="1" fg:x="4928"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="821" fill="#F3DA22" fg:w="1" fg:x="4928"/></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::Status&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.495%" y="805" fill="#DCA60D" fg:w="1" fg:x="4928"/></g><g><title>sonic_rs::serde::de::from_slice (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="1301" fill="#E3A731" fg:w="1" fg:x="4929"/></g><g><title>sonic_rs::serde::de::from_trait (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="1285" fill="#EA8E0C" fg:w="1" fg:x="4929"/></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Twitter&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="1269" fill="#CF6430" fg:w="1" fg:x="4929"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="1253" fill="#D2190E" fg:w="1" fg:x="4929"/></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Twitter&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="1237" fill="#F6741B" fg:w="1" fg:x="4929"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="1221" fill="#D6C12A" fg:w="1" fg:x="4929"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="1205" fill="#D67A08" fg:w="1" fg:x="4929"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="1189" fill="#F4AD12" fg:w="1" fg:x="4929"/></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="1173" fill="#E84413" fg:w="1" fg:x="4929"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="1157" fill="#ECE001" fg:w="1" fg:x="4929"/></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="1141" fill="#F00B08" fg:w="1" fg:x="4929"/></g><g><title>serde::de::SeqAccess::next_element (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="1125" fill="#F49F14" fg:w="1" fg:x="4929"/></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="1109" fill="#F0DF36" fg:w="1" fg:x="4929"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="1093" fill="#ED9205" fg:w="1" fg:x="4929"/></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="1077" fill="#DADD20" fg:w="1" fg:x="4929"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="1061" fill="#F4601A" fg:w="1" fg:x="4929"/></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="1045" fill="#F5B825" fg:w="1" fg:x="4929"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="1029" fill="#F85B2F" fg:w="1" fg:x="4929"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="1013" fill="#F3C708" fg:w="1" fg:x="4929"/></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="997" fill="#F90C0F" fg:w="1" fg:x="4929"/></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::User&gt;::deserialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="981" fill="#F5610C" fg:w="1" fg:x="4929"/></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="965" fill="#F43D01" fg:w="1" fg:x="4929"/></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::User&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="949" fill="#DEC20A" fg:w="1" fg:x="4929"/></g><g><title>serde::de::MapAccess::next_key (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="933" fill="#E2B208" fg:w="1" fg:x="4929"/></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="917" fill="#F12022" fg:w="1" fg:x="4929"/></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::User&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.515%" y="901" fill="#FE1A06" fg:w="1" fg:x="4929"/></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::StatusEntities&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.536%" y="997" fill="#F9470B" fg:w="1" fg:x="4930"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.536%" y="981" fill="#E8AA1B" fg:w="1" fg:x="4930"/></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.536%" y="965" fill="#D6DF11" fg:w="1" fg:x="4930"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.536%" y="949" fill="#FA120F" fg:w="1" fg:x="4930"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.536%" y="933" fill="#D49933" fg:w="1" fg:x="4930"/></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.536%" y="917" fill="#DBC20C" fg:w="1" fg:x="4930"/></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.536%" y="901" fill="#D43A11" fg:w="1" fg:x="4930"/></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.536%" y="885" fill="#FE050A" fg:w="1" fg:x="4930"/></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.536%" y="869" fill="#F65B07" fg:w="1" fg:x="4930"/></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.536%" y="853" fill="#DA6C31" fg:w="1" fg:x="4930"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.536%" y="837" fill="#EE7B14" fg:w="1" fg:x="4930"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.536%" y="821" fill="#E74517" fg:w="1" fg:x="4930"/></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::UserMention&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.536%" y="805" fill="#E6D103" fg:w="1" fg:x="4930"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.536%" y="789" fill="#E71300" fg:w="1" fg:x="4930"/></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.536%" y="773" fill="#E2C019" fg:w="1" fg:x="4930"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.536%" y="757" fill="#DFAF35" fg:w="1" fg:x="4930"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.536%" y="741" fill="#F82333" fg:w="1" fg:x="4930"/></g><g><title>&lt;sonic_rs::serde::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.536%" y="725" fill="#E6251A" fg:w="1" fg:x="4930"/></g><g><title>&lt;&amp;mut sonic_rs::serde::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.536%" y="709" fill="#CE7816" fg:w="1" fg:x="4930"/></g><g><title>sonic_rs::format::Formatter::write_string_fast (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.536%" y="693" fill="#CFA51C" fg:w="1" fg:x="4930"/></g><g><title>__libc_start_main (968 samples, 19.54%)</title><rect width="19.544%" height="15" x="80.032%" y="1573" fill="#E2172E" fg:w="968" fg:x="3964"/><text x="80.282%" y="1583.5">__libc_start_main</text></g><g><title>main (968 samples, 19.54%)</title><rect width="19.544%" height="15" x="80.032%" y="1557" fill="#D0822C" fg:w="968" fg:x="3964"/><text x="80.282%" y="1567.5">main</text></g><g><title>std::rt::lang_start_internal (968 samples, 19.54%)</title><rect width="19.544%" height="15" x="80.032%" y="1541" fill="#E74308" fg:w="968" fg:x="3964"/><text x="80.282%" y="1551.5">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (968 samples, 19.54%)</title><rect width="19.544%" height="15" x="80.032%" y="1525" fill="#CDB716" fg:w="968" fg:x="3964"/><text x="80.282%" y="1535.5">std::panic::catch_unwind</text></g><g><title>std::panicking::try (968 samples, 19.54%)</title><rect width="19.544%" height="15" x="80.032%" y="1509" fill="#E02F09" fg:w="968" fg:x="3964"/><text x="80.282%" y="1519.5">std::panicking::try</text></g><g><title>std::panicking::try::do_call (968 samples, 19.54%)</title><rect width="19.544%" height="15" x="80.032%" y="1493" fill="#FAB731" fg:w="968" fg:x="3964"/><text x="80.282%" y="1503.5">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (968 samples, 19.54%)</title><rect width="19.544%" height="15" x="80.032%" y="1477" fill="#DC9727" fg:w="968" fg:x="3964"/><text x="80.282%" y="1487.5">std::rt::lang_start_internal::_..</text></g><g><title>std::panic::catch_unwind (968 samples, 19.54%)</title><rect width="19.544%" height="15" x="80.032%" y="1461" fill="#DC7614" fg:w="968" fg:x="3964"/><text x="80.282%" y="1471.5">std::panic::catch_unwind</text></g><g><title>std::panicking::try (968 samples, 19.54%)</title><rect width="19.544%" height="15" x="80.032%" y="1445" fill="#E74133" fg:w="968" fg:x="3964"/><text x="80.282%" y="1455.5">std::panicking::try</text></g><g><title>std::panicking::try::do_call (968 samples, 19.54%)</title><rect width="19.544%" height="15" x="80.032%" y="1429" fill="#FD7D25" fg:w="968" fg:x="3964"/><text x="80.282%" y="1439.5">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (968 samples, 19.54%)</title><rect width="19.544%" height="15" x="80.032%" y="1413" fill="#E86606" fg:w="968" fg:x="3964"/><text x="80.282%" y="1423.5">core::ops::function::impls::&lt;im..</text></g><g><title>std::rt::lang_start::_{{closure}} (968 samples, 19.54%)</title><rect width="19.544%" height="15" x="80.032%" y="1397" fill="#FB690D" fg:w="968" fg:x="3964"/><text x="80.282%" y="1407.5">std::rt::lang_start::_{{closure..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (968 samples, 19.54%)</title><rect width="19.544%" height="15" x="80.032%" y="1381" fill="#DEB31D" fg:w="968" fg:x="3964"/><text x="80.282%" y="1391.5">std::sys_common::backtrace::__r..</text></g><g><title>core::ops::function::FnOnce::call_once (968 samples, 19.54%)</title><rect width="19.544%" height="15" x="80.032%" y="1365" fill="#E5B435" fg:w="968" fg:x="3964"/><text x="80.282%" y="1375.5">core::ops::function::FnOnce::ca..</text></g><g><title>deserialize_struct::main (968 samples, 19.54%)</title><rect width="19.544%" height="15" x="80.032%" y="1349" fill="#EE680D" fg:w="968" fg:x="3964"/><text x="80.282%" y="1359.5">deserialize_struct::main</text></g><g><title>deserialize_struct::benches (967 samples, 19.52%)</title><rect width="19.523%" height="15" x="80.052%" y="1333" fill="#D28205" fg:w="967" fg:x="3965"/><text x="80.302%" y="1343.5">deserialize_struct::benches</text></g><g><title>deserialize_struct::bench_twitter_Twitter (15 samples, 0.30%)</title><rect width=".303%" height="15" x="99.273%" y="1317" fill="#E95731" fg:w="15" fg:x="4917"/></g><g><title>sonic_rs::serde::ser::to_string_pretty (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.536%" y="1301" fill="#F32209" fg:w="2" fg:x="4930"/></g><g><title>sonic_rs::serde::ser::to_vec_pretty (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.536%" y="1285" fill="#EBE10A" fg:w="2" fg:x="4930"/></g><g><title>sonic_rs::serde::ser::to_writer_pretty (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.536%" y="1269" fill="#D4001E" fg:w="2" fg:x="4930"/></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::Twitter&gt;::serialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.536%" y="1253" fill="#D3B100" fg:w="2" fg:x="4930"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.536%" y="1237" fill="#E1DC0B" fg:w="2" fg:x="4930"/></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.536%" y="1221" fill="#D70A0D" fg:w="2" fg:x="4930"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.536%" y="1205" fill="#F0B10E" fg:w="2" fg:x="4930"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.536%" y="1189" fill="#F30727" fg:w="2" fg:x="4930"/></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.536%" y="1173" fill="#D46300" fg:w="2" fg:x="4930"/></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.536%" y="1157" fill="#E1A230" fg:w="2" fg:x="4930"/></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.536%" y="1141" fill="#F61019" fg:w="2" fg:x="4930"/></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.536%" y="1125" fill="#DC9602" fg:w="2" fg:x="4930"/></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.536%" y="1109" fill="#ED710B" fg:w="2" fg:x="4930"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.536%" y="1093" fill="#EC4614" fg:w="2" fg:x="4930"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.536%" y="1077" fill="#EA5E07" fg:w="2" fg:x="4930"/></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::Status&gt;::serialize (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.536%" y="1061" fill="#FADD00" fg:w="2" fg:x="4930"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.536%" y="1045" fill="#F5952E" fg:w="2" fg:x="4930"/></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.536%" y="1029" fill="#D7251B" fg:w="2" fg:x="4930"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.536%" y="1013" fill="#E84103" fg:w="2" fg:x="4930"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="997" fill="#D60210" fg:w="1" fg:x="4931"/></g><g><title>&lt;&amp;mut sonic_rs::serde::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_some (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="981" fill="#E38332" fg:w="1" fg:x="4931"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="965" fill="#F7832D" fg:w="1" fg:x="4931"/></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::Status&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="949" fill="#D7612F" fg:w="1" fg:x="4931"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="933" fill="#E98F0C" fg:w="1" fg:x="4931"/></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="917" fill="#DE3911" fg:w="1" fg:x="4931"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="901" fill="#D67726" fg:w="1" fg:x="4931"/></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::StatusEntities&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="885" fill="#D91C2F" fg:w="1" fg:x="4931"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="869" fill="#E70E34" fg:w="1" fg:x="4931"/></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="853" fill="#DC9E12" fg:w="1" fg:x="4931"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="837" fill="#DE8F2E" fg:w="1" fg:x="4931"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="821" fill="#E3A505" fg:w="1" fg:x="4931"/></g><g><title>&lt;&amp;mut sonic_rs::serde::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_some (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="805" fill="#D8DE31" fg:w="1" fg:x="4931"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="789" fill="#EE4927" fg:w="1" fg:x="4931"/></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="773" fill="#FC7309" fg:w="1" fg:x="4931"/></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="757" fill="#EECA04" fg:w="1" fg:x="4931"/></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="741" fill="#FC992C" fg:w="1" fg:x="4931"/></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="725" fill="#EB801B" fg:w="1" fg:x="4931"/></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="709" fill="#DD792F" fg:w="1" fg:x="4931"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="693" fill="#F7D32F" fg:w="1" fg:x="4931"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="677" fill="#FC2F31" fg:w="1" fg:x="4931"/></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::Media&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="661" fill="#DB7735" fg:w="1" fg:x="4931"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="645" fill="#F3A535" fg:w="1" fg:x="4931"/></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="629" fill="#E60C23" fg:w="1" fg:x="4931"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="613" fill="#EF3931" fg:w="1" fg:x="4931"/></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="597" fill="#E79A07" fg:w="1" fg:x="4931"/></g><g><title>&lt;sonic_rs::serde::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="581" fill="#F85122" fg:w="1" fg:x="4931"/></g><g><title>&lt;&amp;mut sonic_rs::serde::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="565" fill="#F70905" fg:w="1" fg:x="4931"/></g><g><title>sonic_rs::format::Formatter::write_string_fast (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="549" fill="#E4AC1B" fg:w="1" fg:x="4931"/></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;u8&gt; as sonic_rs::writer::WriterExt&gt;::reserve_with (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="533" fill="#E6392C" fg:w="1" fg:x="4931"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="517" fill="#F92316" fg:w="1" fg:x="4931"/></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="501" fill="#FA891B" fg:w="1" fg:x="4931"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="485" fill="#FB391F" fg:w="1" fg:x="4931"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="469" fill="#EE3C00" fg:w="1" fg:x="4931"/></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="453" fill="#F2B927" fg:w="1" fg:x="4931"/></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="437" fill="#F03F2B" fg:w="1" fg:x="4931"/></g><g><title>?? (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="421" fill="#EC9B06" fg:w="1" fg:x="4931"/></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="405" fill="#D70B1D" fg:w="1" fg:x="4931"/></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="389" fill="#E4B430" fg:w="1" fg:x="4931"/></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="373" fill="#F1660C" fg:w="1" fg:x="4931"/></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="357" fill="#F6D504" fg:w="1" fg:x="4931"/></g><g><title>iralloct (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="341" fill="#DA8623" fg:w="1" fg:x="4931"/></g><g><title>_rjem_je_arena_ralloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="325" fill="#FB7523" fg:w="1" fg:x="4931"/></g><g><title>_rjem_je_large_ralloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="309" fill="#CE9C2D" fg:w="1" fg:x="4931"/></g><g><title>_rjem_je_large_ralloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="293" fill="#DA341B" fg:w="1" fg:x="4931"/></g><g><title>_rjem_je_large_palloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="277" fill="#EE5324" fg:w="1" fg:x="4931"/></g><g><title>_rjem_je_arena_extent_alloc_large (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="261" fill="#DA352B" fg:w="1" fg:x="4931"/></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="245" fill="#EF3627" fg:w="1" fg:x="4931"/></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="229" fill="#D4C60D" fg:w="1" fg:x="4931"/></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="213" fill="#EA362E" fg:w="1" fg:x="4931"/></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="197" fill="#D97807" fg:w="1" fg:x="4931"/></g><g><title>atomic_fetch_add_zu (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.556%" y="181" fill="#F6270F" fg:w="1" fg:x="4931"/></g><g><title>_start (969 samples, 19.56%)</title><rect width="19.564%" height="15" x="80.032%" y="1589" fill="#F28F1F" fg:w="969" fg:x="3964"/><text x="80.282%" y="1599.5">_start</text></g><g><title>_dl_start (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.576%" y="1573" fill="#FC3C18" fg:w="1" fg:x="4932"/></g><g><title>_dl_sysdep_start (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.576%" y="1557" fill="#F9DC07" fg:w="1" fg:x="4932"/></g><g><title>dl_main (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.576%" y="1541" fill="#EC430D" fg:w="1" fg:x="4932"/></g><g><title>_dl_relocate_object (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.576%" y="1525" fill="#D23E27" fg:w="1" fg:x="4932"/></g><g><title>base_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.596%" y="1589" fill="#DB7A35" fg:w="1" fg:x="4933"/></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.596%" y="1573" fill="#DA5719" fg:w="1" fg:x="4933"/></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.596%" y="1557" fill="#EAB330" fg:w="1" fg:x="4933"/></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.596%" y="1541" fill="#F85A00" fg:w="1" fg:x="4933"/></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.616%" y="1589" fill="#CFE425" fg:w="1" fg:x="4934"/></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.616%" y="1573" fill="#EBD60F" fg:w="1" fg:x="4934"/></g><g><title>_rjem_je_eset_fit (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.616%" y="1557" fill="#D29027" fg:w="1" fg:x="4934"/></g><g><title>deserialize_str (4,836 samples, 97.64%)</title><rect width="97.638%" height="15" x="2.019%" y="1605" fill="#DE4329" fg:w="4836" fg:x="100"/><text x="2.269%" y="1615.5">deserialize_str</text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.637%" y="1589" fill="#CD2325" fg:w="1" fg:x="4935"/></g><g><title>pac_ehooks_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.637%" y="1573" fill="#D87D28" fg:w="1" fg:x="4935"/></g><g><title>_rjem_je_base_ehooks_get (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.637%" y="1557" fill="#E4E314" fg:w="1" fg:x="4935"/></g><g><title>_dl_start_user (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.657%" y="1589" fill="#F2AD2D" fg:w="1" fg:x="4936"/></g><g><title>_dl_init (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.657%" y="1573" fill="#D74F18" fg:w="1" fg:x="4936"/></g><g><title>call_init.part.0 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.657%" y="1557" fill="#EEA426" fg:w="1" fg:x="4936"/></g><g><title>[libselinux.so.1] (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.657%" y="1541" fill="#F5C426" fg:w="1" fg:x="4936"/></g><g><title>selinuxfs_exists (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.657%" y="1525" fill="#E7D91D" fg:w="1" fg:x="4936"/></g><g><title>__fopen_internal (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.657%" y="1509" fill="#F50604" fg:w="1" fg:x="4936"/></g><g><title>malloc_hook_ini (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.657%" y="1493" fill="#D64C31" fg:w="1" fg:x="4936"/></g><g><title>ptmalloc_init.part.0 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.657%" y="1477" fill="#CD600C" fg:w="1" fg:x="4936"/></g><g><title>__GI__dl_addr (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.657%" y="1461" fill="#F38304" fg:w="1" fg:x="4936"/></g><g><title>_dl_runtime_resolve_xsavec (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.657%" y="1445" fill="#D67204" fg:w="1" fg:x="4936"/></g><g><title>_dl_fixup (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.657%" y="1429" fill="#EAD70F" fg:w="1" fg:x="4936"/></g><g><title>open_path (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.697%" y="1461" fill="#FAD82D" fg:w="1" fg:x="4938"/></g><g><title>open_verify.constprop.12 (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.697%" y="1445" fill="#EC8004" fg:w="1" fg:x="4938"/></g><g><title>__GI___open_nocancel (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.697%" y="1429" fill="#EA3221" fg:w="1" fg:x="4938"/></g><g><title>_dl_map_object_deps (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.677%" y="1525" fill="#FD8325" fg:w="3" fg:x="4937"/></g><g><title>_dl_catch_exception (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.677%" y="1509" fill="#DA371B" fg:w="3" fg:x="4937"/></g><g><title>openaux (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.677%" y="1493" fill="#F1DC1C" fg:w="3" fg:x="4937"/></g><g><title>_dl_map_object (3 samples, 0.06%)</title><rect width=".061%" height="15" x="99.677%" y="1477" fill="#F15A30" fg:w="3" fg:x="4937"/></g><g><title>strcmp (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.717%" y="1461" fill="#D82B25" fg:w="1" fg:x="4939"/></g><g><title>_dl_receive_error (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.737%" y="1525" fill="#CFAD09" fg:w="1" fg:x="4940"/></g><g><title>version_check_doit (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.737%" y="1509" fill="#F07E1E" fg:w="1" fg:x="4940"/></g><g><title>_dl_check_all_versions (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.737%" y="1493" fill="#E4B235" fg:w="1" fg:x="4940"/></g><g><title>_dl_check_map_versions (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.737%" y="1477" fill="#D92104" fg:w="1" fg:x="4940"/></g><g><title>_dl_name_match_p (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.737%" y="1461" fill="#CE7C22" fg:w="1" fg:x="4940"/></g><g><title>strcmp (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.737%" y="1445" fill="#D07A35" fg:w="1" fg:x="4940"/></g><g><title>all (4,953 samples, 100%)</title><rect width="100%" height="15" x="0%" y="1621" fill="#D7CA1A" fg:w="4953" fg:x="0"/></g><g><title>gnuplot (17 samples, 0.34%)</title><rect width=".343%" height="15" x="99.657%" y="1605" fill="#E8C61F" fg:w="17" fg:x="4936"/></g><g><title>_start (16 samples, 0.32%)</title><rect width=".323%" height="15" x="99.677%" y="1589" fill="#DE1723" fg:w="16" fg:x="4937"/></g><g><title>_dl_start (16 samples, 0.32%)</title><rect width=".323%" height="15" x="99.677%" y="1573" fill="#F21B35" fg:w="16" fg:x="4937"/></g><g><title>_dl_sysdep_start (16 samples, 0.32%)</title><rect width=".323%" height="15" x="99.677%" y="1557" fill="#D2D82A" fg:w="16" fg:x="4937"/></g><g><title>dl_main (16 samples, 0.32%)</title><rect width=".323%" height="15" x="99.677%" y="1541" fill="#EA2726" fg:w="16" fg:x="4937"/></g><g><title>_dl_relocate_object (12 samples, 0.24%)</title><rect width=".242%" height="15" x="99.758%" y="1525" fill="#EB7E36" fg:w="12" fg:x="4941"/></g><g><title>_dl_lookup_symbol_x (10 samples, 0.20%)</title><rect width=".202%" height="15" x="99.798%" y="1509" fill="#EB9621" fg:w="10" fg:x="4943"/></g><g><title>do_lookup_x (9 samples, 0.18%)</title><rect width=".182%" height="15" x="99.818%" y="1493" fill="#F93135" fg:w="9" fg:x="4944"/></g><g><title>check_match (2 samples, 0.04%)</title><rect width=".04%" height="15" x="99.96%" y="1477" fill="#EE3C32" fg:w="2" fg:x="4951"/></g><g><title>strcmp (1 samples, 0.02%)</title><rect width=".02%" height="15" x="99.98%" y="1461" fill="#D20502" fg:w="1" fg:x="4952"/></g></svg></svg>